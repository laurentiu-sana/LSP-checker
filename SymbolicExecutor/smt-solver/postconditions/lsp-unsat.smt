(benchmark sav11
  :logic AUFNIRA
  :status unknown
  :extrafuns ( (xsub Int) (ysub Int) )
  :formula
  (not (or  (exists ( ysuper Int )  (exists ( xsuper Int )  (and  ( <= ( - xsuper ysuper ) 0 )   (and ( > ysub 0) (and ( < xsub 0) ( <= ( + ysub xsub ) 0 ) ) )   (=  xsuper   ( * xsub 2 )  ) ) ) ) (exists ( ysuper Int )  (exists ( xsuper Int )  (and  ( <= ( - xsuper ysuper ) 0 )   (and ( >= xsub 0) ( <= ( + ysub xsub ) 0 ) )   (=  xsuper   ysub  ) ) ) ) (exists ( ysuper Int )  (exists ( xsuper Int )  (and  ( <= ( - xsuper ysuper ) 0 )   (and ( >= xsub 0) (and ( <= xsub 0) ( > ( + ysub xsub ) 0 ) ) )   (=  xsuper   ysub  ) ) ) ) (exists ( ysuper Int )  (exists ( xsuper Int )  (and  ( <= ( - xsuper ysuper ) 0 )   (and ( > xsub 0) ( > ( + ysub xsub ) 0 ) )   (=  xsuper   xsub  ) ) ) ) (exists ( ysuper Int )  (exists ( xsuper Int )  (and  ( <= ( - xsuper ysuper ) 0 )   (and ( <= ysub 0) (and ( < xsub 0) ( <= ( + ysub xsub ) 0 ) ) )   (=  xsuper   ysub  ) ) ) ) (exists ( ysuper Int )  (exists ( xsuper Int )  (and  ( <= ( - xsuper ysuper ) 0 )   (and ( > ysub 0) (and ( < xsub 0) (and ( <= xsub 0) ( > ( + ysub xsub ) 0 ) ) ) )   (=  xsuper   ( * xsub 2 )  ) ) ) ) (exists ( ysuper Int )  (exists ( xsuper Int )  (and  ( > ( - xsuper ysuper ) 0 )   (and ( > ysub 0) (and ( < xsub 0) ( <= ( + ysub xsub ) 0 ) ) )   (=  ysuper   ( * xsub 2 )  ) ) ) ) (exists ( ysuper Int )  (exists ( xsuper Int )  (and  ( > ( - xsuper ysuper ) 0 )   (and ( >= xsub 0) ( <= ( + ysub xsub ) 0 ) )   (=  ysuper   ysub  ) ) ) ) (exists ( ysuper Int )  (exists ( xsuper Int )  (and  ( > ( - xsuper ysuper ) 0 )   (and ( >= xsub 0) (and ( <= xsub 0) ( > ( + ysub xsub ) 0 ) ) )   (=  ysuper   ysub  ) ) ) ) (exists ( ysuper Int )  (exists ( xsuper Int )  (and  ( > ( - xsuper ysuper ) 0 )   (and ( > xsub 0) ( > ( + ysub xsub ) 0 ) )   (=  ysuper   xsub  ) ) ) ) (exists ( ysuper Int )  (exists ( xsuper Int )  (and  ( > ( - xsuper ysuper ) 0 )   (and ( <= ysub 0) (and ( < xsub 0) ( <= ( + ysub xsub ) 0 ) ) )   (=  ysuper   ysub  ) ) ) ) (exists ( ysuper Int )  (exists ( xsuper Int )  (and  ( > ( - xsuper ysuper ) 0 )   (and ( > ysub 0) (and ( < xsub 0) (and ( <= xsub 0) ( > ( + ysub xsub ) 0 ) ) ) )   (=  ysuper   ( * xsub 2 )  ) ) ) )) )

)
