<?xml version="1.0" encoding="UTF-8"?><sut><testsuite name="lsp.test.stateful.lsp"><testcase name="lsp.tests.LSPCheckerGeneratedTestSTATEFUL"><classes><class name="lsp.test.stateful.DummyImplementation6"><method name="&lt;init&gt;()"/><method name="preconditions(sym)"/></class><class name="lsp.test.stateful.DummyInterface"><method name="getResults()"/></class><class name="lsp.test.stateful.DummySubClass"><method name="preconditions(sym#sym)"/><method name="postconditions(sym#sym)"/><method name="&lt;init&gt;()"/><method name="bar(sym)"/><method name="foo(sym#sym)"/><method name="mainLSPChecker(sym)"/></class><class name="lsp.test.stateful.DummyImplementation5"><method name="&lt;init&gt;()"/><method name="postconditions(sym)"/><method name="preconditions(sym)"/></class><class name="lsp.test.stateful.DummyImplementation4"><method name="&lt;init&gt;()"/><method name="getResults()"/><method name="postconditions(sym)"/><method name="preconditions(sym)"/></class><class name="lsp.test.stateful.DummyConstants"><method name="getConfiguration()"/><method name="&lt;init&gt;()"/><method name="getValue(sym)"/><method name="computeScore(sym#sym)"/><method name="doSomething()"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.stateful.DummyImplementation3"><method name="&lt;init&gt;()"/><method name="getResults()"/><method name="postconditions(sym)"/><method name="preconditions(sym)"/></class><class name="lsp.test.stateful.DummySuperClass"><method name="inv7(sym)"/><method name="inv8(sym)"/><method name="&lt;init&gt;()"/><method name="privatePreconditions(sym)"/><method name="testPreconditions(sym)"/><method name="preconditions(sym#sym)"/><method name="bar(sym)"/><method name="foo(sym#sym)"/><method name="isAlive()"/><method name="isAlive(sym#sym)"/><method name="getMember()"/><method name="toString()"/><method name="isSet()"/><method name="inv1()"/><method name="inv2()"/><method name="inv3()"/><method name="inv4()"/><method name="inv5()"/><method name="inv6()"/><method name="mainLSPChecker(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.stateful.DummyImplementation2"><method name="&lt;init&gt;()"/><method name="getResults()"/><method name="bar()"/><method name="postconditions(sym)"/><method name="preconditions(sym)"/></class><class name="lsp.test.stateful.DummyImplementation1"><method name="&lt;init&gt;()"/><method name="foo()"/><method name="getResults()"/><method name="postconditions(sym)"/><method name="preconditions(sym)"/></class><class name="lsp.test.stateful.DummyBaseInterface"><method name="preconditions(sym)"/><method name="postconditions(sym)"/></class></classes><mainclass name="lsp.tests.LSPCheckerGeneratedTestSTATEFUL"/></testcase></testsuite></sut>