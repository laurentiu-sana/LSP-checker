<?xml version="1.0" encoding="UTF-8"?><sut><testsuite name="lsp.test.jdk.util.lsp"><testcase name="lsp.tests.LSPCheckerGeneratedTestJDK"><classes><class name="lsp.test.jdk.util.CollationKey"><method name="&lt;init&gt;(sym#sym)"/><method name="equals(sym)"/><method name="compareTo(sym)"/><method name="compareTo(sym)"/><method name="getSourceString()"/><method name="hashCode()"/><method name="toByteArray()"/></class><class name="lsp.test.jdk.util.ResourceBundle"><method name="findBundle(sym#sym#sym#sym#sym#sym)"/><method name="putBundleInCache(sym#sym#sym)"/><method name="getBundle(sym#sym#sym)"/><method name="getBundle(sym#sym#sym#sym)"/><method name="getBundleImpl(sym#sym#sym#sym)"/><method name="getBundle(sym#sym)"/><method name="getBundle(sym#sym#sym)"/><method name="loadBundle(sym#sym#sym#sym)"/><method name="findBundleInCache(sym#sym)"/><method name="getBundle(sym#sym)"/><method name="setParent(sym)"/><method name="getBundle(sym)"/><method name="isValidBundle(sym)"/><method name="hasValidParentChain(sym)"/><method name="getLocale()"/><method name="throwMissingResourceException(sym#sym#sym)"/><method name="setExpirationTime(sym#sym)"/><method name="getClassContext()"/><method name="getObject(sym)"/><method name="handleGetObject(sym)"/><method name="checkList(sym)"/><method name="keySet()"/><method name="handleKeySet()"/><method name="getKeys()"/><method name="&lt;init&gt;()"/><method name="getString(sym)"/><method name="getStringArray(sym)"/><method name="getLoader()"/><method name="clearCache()"/><method name="clearCache(sym)"/><method name="containsKey(sym)"/><method name="access$200()"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.sql.Connection"><method name="setClientInfo(sym)"/><method name="getClientInfo()"/><method name="createArrayOf(sym#sym)"/><method name="createStruct(sym#sym)"/><method name="getWarnings()"/><method name="getTypeMap()"/><method name="setTypeMap(sym)"/><method name="createStatement()"/><method name="createStatement(sym#sym)"/><method name="createStatement(sym#sym#sym)"/><method name="prepareStatement(sym)"/><method name="prepareStatement(sym#sym)"/><method name="prepareStatement(sym#sym)"/><method name="prepareStatement(sym#sym#sym)"/><method name="prepareStatement(sym#sym#sym#sym)"/><method name="prepareStatement(sym#sym)"/><method name="createClob()"/><method name="getMetaData()"/><method name="prepareCall(sym)"/><method name="prepareCall(sym#sym#sym)"/><method name="prepareCall(sym#sym#sym#sym)"/><method name="releaseSavepoint(sym)"/><method name="rollback(sym)"/><method name="setSavepoint()"/><method name="setSavepoint(sym)"/><method name="createBlob()"/><method name="createNClob()"/><method name="createSQLXML()"/><method name="clearWarnings()"/><method name="close()"/><method name="commit()"/><method name="getAutoCommit()"/><method name="getCatalog()"/><method name="getHoldability()"/><method name="getTransactionIsolation()"/><method name="isClosed()"/><method name="isReadOnly()"/><method name="nativeSQL(sym)"/><method name="rollback()"/><method name="setAutoCommit(sym)"/><method name="setCatalog(sym)"/><method name="setHoldability(sym)"/><method name="setReadOnly(sym)"/><method name="setTransactionIsolation(sym)"/><method name="isValid(sym)"/><method name="setClientInfo(sym#sym)"/><method name="getClientInfo(sym)"/></class><class name="lsp.test.jdk.util.sql.SQLOutput"><method name="writeTimestamp(sym)"/><method name="writeClob(sym)"/><method name="writeDate(sym)"/><method name="writeTime(sym)"/><method name="writeObject(sym)"/><method name="writeRef(sym)"/><method name="writeBlob(sym)"/><method name="writeStruct(sym)"/><method name="writeArray(sym)"/><method name="writeNClob(sym)"/><method name="writeRowId(sym)"/><method name="writeSQLXML(sym)"/><method name="writeString(sym)"/><method name="writeBoolean(sym)"/><method name="writeByte(sym)"/><method name="writeShort(sym)"/><method name="writeInt(sym)"/><method name="writeLong(sym)"/><method name="writeFloat(sym)"/><method name="writeDouble(sym)"/><method name="writeBigDecimal(sym)"/><method name="writeBytes(sym)"/><method name="writeCharacterStream(sym)"/><method name="writeAsciiStream(sym)"/><method name="writeBinaryStream(sym)"/><method name="writeURL(sym)"/><method name="writeNString(sym)"/></class><class name="lsp.test.jdk.util.Observer"><method name="update(sym#sym)"/></class><class name="lsp.test.jdk.util.HashSet"><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="add(sym)"/><method name="remove(sym)"/><method name="clone()"/><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="iterator()"/><method name="size()"/><method name="isEmpty()"/><method name="clear()"/><method name="writeObject(sym)"/><method name="readObject(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.ParsePosition"><method name="equals(sym)"/><method name="&lt;init&gt;(sym)"/><method name="getErrorIndex()"/><method name="getIndex()"/><method name="hashCode()"/><method name="setErrorIndex(sym)"/><method name="setIndex(sym)"/><method name="toString()"/></class><class name="lsp.test.jdk.util.RandomAccessSubList"><method name="&lt;init&gt;(sym#sym#sym)"/><method name="subList(sym#sym)"/></class><class name="lsp.test.jdk.util.Collections$SynchronizedMap"><method name="put(sym#sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="get(sym)"/><method name="remove(sym)"/><method name="&lt;init&gt;(sym)"/><method name="containsKey(sym)"/><method name="containsValue(sym)"/><method name="putAll(sym)"/><method name="values()"/><method name="equals(sym)"/><method name="keySet()"/><method name="entrySet()"/><method name="size()"/><method name="isEmpty()"/><method name="clear()"/><method name="hashCode()"/><method name="toString()"/><method name="writeObject(sym)"/></class><class name="lsp.test.jdk.util.EnumMap$EnumMapIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="setValue(sym)"/><method name="hasNext()"/><method name="remove()"/><method name="checkLastReturnedIndex()"/></class><class name="lsp.test.jdk.util.sql.SQLTimeoutException"><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/></class><class name="lsp.test.jdk.util.Collections$SetFromMap"><method name="toArray(sym)"/><method name="toArray()"/><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="remove(sym)"/><method name="add(sym)"/><method name="equals(sym)"/><method name="containsAll(sym)"/><method name="removeAll(sym)"/><method name="retainAll(sym)"/><method name="clear()"/><method name="size()"/><method name="isEmpty()"/><method name="iterator()"/><method name="toString()"/><method name="hashCode()"/><method name="readObject(sym)"/></class><class name="lsp.test.jdk.util.TreeMap$NavigableSubMap"><method name="&lt;init&gt;(sym#sym#sym#sym#sym#sym#sym)"/><method name="put(sym#sym)"/><method name="subMap(sym#sym)"/><method name="get(sym)"/><method name="remove(sym)"/><method name="ceilingKey(sym)"/><method name="higherKey(sym)"/><method name="floorKey(sym)"/><method name="lowerKey(sym)"/><method name="absCeiling(sym)"/><method name="absHigher(sym)"/><method name="absFloor(sym)"/><method name="absLower(sym)"/><method name="subCeiling(sym)"/><method name="subHigher(sym)"/><method name="subFloor(sym)"/><method name="subLower(sym)"/><method name="headMap(sym)"/><method name="tailMap(sym)"/><method name="ceilingEntry(sym)"/><method name="higherEntry(sym)"/><method name="floorEntry(sym)"/><method name="lowerEntry(sym)"/><method name="tooLow(sym)"/><method name="tooHigh(sym)"/><method name="inRange(sym)"/><method name="inClosedRange(sym)"/><method name="inRange(sym#sym)"/><method name="containsKey(sym)"/><method name="firstKey()"/><method name="lastKey()"/><method name="absLowest()"/><method name="absHighest()"/><method name="absHighFence()"/><method name="absLowFence()"/><method name="subLowest()"/><method name="subHighest()"/><method name="keySet()"/><method name="firstEntry()"/><method name="lastEntry()"/><method name="pollFirstEntry()"/><method name="pollLastEntry()"/><method name="navigableKeySet()"/><method name="descendingKeySet()"/><method name="keyIterator()"/><method name="descendingKeyIterator()"/><method name="isEmpty()"/><method name="size()"/></class><class name="lsp.test.jdk.util.Hashtable$Entry"><method name="&lt;init&gt;(sym#sym#sym#sym)"/><method name="setValue(sym)"/><method name="clone()"/><method name="getKey()"/><method name="getValue()"/><method name="equals(sym)"/><method name="hashCode()"/><method name="toString()"/></class><class name="lsp.test.jdk.util.Collections$SingletonSet"><method name="access$400(sym)"/><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="iterator()"/><method name="size()"/></class><class name="lsp.test.jdk.util.NumberFormat$Field"><method name="readResolve()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.IdentityHashMap$Values"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="remove(sym)"/><method name="iterator()"/><method name="size()"/><method name="clear()"/></class><class name="lsp.test.jdk.util.Map"><method name="put(sym#sym)"/><method name="get(sym)"/><method name="remove(sym)"/><method name="containsKey(sym)"/><method name="containsValue(sym)"/><method name="putAll(sym)"/><method name="values()"/><method name="equals(sym)"/><method name="keySet()"/><method name="entrySet()"/><method name="size()"/><method name="isEmpty()"/><method name="clear()"/><method name="hashCode()"/></class><class name="lsp.test.jdk.util.Enumeration"><method name="nextElement()"/><method name="hasMoreElements()"/></class><class name="lsp.test.jdk.util.DateFormatSymbols"><method name="getInstance(sym)"/><method name="getAvailableLocales()"/><method name="initBuildInLocales(sym)"/><method name="getInstance()"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="clone()"/><method name="equals(sym)"/><method name="&lt;init&gt;()"/><method name="writeObject(sym)"/><method name="getAmPmStrings()"/><method name="getEras()"/><method name="getLocalPatternChars()"/><method name="getMonths()"/><method name="getShortMonths()"/><method name="getShortWeekdays()"/><method name="getWeekdays()"/><method name="getZoneStrings()"/><method name="hashCode()"/><method name="setAmPmStrings(sym)"/><method name="setEras(sym)"/><method name="setLocalPatternChars(sym)"/><method name="setMonths(sym)"/><method name="setShortMonths(sym)"/><method name="setShortWeekdays(sym)"/><method name="setWeekdays(sym)"/><method name="setZoneStrings(sym)"/><method name="validateZoneStrings(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.sql.Driver"><method name="getPropertyInfo(sym#sym)"/><method name="connect(sym#sym)"/><method name="acceptsURL(sym)"/><method name="getMajorVersion()"/><method name="getMinorVersion()"/><method name="jdbcCompliant()"/></class><class name="lsp.test.jdk.util.Collections$CheckedCollection$1"><method name="&lt;init&gt;(sym)"/><method name="next()"/><method name="hasNext()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.sql.Struct"><method name="getAttributes(sym)"/><method name="getAttributes()"/><method name="getSQLTypeName()"/></class><class name="lsp.test.jdk.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator"><method name="&lt;init&gt;(sym#sym#sym)"/><method name="next()"/><method name="next()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.AbstractSequentialList"><method name="set(sym#sym)"/><method name="get(sym)"/><method name="add(sym#sym)"/><method name="remove(sym)"/><method name="addAll(sym#sym)"/><method name="listIterator(sym)"/><method name="&lt;init&gt;()"/><method name="iterator()"/></class><class name="lsp.test.jdk.util.Format"><method name="getInternalField(sym#sym)"/><method name="format(sym#sym#sym)"/><method name="formatToCharacterIterator(sym)"/><method name="parseObject(sym#sym)"/><method name="clone()"/><method name="format(sym)"/><method name="parseObject(sym)"/><method name="upTo(sym#sym#sym#sym)"/><method name="upToWithQuotes(sym#sym#sym#sym#sym)"/><method name="&lt;init&gt;()"/><method name="convertPattern(sym#sym#sym#sym)"/></class><class name="lsp.test.jdk.util.Stack"><method name="push(sym)"/><method name="pop()"/><method name="peek()"/><method name="search(sym)"/><method name="&lt;init&gt;()"/><method name="empty()"/></class><class name="lsp.test.jdk.util.Map$Entry"><method name="setValue(sym)"/><method name="getKey()"/><method name="getValue()"/><method name="equals(sym)"/><method name="hashCode()"/></class><class name="lsp.test.jdk.util.EventObject"><method name="&lt;init&gt;(sym)"/><method name="getSource()"/><method name="toString()"/></class><class name="lsp.test.jdk.util.Collections$CheckedCollection"><method name="toArray(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="toArray()"/><method name="zeroLengthElementArray()"/><method name="typeCheck(sym)"/><method name="contains(sym)"/><method name="remove(sym)"/><method name="containsAll(sym)"/><method name="removeAll(sym)"/><method name="retainAll(sym)"/><method name="add(sym)"/><method name="addAll(sym)"/><method name="size()"/><method name="isEmpty()"/><method name="toString()"/><method name="clear()"/><method name="iterator()"/></class><class name="lsp.test.jdk.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1"><method name="next()"/><method name="next()"/><method name="&lt;init&gt;(sym)"/><method name="hasNext()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.ArrayDeque$DeqIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="next()"/><method name="hasNext()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.ICUCache"><method name="put(sym#sym)"/><method name="get(sym)"/><method name="clear()"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.IdentityHashMap"><method name="access$1300(sym#sym#sym)"/><method name="access$1400(sym#sym#sym)"/><method name="access$100(sym)"/><method name="access$000(sym)"/><method name="access$200(sym)"/><method name="access$204(sym)"/><method name="access$010(sym)"/><method name="put(sym#sym)"/><method name="maskNull(sym)"/><method name="unmaskNull(sym)"/><method name="get(sym)"/><method name="containsMapping(sym#sym)"/><method name="remove(sym)"/><method name="removeMapping(sym#sym)"/><method name="putForCreate(sym#sym)"/><method name="access$600(sym)"/><method name="&lt;init&gt;(sym)"/><method name="hash(sym#sym)"/><method name="containsKey(sym)"/><method name="containsValue(sym)"/><method name="putAll(sym)"/><method name="equals(sym)"/><method name="clone()"/><method name="values()"/><method name="access$400(sym#sym)"/><method name="keySet()"/><method name="entrySet()"/><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="capacity(sym)"/><method name="init(sym)"/><method name="size()"/><method name="isEmpty()"/><method name="nextKeyIndex(sym#sym)"/><method name="resize(sym)"/><method name="closeDeletion(sym)"/><method name="clear()"/><method name="hashCode()"/><method name="writeObject(sym)"/><method name="readObject(sym)"/><method name="access$300(sym#sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.TreeMap$Entry"><method name="&lt;init&gt;(sym#sym#sym)"/><method name="setValue(sym)"/><method name="getKey()"/><method name="getValue()"/><method name="equals(sym)"/><method name="hashCode()"/><method name="toString()"/></class><class name="lsp.test.jdk.util.TreeMap$KeySet"><method name="subSet(sym#sym)"/><method name="subSet(sym#sym#sym#sym)"/><method name="lower(sym)"/><method name="floor(sym)"/><method name="ceiling(sym)"/><method name="higher(sym)"/><method name="headSet(sym)"/><method name="tailSet(sym)"/><method name="headSet(sym#sym)"/><method name="tailSet(sym#sym)"/><method name="contains(sym)"/><method name="first()"/><method name="last()"/><method name="pollFirst()"/><method name="pollLast()"/><method name="remove(sym)"/><method name="&lt;init&gt;(sym)"/><method name="comparator()"/><method name="descendingSet()"/><method name="iterator()"/><method name="descendingIterator()"/><method name="size()"/><method name="isEmpty()"/><method name="clear()"/></class><class name="lsp.test.jdk.util.Comparator"><method name="compare(sym#sym)"/><method name="equals(sym)"/></class><class name="lsp.test.jdk.util.Collections$UnmodifiableList$1"><method name="&lt;init&gt;(sym#sym)"/><method name="next()"/><method name="previous()"/><method name="set(sym)"/><method name="add(sym)"/><method name="hasNext()"/><method name="hasPrevious()"/><method name="nextIndex()"/><method name="previousIndex()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.ConcurrentModificationException"><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/></class><class name="lsp.test.jdk.util.sql.SQLTransactionRollbackException"><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/></class><class name="lsp.test.jdk.util.IdentityHashMap$EntrySet"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="toArray(sym)"/><method name="toArray()"/><method name="contains(sym)"/><method name="remove(sym)"/><method name="removeAll(sym)"/><method name="iterator()"/><method name="size()"/><method name="clear()"/></class><class name="lsp.test.jdk.util.ULocale$1ULocaleAcceptLanguageQ"><method name="compareTo(sym)"/><method name="&lt;init&gt;(sym#sym)"/></class><class name="lsp.test.jdk.util.TreeMap$AscendingSubMap$AscendingEntrySetView"><method name="&lt;init&gt;(sym)"/><method name="iterator()"/></class><class name="lsp.test.jdk.util.Observable"><method name="notifyObservers(sym)"/><method name="addObserver(sym)"/><method name="deleteObserver(sym)"/><method name="&lt;init&gt;()"/><method name="notifyObservers()"/><method name="deleteObservers()"/><method name="setChanged()"/><method name="clearChanged()"/><method name="hasChanged()"/><method name="countObservers()"/></class><class name="lsp.test.jdk.util.IdentityHashMap$KeyIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="next()"/></class><class name="lsp.test.jdk.util.TreeMap$DescendingSubMap$DescendingEntrySetView"><method name="&lt;init&gt;(sym)"/><method name="iterator()"/></class><class name="lsp.test.jdk.util.Hashtable$EntrySet"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="remove(sym)"/><method name="add(sym)"/><method name="add(sym)"/><method name="iterator()"/><method name="size()"/><method name="clear()"/></class><class name="lsp.test.jdk.util.ServiceLoader"><method name="access$300(sym)"/><method name="access$500(sym)"/><method name="load(sym#sym)"/><method name="load(sym)"/><method name="loadInstalled(sym)"/><method name="access$200(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="fail(sym#sym#sym)"/><method name="fail(sym#sym)"/><method name="fail(sym#sym#sym#sym)"/><method name="parseLine(sym#sym#sym#sym#sym)"/><method name="parse(sym#sym)"/><method name="access$100(sym#sym#sym)"/><method name="access$400(sym#sym)"/><method name="reload()"/><method name="iterator()"/><method name="toString()"/></class><class name="lsp.test.jdk.util.Collections$SingletonSet$1"><method name="next()"/><method name="&lt;init&gt;(sym)"/><method name="hasNext()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.AbstractList$Itr"><method name="&lt;init&gt;(sym)"/><method name="next()"/><method name="hasNext()"/><method name="remove()"/><method name="checkForComodification()"/></class><class name="lsp.test.jdk.util.SimpleTimeZone"><method name="hasSameRules(sym)"/><method name="inDaylightTime(sym)"/><method name="clone()"/><method name="equals(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym#sym#sym#sym#sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym)"/><method name="getDSTSavings()"/><method name="getOffset(sym#sym#sym#sym#sym#sym)"/><method name="getOffset(sym)"/><method name="getRawOffset()"/><method name="hashCode()"/><method name="isLeapYear(sym)"/><method name="setDSTSavings(sym)"/><method name="checkRange(sym#sym#sym)"/><method name="checkDay(sym#sym)"/><method name="setEndMode()"/><method name="setEndRule(sym#sym#sym)"/><method name="setEndRule(sym#sym#sym#sym)"/><method name="setEndRule(sym#sym#sym#sym#sym)"/><method name="setRawOffset(sym)"/><method name="setStartMode()"/><method name="setStartRule(sym#sym#sym)"/><method name="setStartRule(sym#sym#sym#sym)"/><method name="setStartRule(sym#sym#sym#sym#sym)"/><method name="setStartYear(sym)"/><method name="toString()"/><method name="useDaylightTime()"/><method name="writeObject(sym)"/><method name="readObject(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.Calendar"><method name="getInstance(sym#sym)"/><method name="getInstance(sym)"/><method name="getInstance(sym)"/><method name="getInstance()"/><method name="compareTo(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="getAvailableLocales()"/><method name="getDisplayNames(sym#sym#sym)"/><method name="getDisplayName(sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="getTimeZone()"/><method name="setTimeZone(sym)"/><method name="getTime()"/><method name="setTime(sym)"/><method name="after(sym)"/><method name="before(sym)"/><method name="clone()"/><method name="equals(sym)"/><method name="compareTo(sym)"/><method name="&lt;init&gt;()"/><method name="add(sym#sym)"/><method name="clear()"/><method name="clear(sym)"/><method name="complete()"/><method name="computeFields()"/><method name="computeTime()"/><method name="get(sym)"/><method name="getActualMaximum(sym)"/><method name="getActualMinimum(sym)"/><method name="getFirstDayOfWeek()"/><method name="getGreatestMinimum(sym)"/><method name="getLeastMaximum(sym)"/><method name="getMaximum(sym)"/><method name="getMinimalDaysInFirstWeek()"/><method name="getMinimum(sym)"/><method name="getTimeInMillis()"/><method name="hashCode()"/><method name="internalGet(sym)"/><method name="isLenient()"/><method name="isSet(sym)"/><method name="roll(sym#sym)"/><method name="roll(sym#sym)"/><method name="set(sym#sym)"/><method name="set(sym#sym#sym)"/><method name="set(sym#sym#sym#sym#sym)"/><method name="set(sym#sym#sym#sym#sym#sym)"/><method name="setFirstDayOfWeek(sym)"/><method name="setLenient(sym)"/><method name="setMinimalDaysInFirstWeek(sym)"/><method name="setTimeInMillis(sym)"/><method name="toString()"/><method name="writeObject(sym)"/><method name="readObject(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.sql.SQLWarning"><method name="getNextWarning()"/><method name="setNextWarning(sym)"/><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/></class><class name="lsp.test.jdk.util.InputMismatchException"><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/></class><class name="lsp.test.jdk.util.AttributedString"><method name="addAttribute(sym#sym)"/><method name="addAttribute(sym#sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/><method name="getIterator(sym)"/><method name="getIterator(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="addAttributes(sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="getIterator()"/><method name="&lt;init&gt;(sym)"/></class><class name="lsp.test.jdk.util.Collections$CheckedMap"><method name="&lt;init&gt;(sym#sym#sym)"/><method name="put(sym#sym)"/><method name="typeCheck(sym#sym)"/><method name="get(sym)"/><method name="remove(sym)"/><method name="zeroLengthKeyArray()"/><method name="zeroLengthValueArray()"/><method name="containsKey(sym)"/><method name="containsValue(sym)"/><method name="values()"/><method name="equals(sym)"/><method name="putAll(sym)"/><method name="keySet()"/><method name="entrySet()"/><method name="size()"/><method name="isEmpty()"/><method name="clear()"/><method name="hashCode()"/><method name="toString()"/></class><class name="lsp.test.jdk.util.sql.BatchUpdateException"><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym#sym)"/><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/><method name="getUpdateCounts()"/></class><class name="lsp.test.jdk.util.EventListenerProxy"><method name="&lt;init&gt;(sym)"/><method name="getListener()"/></class><class name="lsp.test.jdk.util.TreeMap$EntrySet"><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="remove(sym)"/><method name="iterator()"/><method name="size()"/><method name="clear()"/></class><class name="lsp.test.jdk.util.Hashtable$ValueCollection"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="iterator()"/><method name="size()"/><method name="clear()"/></class><class name="lsp.test.jdk.util.AbstractSet"><method name="equals(sym)"/><method name="removeAll(sym)"/><method name="&lt;init&gt;()"/><method name="hashCode()"/></class><class name="lsp.test.jdk.util.AbstractMap$1"><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="iterator()"/><method name="size()"/></class><class name="lsp.test.jdk.util.Hashtable$Enumerator"><method name="&lt;init&gt;(sym#sym#sym)"/><method name="nextElement()"/><method name="next()"/><method name="hasMoreElements()"/><method name="hasNext()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.LinkedHashMap$KeyIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="next()"/></class><class name="lsp.test.jdk.util.Collections$SynchronizedList"><method name="set(sym#sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="equals(sym)"/><method name="get(sym)"/><method name="add(sym#sym)"/><method name="remove(sym)"/><method name="indexOf(sym)"/><method name="lastIndexOf(sym)"/><method name="addAll(sym#sym)"/><method name="readResolve()"/><method name="&lt;init&gt;(sym)"/><method name="subList(sym#sym)"/><method name="listIterator()"/><method name="listIterator(sym)"/><method name="hashCode()"/></class><class name="lsp.test.jdk.util.CharacterIterator"><method name="clone()"/><method name="current()"/><method name="first()"/><method name="getBeginIndex()"/><method name="getEndIndex()"/><method name="getIndex()"/><method name="last()"/><method name="next()"/><method name="previous()"/><method name="setIndex(sym)"/></class><class name="lsp.test.jdk.util.Collections$CheckedSortedSet"><method name="subSet(sym#sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="headSet(sym)"/><method name="tailSet(sym)"/><method name="first()"/><method name="last()"/><method name="comparator()"/></class><class name="lsp.test.jdk.util.Collections$SingletonMap"><method name="&lt;init&gt;(sym#sym)"/><method name="get(sym)"/><method name="containsKey(sym)"/><method name="containsValue(sym)"/><method name="values()"/><method name="keySet()"/><method name="entrySet()"/><method name="size()"/><method name="isEmpty()"/></class><class name="lsp.test.jdk.util.MissingFormatArgumentException"><method name="&lt;init&gt;(sym)"/><method name="getFormatSpecifier()"/><method name="getMessage()"/></class><class name="lsp.test.jdk.util.HashMap$KeyIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="next()"/></class><class name="lsp.test.jdk.util.AbstractMap$2"><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="iterator()"/><method name="size()"/></class><class name="lsp.test.jdk.util.LinkedHashMap$EntryIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="next()"/><method name="next()"/></class><class name="lsp.test.jdk.util.Collections$UnmodifiableCollection"><method name="toArray(sym)"/><method name="toArray()"/><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="add(sym)"/><method name="remove(sym)"/><method name="containsAll(sym)"/><method name="addAll(sym)"/><method name="removeAll(sym)"/><method name="retainAll(sym)"/><method name="size()"/><method name="isEmpty()"/><method name="toString()"/><method name="iterator()"/><method name="clear()"/></class><class name="lsp.test.jdk.util.sql.SQLPermission"><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/></class><class name="lsp.test.jdk.util.UnknownFormatConversionException"><method name="&lt;init&gt;(sym)"/><method name="getConversion()"/><method name="getMessage()"/></class><class name="lsp.test.jdk.util.LinkedList$Entry"><method name="&lt;init&gt;(sym#sym#sym)"/></class><class name="lsp.test.jdk.util.ICUResourceBundle$AvailEntry"><method name="getLocaleList()"/><method name="getULocaleList()"/><method name="getLocaleNameSet()"/><method name="getFullLocaleNameSet()"/><method name="&lt;init&gt;(sym)"/></class><class name="lsp.test.jdk.util.LinkedList$DescendingIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="next()"/><method name="hasNext()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.sql.CallableStatement"><method name="getObject(sym#sym)"/><method name="getObject(sym#sym)"/><method name="getTimestamp(sym)"/><method name="getTimestamp(sym#sym)"/><method name="getTimestamp(sym)"/><method name="getTimestamp(sym#sym)"/><method name="setTimestamp(sym#sym)"/><method name="setTimestamp(sym#sym#sym)"/><method name="getObject(sym)"/><method name="getObject(sym)"/><method name="setObject(sym#sym)"/><method name="setObject(sym#sym#sym)"/><method name="setObject(sym#sym#sym#sym)"/><method name="getClob(sym)"/><method name="getClob(sym)"/><method name="setClob(sym#sym)"/><method name="getDate(sym)"/><method name="getDate(sym#sym)"/><method name="getDate(sym)"/><method name="getDate(sym#sym)"/><method name="getTime(sym)"/><method name="getTime(sym#sym)"/><method name="getTime(sym)"/><method name="getTime(sym#sym)"/><method name="setDate(sym#sym)"/><method name="setDate(sym#sym#sym)"/><method name="setTime(sym#sym)"/><method name="setTime(sym#sym#sym)"/><method name="getArray(sym)"/><method name="getArray(sym)"/><method name="getBlob(sym)"/><method name="getBlob(sym)"/><method name="getRef(sym)"/><method name="getRef(sym)"/><method name="getRowId(sym)"/><method name="getRowId(sym)"/><method name="setRowId(sym#sym)"/><method name="setNClob(sym#sym)"/><method name="getNClob(sym)"/><method name="getNClob(sym)"/><method name="setSQLXML(sym#sym)"/><method name="getSQLXML(sym)"/><method name="getSQLXML(sym)"/><method name="setBlob(sym#sym)"/><method name="getBigDecimal(sym)"/><method name="getBigDecimal(sym#sym)"/><method name="getBigDecimal(sym)"/><method name="getBoolean(sym)"/><method name="getBoolean(sym)"/><method name="getByte(sym)"/><method name="getByte(sym)"/><method name="getBytes(sym)"/><method name="getBytes(sym)"/><method name="getDouble(sym)"/><method name="getDouble(sym)"/><method name="getFloat(sym)"/><method name="getFloat(sym)"/><method name="getInt(sym)"/><method name="getInt(sym)"/><method name="getLong(sym)"/><method name="getLong(sym)"/><method name="getShort(sym)"/><method name="getShort(sym)"/><method name="getString(sym)"/><method name="getString(sym)"/><method name="getURL(sym)"/><method name="getURL(sym)"/><method name="registerOutParameter(sym#sym)"/><method name="registerOutParameter(sym#sym#sym)"/><method name="registerOutParameter(sym#sym#sym)"/><method name="registerOutParameter(sym#sym)"/><method name="registerOutParameter(sym#sym#sym)"/><method name="registerOutParameter(sym#sym#sym)"/><method name="setAsciiStream(sym#sym#sym)"/><method name="setBigDecimal(sym#sym)"/><method name="setBinaryStream(sym#sym#sym)"/><method name="setBoolean(sym#sym)"/><method name="setByte(sym#sym)"/><method name="setBytes(sym#sym)"/><method name="setCharacterStream(sym#sym#sym)"/><method name="setDouble(sym#sym)"/><method name="setFloat(sym#sym)"/><method name="setInt(sym#sym)"/><method name="setLong(sym#sym)"/><method name="setNull(sym#sym)"/><method name="setNull(sym#sym#sym)"/><method name="setShort(sym#sym)"/><method name="setString(sym#sym)"/><method name="setURL(sym#sym)"/><method name="wasNull()"/><method name="setNString(sym#sym)"/><method name="setNCharacterStream(sym#sym#sym)"/><method name="setClob(sym#sym#sym)"/><method name="setBlob(sym#sym#sym)"/><method name="setNClob(sym#sym#sym)"/><method name="getNString(sym)"/><method name="getNString(sym)"/><method name="getNCharacterStream(sym)"/><method name="getNCharacterStream(sym)"/><method name="getCharacterStream(sym)"/><method name="getCharacterStream(sym)"/><method name="setAsciiStream(sym#sym#sym)"/><method name="setBinaryStream(sym#sym#sym)"/><method name="setCharacterStream(sym#sym#sym)"/><method name="setAsciiStream(sym#sym)"/><method name="setBinaryStream(sym#sym)"/><method name="setCharacterStream(sym#sym)"/><method name="setNCharacterStream(sym#sym)"/><method name="setClob(sym#sym)"/><method name="setBlob(sym#sym)"/><method name="setNClob(sym#sym)"/></class><class name="lsp.test.jdk.util.ULocale"><method name="getTableString(sym#sym#sym#sym)"/><method name="acceptLanguage(sym#sym#sym)"/><method name="acceptLanguage(sym#sym#sym)"/><method name="acceptLanguage(sym#sym)"/><method name="forLocale(sym)"/><method name="addLikelySubtags(sym)"/><method name="minimizeSubtags(sym)"/><method name="getAvailableLocales()"/><method name="parseAcceptLanguage(sym#sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="toLocale()"/><method name="createCanonical(sym)"/><method name="getDefault()"/><method name="setDefault(sym)"/><method name="getFallback()"/><method name="setKeywordValue(sym#sym)"/><method name="getDisplayLanguage(sym)"/><method name="getDisplayLanguage(sym#sym)"/><method name="getDisplayScript(sym)"/><method name="getDisplayScript(sym#sym)"/><method name="getDisplayCountry(sym)"/><method name="getDisplayCountry(sym#sym)"/><method name="getDisplayVariant(sym)"/><method name="getDisplayVariant(sym#sym)"/><method name="getDisplayKeyword(sym#sym)"/><method name="getDisplayKeywordValue(sym#sym)"/><method name="getDisplayKeywordValue(sym#sym#sym)"/><method name="getDisplayName(sym)"/><method name="getDisplayName(sym#sym)"/><method name="acceptLanguage(sym#sym)"/><method name="clone()"/><method name="equals(sym)"/><method name="getCLDRVersion()"/><method name="initLanguageTables()"/><method name="initCountryTables()"/><method name="initCANONICALIZE_MAP()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="lscvToID(sym#sym#sym#sym)"/><method name="hashCode()"/><method name="getISOCountries()"/><method name="getISOLanguages()"/><method name="getLanguage()"/><method name="getLanguage(sym)"/><method name="getScript()"/><method name="getScript(sym)"/><method name="getCountry()"/><method name="getCountry(sym)"/><method name="getVariant()"/><method name="getVariant(sym)"/><method name="getFallback(sym)"/><method name="getFallbackString(sym)"/><method name="getBaseName()"/><method name="getBaseName(sym)"/><method name="getName()"/><method name="getName(sym)"/><method name="toString()"/><method name="getKeywords()"/><method name="getKeywords(sym)"/><method name="getKeywordValue(sym)"/><method name="getKeywordValue(sym#sym)"/><method name="findIndex(sym#sym)"/><method name="canonicalize(sym)"/><method name="setKeywordValue(sym#sym#sym)"/><method name="getISO3Language()"/><method name="getISO3Language(sym)"/><method name="getISO3Country()"/><method name="getISO3Country(sym)"/><method name="getTableString(sym#sym#sym#sym)"/><method name="getDisplayLanguage()"/><method name="getDisplayLanguage(sym#sym)"/><method name="getCurrentCountryID(sym)"/><method name="getCurrentLanguageID(sym)"/><method name="getDisplayLanguageInternal(sym#sym)"/><method name="getDisplayScript()"/><method name="getDisplayScript(sym#sym)"/><method name="getDisplayScriptInternal(sym#sym)"/><method name="getDisplayCountry()"/><method name="getDisplayCountry(sym#sym)"/><method name="getDisplayCountryInternal(sym#sym)"/><method name="getDisplayVariant()"/><method name="getDisplayVariant(sym#sym)"/><method name="getDisplayVariantInternal(sym#sym)"/><method name="getDisplayKeyword(sym)"/><method name="getDisplayKeyword(sym#sym)"/><method name="getDisplayKeywordInternal(sym#sym)"/><method name="getDisplayKeywordValue(sym)"/><method name="getDisplayKeywordValue(sym#sym#sym)"/><method name="getDisplayKeywordValueInternal(sym#sym#sym)"/><method name="getDisplayName()"/><method name="getDisplayName(sym#sym)"/><method name="getDisplayNameInternal(sym#sym)"/><method name="getCharacterOrientation()"/><method name="getLineOrientation()"/><method name="isEmptyString(sym)"/><method name="appendTag(sym#sym)"/><method name="createTagString(sym#sym#sym#sym#sym)"/><method name="createTagString(sym#sym#sym#sym)"/><method name="parseTagString(sym#sym)"/><method name="lookupLikelySubtags(sym)"/><method name="createLikelySubtagsString(sym#sym#sym#sym)"/><method name="access$100()"/><method name="access$200()"/><method name="access$300(sym#sym)"/><method name="access$400()"/><method name="access$500()"/><method name="access$600()"/><method name="access$700()"/><method name="access$800()"/><method name="access$900()"/><method name="access$1000()"/><method name="access$1100()"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.InvalidPropertiesFormatException"><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym)"/><method name="writeObject(sym)"/><method name="readObject(sym)"/></class><class name="lsp.test.jdk.util.TreeMap$NavigableSubMap$SubMapIterator"><method name="&lt;init&gt;(sym#sym#sym)"/><method name="nextEntry()"/><method name="prevEntry()"/><method name="hasNext()"/><method name="removeAscending()"/><method name="removeDescending()"/></class><class name="lsp.test.jdk.util.SimpleDateFormat"><method name="&lt;init&gt;(sym#sym)"/><method name="getDateFormatSymbols()"/><method name="setDateFormatSymbols(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="formatImpl(sym#sym#sym#sym)"/><method name="format(sym#sym#sym)"/><method name="formatToCharacterIteratorImpl(sym)"/><method name="parse(sym#sym)"/><method name="formatToCharacterIterator(sym)"/><method name="toICUField(sym)"/><method name="get2DigitYearStart()"/><method name="set2DigitYearStart(sym)"/><method name="clone()"/><method name="equals(sym)"/><method name="append(sym#sym#sym#sym#sym)"/><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="validateFormat(sym)"/><method name="validatePattern(sym)"/><method name="applyLocalizedPattern(sym)"/><method name="applyPattern(sym)"/><method name="patternForICU(sym)"/><method name="appendTimeZone(sym#sym#sym)"/><method name="appendNumber(sym#sym#sym)"/><method name="hashCode()"/><method name="toLocalizedPattern()"/><method name="toPattern()"/><method name="writeObject(sym)"/><method name="readObject(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.EnumMap$ValueIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="next()"/></class><class name="lsp.test.jdk.util.PriorityQueue$Itr"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="next()"/><method name="hasNext()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.Locale"><method name="getAvailableLocales()"/><method name="getDefault()"/><method name="getDisplayCountry(sym)"/><method name="getDisplayLanguage(sym)"/><method name="getDisplayName(sym)"/><method name="getDisplayVariant(sym)"/><method name="setDefault(sym)"/><method name="clone()"/><method name="equals(sym)"/><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="getCountry()"/><method name="getDisplayCountry()"/><method name="getDisplayLanguage()"/><method name="getDisplayName()"/><method name="getDisplayVariant()"/><method name="getISO3Country()"/><method name="getISO3Language()"/><method name="getISOCountries()"/><method name="getISOLanguages()"/><method name="getLanguage()"/><method name="getVariant()"/><method name="hashCode()"/><method name="toString()"/><method name="writeObject(sym)"/><method name="readObject(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.Collections$EmptyList"><method name="contains(sym)"/><method name="get(sym)"/><method name="readResolve()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;()"/><method name="size()"/></class><class name="lsp.test.jdk.util.TreeMap$KeyIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="next()"/></class><class name="lsp.test.jdk.util.TimeZone"><method name="getDisplayName(sym)"/><method name="getDisplayName(sym#sym#sym)"/><method name="getDefault()"/><method name="getTimeZone(sym)"/><method name="hasSameRules(sym)"/><method name="setDefault(sym)"/><method name="setICUDefaultTimeZone(sym)"/><method name="inDaylightTime(sym)"/><method name="clone()"/><method name="initializeAvailable()"/><method name="isAvailableIDInICU(sym)"/><method name="appendAvailableZones(sym)"/><method name="&lt;init&gt;()"/><method name="getAvailableIDs()"/><method name="getAvailableIDs(sym)"/><method name="getDisplayName()"/><method name="getDisplayName(sym#sym)"/><method name="getID()"/><method name="getDSTSavings()"/><method name="getOffset(sym)"/><method name="getOffset(sym#sym#sym#sym#sym#sym)"/><method name="getRawOffset()"/><method name="formatTimeZoneName(sym#sym)"/><method name="parseNumber(sym#sym#sym)"/><method name="setID(sym)"/><method name="setRawOffset(sym)"/><method name="useDaylightTime()"/><method name="getCustomTimeZone(sym#sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.ResourceBundle$1"><method name="handleGetObject(sym)"/><method name="getKeys()"/><method name="&lt;init&gt;()"/><method name="toString()"/></class><class name="lsp.test.jdk.util.sql.ParameterMetaData"><method name="getParameterClassName(sym)"/><method name="getParameterCount()"/><method name="getParameterMode(sym)"/><method name="getParameterType(sym)"/><method name="getParameterTypeName(sym)"/><method name="getPrecision(sym)"/><method name="getScale(sym)"/><method name="isNullable(sym)"/><method name="isSigned(sym)"/></class><class name="lsp.test.jdk.util.Queue"><method name="add(sym)"/><method name="offer(sym)"/><method name="remove()"/><method name="poll()"/><method name="element()"/><method name="peek()"/></class><class name="lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException"><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/></class><class name="lsp.test.jdk.util.Collator$1"><method name="run()"/><method name="&lt;init&gt;()"/><method name="run()"/></class><class name="lsp.test.jdk.util.HashMap"><method name="put(sym#sym)"/><method name="getEntry(sym)"/><method name="removeEntryForKey(sym)"/><method name="removeMapping(sym)"/><method name="get(sym)"/><method name="putForNullKey(sym)"/><method name="putForCreate(sym#sym)"/><method name="remove(sym)"/><method name="addEntry(sym#sym#sym#sym)"/><method name="createEntry(sym#sym#sym#sym)"/><method name="transfer(sym)"/><method name="&lt;init&gt;(sym)"/><method name="getForNullKey()"/><method name="containsKey(sym)"/><method name="putAllForCreate(sym)"/><method name="putAll(sym)"/><method name="containsValue(sym)"/><method name="clone()"/><method name="values()"/><method name="keySet()"/><method name="entrySet()"/><method name="entrySet0()"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;()"/><method name="init()"/><method name="hash(sym)"/><method name="indexFor(sym#sym)"/><method name="size()"/><method name="isEmpty()"/><method name="resize(sym)"/><method name="clear()"/><method name="containsNullValue()"/><method name="newKeyIterator()"/><method name="newValueIterator()"/><method name="newEntryIterator()"/><method name="writeObject(sym)"/><method name="readObject(sym)"/><method name="capacity()"/><method name="loadFactor()"/></class><class name="lsp.test.jdk.util.Annotation"><method name="&lt;init&gt;(sym)"/><method name="getValue()"/><method name="toString()"/></class><class name="lsp.test.jdk.util.EnumMap"><method name="access$500(sym#sym)"/><method name="access$900(sym#sym#sym)"/><method name="access$1000(sym#sym#sym)"/><method name="access$1200(sym#sym)"/><method name="access$600(sym)"/><method name="&lt;init&gt;(sym)"/><method name="clone()"/><method name="access$200(sym)"/><method name="access$210(sym)"/><method name="access$1100(sym)"/><method name="put(sym#sym)"/><method name="maskNull(sym)"/><method name="unmaskNull(sym)"/><method name="containsMapping(sym#sym)"/><method name="get(sym)"/><method name="put(sym#sym)"/><method name="remove(sym)"/><method name="removeMapping(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym)"/><method name="containsValue(sym)"/><method name="containsKey(sym)"/><method name="isValidKey(sym)"/><method name="putAll(sym)"/><method name="values()"/><method name="equals(sym)"/><method name="getKeyUniverse(sym)"/><method name="clone()"/><method name="access$1400()"/><method name="keySet()"/><method name="entrySet()"/><method name="size()"/><method name="clear()"/><method name="typeCheck(sym)"/><method name="writeObject(sym)"/><method name="readObject(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.IllegalFormatException"><method name="&lt;init&gt;()"/></class><class name="lsp.test.jdk.util.IdentityHashMap$IdentityHashMapIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="hasNext()"/><method name="nextIndex()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.sql.SQLFeatureNotSupportedException"><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/></class><class name="lsp.test.jdk.util.Collections$ReverseComparator"><method name="compare(sym#sym)"/><method name="readResolve()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;()"/><method name="compare(sym#sym)"/></class><class name="lsp.test.jdk.util.TreeMap$Values"><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="remove(sym)"/><method name="iterator()"/><method name="size()"/><method name="clear()"/></class><class name="lsp.test.jdk.util.ResourceBundle$CacheKeyReference"><method name="getCacheKey()"/></class><class name="lsp.test.jdk.util.DuplicateFormatFlagsException"><method name="&lt;init&gt;(sym)"/><method name="getFlags()"/><method name="getMessage()"/></class><class name="lsp.test.jdk.util.sql.Clob"><method name="position(sym#sym)"/><method name="getAsciiStream()"/><method name="getCharacterStream()"/><method name="getSubString(sym#sym)"/><method name="length()"/><method name="position(sym#sym)"/><method name="setAsciiStream(sym)"/><method name="setCharacterStream(sym)"/><method name="setString(sym#sym)"/><method name="setString(sym#sym#sym#sym)"/><method name="truncate(sym)"/><method name="free()"/><method name="getCharacterStream(sym#sym)"/></class><class name="lsp.test.jdk.util.Collections$UnmodifiableSortedMap"><method name="subMap(sym#sym)"/><method name="headMap(sym)"/><method name="tailMap(sym)"/><method name="firstKey()"/><method name="lastKey()"/><method name="&lt;init&gt;(sym)"/><method name="comparator()"/></class><class name="lsp.test.jdk.util.DateFormat"><method name="getCalendar()"/><method name="setCalendar(sym)"/><method name="getDateInstance(sym#sym)"/><method name="getDateTimeInstance(sym#sym#sym)"/><method name="getTimeInstance(sym#sym)"/><method name="getNumberFormat()"/><method name="setNumberFormat(sym)"/><method name="getAvailableLocales()"/><method name="getDateInstance()"/><method name="getDateInstance(sym)"/><method name="getDateTimeInstance()"/><method name="getDateTimeInstance(sym#sym)"/><method name="getInstance()"/><method name="getTimeInstance()"/><method name="getTimeInstance(sym)"/><method name="getTimeZone()"/><method name="setTimeZone(sym)"/><method name="format(sym#sym#sym)"/><method name="format(sym#sym#sym)"/><method name="parse(sym#sym)"/><method name="parseObject(sym#sym)"/><method name="format(sym)"/><method name="parse(sym)"/><method name="clone()"/><method name="equals(sym)"/><method name="&lt;init&gt;()"/><method name="getStyleName(sym)"/><method name="hashCode()"/><method name="isLenient()"/><method name="setLenient(sym)"/></class><class name="lsp.test.jdk.util.RegularEnumSet$EnumSetIterator"><method name="next()"/><method name="&lt;init&gt;(sym)"/><method name="hasNext()"/><method name="next()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.sql.SQLXML"><method name="getSource(sym)"/><method name="setResult(sym)"/><method name="free()"/><method name="getBinaryStream()"/><method name="setBinaryStream()"/><method name="getCharacterStream()"/><method name="setCharacterStream()"/><method name="getString()"/><method name="setString(sym)"/></class><class name="lsp.test.jdk.util.Set"><method name="toArray(sym)"/><method name="toArray()"/><method name="contains(sym)"/><method name="add(sym)"/><method name="remove(sym)"/><method name="containsAll(sym)"/><method name="addAll(sym)"/><method name="retainAll(sym)"/><method name="removeAll(sym)"/><method name="equals(sym)"/><method name="size()"/><method name="isEmpty()"/><method name="iterator()"/><method name="clear()"/><method name="hashCode()"/></class><class name="lsp.test.jdk.util.IllegalFormatFlagsException"><method name="&lt;init&gt;(sym)"/><method name="getFlags()"/><method name="getMessage()"/></class><class name="lsp.test.jdk.util.HashMap$EntryIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="next()"/><method name="next()"/></class><class name="lsp.test.jdk.util.ResourceBundle$CacheKey"><method name="setLocale(sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="getLocale()"/><method name="setName(sym)"/><method name="access$400(sym)"/><method name="access$500(sym#sym)"/><method name="access$600(sym)"/><method name="access$700(sym)"/><method name="access$702(sym#sym)"/><method name="access$602(sym#sym)"/><method name="equals(sym)"/><method name="clone()"/><method name="getName()"/><method name="getLoader()"/><method name="hashCode()"/><method name="calculateHashCode()"/><method name="getFormat()"/><method name="setFormat(sym)"/><method name="setCause(sym)"/><method name="getCause()"/><method name="toString()"/></class><class name="lsp.test.jdk.util.ListIterator"><method name="next()"/><method name="previous()"/><method name="set(sym)"/><method name="add(sym)"/><method name="hasNext()"/><method name="hasPrevious()"/><method name="nextIndex()"/><method name="previousIndex()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.LinkedHashMap$ValueIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="next()"/></class><class name="lsp.test.jdk.util.HashMap$ValueIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="next()"/></class><class name="lsp.test.jdk.util.TreeMap$NavigableSubMap$EntrySetView"><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="remove(sym)"/><method name="size()"/><method name="isEmpty()"/></class><class name="lsp.test.jdk.util.sql.Blob"><method name="position(sym#sym)"/><method name="getBinaryStream()"/><method name="getBytes(sym#sym)"/><method name="length()"/><method name="position(sym#sym)"/><method name="setBinaryStream(sym)"/><method name="setBytes(sym#sym)"/><method name="setBytes(sym#sym#sym#sym)"/><method name="truncate(sym)"/><method name="free()"/><method name="getBinaryStream(sym#sym)"/></class><class name="lsp.test.jdk.util.sql.RowIdLifetime"><method name="values()"/><method name="valueOf(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.sql.SQLDataException"><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/></class><class name="lsp.test.jdk.util.SortedSet"><method name="subSet(sym#sym)"/><method name="headSet(sym)"/><method name="tailSet(sym)"/><method name="first()"/><method name="last()"/><method name="comparator()"/></class><class name="lsp.test.jdk.util.ServiceLoader$LazyIterator"><method name="&lt;init&gt;(sym#sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="next()"/><method name="hasNext()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.TreeMap$NavigableSubMap$SubMapEntryIterator"><method name="&lt;init&gt;(sym#sym#sym)"/><method name="next()"/><method name="next()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.sql.Types"><method name="&lt;init&gt;()"/></class><class name="lsp.test.jdk.util.TreeMap$ValueIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="next()"/></class><class name="lsp.test.jdk.util.Currency$1"><method name="run()"/><method name="&lt;init&gt;()"/></class><class name="lsp.test.jdk.util.Collections$CheckedSet"><method name="&lt;init&gt;(sym#sym)"/><method name="equals(sym)"/><method name="hashCode()"/></class><class name="lsp.test.jdk.util.sql.ResultSetMetaData"><method name="getCatalogName(sym)"/><method name="getColumnClassName(sym)"/><method name="getColumnCount()"/><method name="getColumnDisplaySize(sym)"/><method name="getColumnLabel(sym)"/><method name="getColumnName(sym)"/><method name="getColumnType(sym)"/><method name="getColumnTypeName(sym)"/><method name="getPrecision(sym)"/><method name="getScale(sym)"/><method name="getSchemaName(sym)"/><method name="getTableName(sym)"/><method name="isAutoIncrement(sym)"/><method name="isCaseSensitive(sym)"/><method name="isCurrency(sym)"/><method name="isDefinitelyWritable(sym)"/><method name="isNullable(sym)"/><method name="isReadOnly(sym)"/><method name="isSearchable(sym)"/><method name="isSigned(sym)"/><method name="isWritable(sym)"/></class><class name="lsp.test.jdk.util.sql.DataTruncation"><method name="&lt;init&gt;(sym#sym#sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym#sym#sym)"/><method name="getDataSize()"/><method name="getIndex()"/><method name="getParameter()"/><method name="getRead()"/><method name="getTransferSize()"/></class><class name="lsp.test.jdk.util.Arrays"><method name="copyOf(sym#sym#sym)"/><method name="copyOfRange(sym#sym#sym#sym)"/><method name="mergeSort(sym#sym#sym#sym#sym#sym)"/><method name="binarySearch(sym#sym#sym)"/><method name="binarySearch(sym#sym#sym#sym#sym)"/><method name="binarySearch0(sym#sym#sym#sym#sym)"/><method name="mergeSort(sym#sym#sym#sym#sym)"/><method name="equals(sym#sym)"/><method name="copyOf(sym#sym)"/><method name="copyOfRange(sym#sym#sym)"/><method name="deepEquals(sym#sym)"/><method name="binarySearch(sym#sym)"/><method name="binarySearch(sym#sym#sym#sym)"/><method name="binarySearch0(sym#sym#sym#sym)"/><method name="fill(sym#sym)"/><method name="fill(sym#sym#sym#sym)"/><method name="asList(sym)"/><method name="deepToString(sym#sym#sym)"/><method name="sort(sym#sym)"/><method name="sort(sym#sym#sym#sym)"/><method name="sort(sym)"/><method name="sort(sym#sym#sym)"/><method name="swap(sym#sym#sym)"/><method name="hashCode(sym)"/><method name="deepHashCode(sym)"/><method name="toString(sym)"/><method name="deepToString(sym)"/><method name="&lt;init&gt;()"/><method name="sort(sym)"/><method name="sort(sym#sym#sym)"/><method name="sort(sym)"/><method name="sort(sym#sym#sym)"/><method name="sort(sym)"/><method name="sort(sym#sym#sym)"/><method name="sort(sym)"/><method name="sort(sym#sym#sym)"/><method name="sort(sym)"/><method name="sort(sym#sym#sym)"/><method name="sort(sym)"/><method name="sort(sym#sym#sym)"/><method name="sort(sym)"/><method name="sort(sym#sym#sym)"/><method name="sort2(sym#sym#sym)"/><method name="sort2(sym#sym#sym)"/><method name="sort1(sym#sym#sym)"/><method name="swap(sym#sym#sym)"/><method name="vecswap(sym#sym#sym#sym)"/><method name="med3(sym#sym#sym#sym)"/><method name="sort1(sym#sym#sym)"/><method name="swap(sym#sym#sym)"/><method name="vecswap(sym#sym#sym#sym)"/><method name="med3(sym#sym#sym#sym)"/><method name="sort1(sym#sym#sym)"/><method name="swap(sym#sym#sym)"/><method name="vecswap(sym#sym#sym#sym)"/><method name="med3(sym#sym#sym#sym)"/><method name="sort1(sym#sym#sym)"/><method name="swap(sym#sym#sym)"/><method name="vecswap(sym#sym#sym#sym)"/><method name="med3(sym#sym#sym#sym)"/><method name="sort1(sym#sym#sym)"/><method name="swap(sym#sym#sym)"/><method name="vecswap(sym#sym#sym#sym)"/><method name="med3(sym#sym#sym#sym)"/><method name="sort1(sym#sym#sym)"/><method name="swap(sym#sym#sym)"/><method name="vecswap(sym#sym#sym#sym)"/><method name="med3(sym#sym#sym#sym)"/><method name="sort1(sym#sym#sym)"/><method name="swap(sym#sym#sym)"/><method name="vecswap(sym#sym#sym#sym)"/><method name="med3(sym#sym#sym#sym)"/><method name="rangeCheck(sym#sym#sym)"/><method name="binarySearch(sym#sym)"/><method name="binarySearch(sym#sym#sym#sym)"/><method name="binarySearch0(sym#sym#sym#sym)"/><method name="binarySearch(sym#sym)"/><method name="binarySearch(sym#sym#sym#sym)"/><method name="binarySearch0(sym#sym#sym#sym)"/><method name="binarySearch(sym#sym)"/><method name="binarySearch(sym#sym#sym#sym)"/><method name="binarySearch0(sym#sym#sym#sym)"/><method name="binarySearch(sym#sym)"/><method name="binarySearch(sym#sym#sym#sym)"/><method name="binarySearch0(sym#sym#sym#sym)"/><method name="binarySearch(sym#sym)"/><method name="binarySearch(sym#sym#sym#sym)"/><method name="binarySearch0(sym#sym#sym#sym)"/><method name="binarySearch(sym#sym)"/><method name="binarySearch(sym#sym#sym#sym)"/><method name="binarySearch0(sym#sym#sym#sym)"/><method name="binarySearch(sym#sym)"/><method name="binarySearch(sym#sym#sym#sym)"/><method name="binarySearch0(sym#sym#sym#sym)"/><method name="equals(sym#sym)"/><method name="equals(sym#sym)"/><method name="equals(sym#sym)"/><method name="equals(sym#sym)"/><method name="equals(sym#sym)"/><method name="equals(sym#sym)"/><method name="equals(sym#sym)"/><method name="equals(sym#sym)"/><method name="fill(sym#sym)"/><method name="fill(sym#sym#sym#sym)"/><method name="fill(sym#sym)"/><method name="fill(sym#sym#sym#sym)"/><method name="fill(sym#sym)"/><method name="fill(sym#sym#sym#sym)"/><method name="fill(sym#sym)"/><method name="fill(sym#sym#sym#sym)"/><method name="fill(sym#sym)"/><method name="fill(sym#sym#sym#sym)"/><method name="fill(sym#sym)"/><method name="fill(sym#sym#sym#sym)"/><method name="fill(sym#sym)"/><method name="fill(sym#sym#sym#sym)"/><method name="fill(sym#sym)"/><method name="fill(sym#sym#sym#sym)"/><method name="copyOf(sym#sym)"/><method name="copyOf(sym#sym)"/><method name="copyOf(sym#sym)"/><method name="copyOf(sym#sym)"/><method name="copyOf(sym#sym)"/><method name="copyOf(sym#sym)"/><method name="copyOf(sym#sym)"/><method name="copyOf(sym#sym)"/><method name="copyOfRange(sym#sym#sym)"/><method name="copyOfRange(sym#sym#sym)"/><method name="copyOfRange(sym#sym#sym)"/><method name="copyOfRange(sym#sym#sym)"/><method name="copyOfRange(sym#sym#sym)"/><method name="copyOfRange(sym#sym#sym)"/><method name="copyOfRange(sym#sym#sym)"/><method name="copyOfRange(sym#sym#sym)"/><method name="hashCode(sym)"/><method name="hashCode(sym)"/><method name="hashCode(sym)"/><method name="hashCode(sym)"/><method name="hashCode(sym)"/><method name="hashCode(sym)"/><method name="hashCode(sym)"/><method name="hashCode(sym)"/><method name="toString(sym)"/><method name="toString(sym)"/><method name="toString(sym)"/><method name="toString(sym)"/><method name="toString(sym)"/><method name="toString(sym)"/><method name="toString(sym)"/><method name="toString(sym)"/></class><class name="lsp.test.jdk.util.ServiceConfigurationError"><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/></class><class name="lsp.test.jdk.util.ListResourceBundle"><method name="getContents()"/><method name="handleGetObject(sym)"/><method name="handleKeySet()"/><method name="getKeys()"/><method name="&lt;init&gt;()"/><method name="loadLookup()"/></class><class name="lsp.test.jdk.util.sql.Array"><method name="getArray(sym#sym#sym)"/><method name="getArray(sym)"/><method name="getResultSet(sym#sym#sym)"/><method name="getResultSet(sym)"/><method name="getArray()"/><method name="getArray(sym#sym)"/><method name="getResultSet()"/><method name="getResultSet(sym#sym)"/><method name="getBaseType()"/><method name="getBaseTypeName()"/><method name="free()"/></class><class name="lsp.test.jdk.util.AbstractQueue"><method name="add(sym)"/><method name="remove()"/><method name="element()"/><method name="addAll(sym)"/><method name="&lt;init&gt;()"/><method name="clear()"/></class><class name="lsp.test.jdk.util.Collections$UnmodifiableList"><method name="set(sym#sym)"/><method name="equals(sym)"/><method name="get(sym)"/><method name="add(sym#sym)"/><method name="remove(sym)"/><method name="indexOf(sym)"/><method name="lastIndexOf(sym)"/><method name="addAll(sym#sym)"/><method name="readResolve()"/><method name="&lt;init&gt;(sym)"/><method name="subList(sym#sym)"/><method name="listIterator()"/><method name="listIterator(sym)"/><method name="hashCode()"/></class><class name="lsp.test.jdk.util.Hashtable$EmptyEnumerator"><method name="nextElement()"/><method name="&lt;init&gt;()"/><method name="hasMoreElements()"/></class><class name="lsp.test.jdk.util.AbstractCollection"><method name="toArray(sym)"/><method name="finishToArray(sym#sym)"/><method name="toArray()"/><method name="contains(sym)"/><method name="add(sym)"/><method name="remove(sym)"/><method name="containsAll(sym)"/><method name="addAll(sym)"/><method name="removeAll(sym)"/><method name="retainAll(sym)"/><method name="&lt;init&gt;()"/><method name="iterator()"/><method name="size()"/><method name="isEmpty()"/><method name="clear()"/><method name="toString()"/></class><class name="lsp.test.jdk.util.Format$Field"><method name="&lt;init&gt;(sym)"/></class><class name="lsp.test.jdk.util.sql.Date"><method name="valueOf(sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="getHours()"/><method name="getMinutes()"/><method name="getSeconds()"/><method name="setHours(sym)"/><method name="setMinutes(sym)"/><method name="setSeconds(sym)"/><method name="setTime(sym)"/><method name="toString()"/><method name="format(sym#sym#sym)"/><method name="normalizeTime(sym)"/></class><class name="lsp.test.jdk.util.TreeMap$SubMap"><method name="&lt;init&gt;(sym)"/><method name="subMap(sym#sym)"/><method name="headMap(sym)"/><method name="tailMap(sym)"/><method name="readResolve()"/><method name="lastKey()"/><method name="firstKey()"/><method name="entrySet()"/><method name="comparator()"/></class><class name="lsp.test.jdk.util.ServiceLoader$1"><method name="&lt;init&gt;(sym)"/><method name="next()"/><method name="hasNext()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.XMLUtils$Resolver"><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;()"/><method name="resolveEntity(sym#sym)"/></class><class name="lsp.test.jdk.util.Collections$UnmodifiableCollection$1"><method name="next()"/><method name="&lt;init&gt;(sym)"/><method name="hasNext()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.AbstractMap$SimpleImmutableEntry"><method name="&lt;init&gt;(sym#sym)"/><method name="setValue(sym)"/><method name="getKey()"/><method name="getValue()"/><method name="equals(sym)"/><method name="&lt;init&gt;(sym)"/><method name="hashCode()"/><method name="toString()"/></class><class name="lsp.test.jdk.util.Collections$SynchronizedCollection"><method name="toArray(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="toArray()"/><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="add(sym)"/><method name="remove(sym)"/><method name="containsAll(sym)"/><method name="addAll(sym)"/><method name="removeAll(sym)"/><method name="retainAll(sym)"/><method name="size()"/><method name="isEmpty()"/><method name="iterator()"/><method name="clear()"/><method name="toString()"/><method name="writeObject(sym)"/></class><class name="lsp.test.jdk.util.AttributedString$Range"><method name="&lt;init&gt;(sym#sym#sym)"/></class><class name="lsp.test.jdk.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry"><method name="setValue(sym)"/><method name="getKey()"/><method name="getValue()"/><method name="equals(sym)"/><method name="&lt;init&gt;(sym)"/><method name="hashCode()"/><method name="toString()"/></class><class name="lsp.test.jdk.util.UResourceBundle$ResourceCacheKey"><method name="access$000(sym#sym#sym#sym)"/><method name="setKeyValues(sym#sym#sym)"/><method name="equals(sym)"/><method name="clone()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;()"/><method name="hashCode()"/></class><class name="lsp.test.jdk.util.RegularEnumSet"><method name="&lt;init&gt;(sym#sym)"/><method name="contains(sym)"/><method name="remove(sym)"/><method name="containsAll(sym)"/><method name="addAll(sym)"/><method name="removeAll(sym)"/><method name="retainAll(sym)"/><method name="equals(sym)"/><method name="add(sym)"/><method name="access$000(sym)"/><method name="access$022(sym#sym)"/><method name="addRange(sym#sym)"/><method name="addAll()"/><method name="complement()"/><method name="iterator()"/><method name="size()"/><method name="isEmpty()"/><method name="add(sym)"/><method name="clear()"/></class><class name="lsp.test.jdk.util.sql.SQLData"><method name="readSQL(sym#sym)"/><method name="writeSQL(sym)"/><method name="getSQLTypeName()"/></class><class name="lsp.test.jdk.util.Collections$CheckedRandomAccessList"><method name="&lt;init&gt;(sym#sym)"/><method name="subList(sym#sym)"/></class><class name="lsp.test.jdk.util.NoSuchElementException"><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/></class><class name="lsp.test.jdk.util.IllegalFormatPrecisionException"><method name="&lt;init&gt;(sym)"/><method name="getPrecision()"/><method name="getMessage()"/></class><class name="lsp.test.jdk.util.EnumSet"><method name="copyOf(sym)"/><method name="complementOf(sym)"/><method name="noneOf(sym)"/><method name="allOf(sym)"/><method name="copyOf(sym)"/><method name="of(sym)"/><method name="of(sym#sym)"/><method name="of(sym#sym#sym)"/><method name="of(sym#sym#sym#sym)"/><method name="of(sym#sym#sym#sym#sym)"/><method name="of(sym#sym)"/><method name="range(sym#sym)"/><method name="clone()"/><method name="&lt;init&gt;(sym#sym)"/><method name="getUniverse(sym)"/><method name="writeReplace()"/><method name="clone()"/><method name="addAll()"/><method name="addRange(sym#sym)"/><method name="complement()"/><method name="typeCheck(sym)"/><method name="access$000()"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.Collections$UnmodifiableRandomAccessList"><method name="writeReplace()"/><method name="&lt;init&gt;(sym)"/><method name="subList(sym#sym)"/></class><class name="lsp.test.jdk.util.sql.DriverPropertyInfo"><method name="&lt;init&gt;(sym#sym)"/></class><class name="lsp.test.jdk.util.AbstractList"><method name="set(sym#sym)"/><method name="add(sym)"/><method name="get(sym)"/><method name="add(sym#sym)"/><method name="remove(sym)"/><method name="indexOf(sym)"/><method name="lastIndexOf(sym)"/><method name="addAll(sym#sym)"/><method name="equals(sym)"/><method name="subList(sym#sym)"/><method name="listIterator()"/><method name="listIterator(sym)"/><method name="&lt;init&gt;()"/><method name="clear()"/><method name="iterator()"/><method name="hashCode()"/><method name="removeRange(sym#sym)"/></class><class name="lsp.test.jdk.util.ResourceBundle$Control"><method name="newBundle(sym#sym#sym#sym#sym)"/><method name="needsReload(sym#sym#sym#sym#sym#sym)"/><method name="getFallbackLocale(sym#sym)"/><method name="getCandidateLocales(sym#sym)"/><method name="getTimeToLive(sym#sym)"/><method name="toBundleName(sym#sym)"/><method name="getControl(sym)"/><method name="getNoFallbackControl(sym)"/><method name="access$300()"/><method name="getFormats(sym)"/><method name="&lt;init&gt;()"/><method name="toResourceName(sym#sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.Collections$SynchronizedSortedMap"><method name="subMap(sym#sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="headMap(sym)"/><method name="tailMap(sym)"/><method name="firstKey()"/><method name="lastKey()"/><method name="&lt;init&gt;(sym)"/><method name="comparator()"/></class><class name="lsp.test.jdk.util.JDKTest"><method name="doWork(sym)"/><method name="&lt;init&gt;()"/><method name="mainLSPChecker(sym)"/></class><class name="lsp.test.jdk.util.IdentityHashMap$KeySet"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="remove(sym)"/><method name="removeAll(sym)"/><method name="iterator()"/><method name="size()"/><method name="clear()"/><method name="hashCode()"/></class><class name="lsp.test.jdk.util.LinkedHashMap$LinkedHashIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="nextEntry()"/><method name="hasNext()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.AbstractMap$1$1"><method name="&lt;init&gt;(sym)"/><method name="next()"/><method name="hasNext()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.Collections$UnmodifiableMap$UnmodifiableEntrySet"><method name="toArray(sym)"/><method name="toArray()"/><method name="contains(sym)"/><method name="containsAll(sym)"/><method name="equals(sym)"/><method name="&lt;init&gt;(sym)"/><method name="iterator()"/></class><class name="lsp.test.jdk.util.Collections$ReverseComparator2"><method name="compare(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.AbstractMap$2$1"><method name="&lt;init&gt;(sym)"/><method name="next()"/><method name="hasNext()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.Collections$SingletonList"><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="get(sym)"/><method name="size()"/></class><class name="lsp.test.jdk.util.EnumMap$EntryIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="setValue(sym)"/><method name="getValue()"/><method name="equals(sym)"/><method name="next()"/><method name="getKey()"/><method name="next()"/><method name="getKey()"/><method name="hashCode()"/><method name="toString()"/><method name="checkLastReturnedIndexForEntryUse()"/></class><class name="lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException"><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/></class><class name="lsp.test.jdk.util.Collections$UnmodifiableMap"><method name="put(sym#sym)"/><method name="get(sym)"/><method name="remove(sym)"/><method name="&lt;init&gt;(sym)"/><method name="containsKey(sym)"/><method name="containsValue(sym)"/><method name="putAll(sym)"/><method name="values()"/><method name="equals(sym)"/><method name="keySet()"/><method name="entrySet()"/><method name="size()"/><method name="isEmpty()"/><method name="clear()"/><method name="hashCode()"/><method name="toString()"/></class><class name="lsp.test.jdk.util.AttributedCharacterIterator"><method name="getAttribute(sym)"/><method name="getRunLimit(sym)"/><method name="getRunStart(sym)"/><method name="getAttributes()"/><method name="getAllAttributeKeys()"/><method name="getRunLimit(sym)"/><method name="getRunStart(sym)"/><method name="getRunLimit()"/><method name="getRunStart()"/></class><class name="lsp.test.jdk.util.BitSet"><method name="equals(sym)"/><method name="clone()"/><method name="get(sym#sym)"/><method name="intersects(sym)"/><method name="and(sym)"/><method name="or(sym)"/><method name="xor(sym)"/><method name="andNot(sym)"/><method name="wordIndex(sym)"/><method name="checkInvariants()"/><method name="recalculateWordsInUse()"/><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="initWords(sym)"/><method name="ensureCapacity(sym)"/><method name="expandTo(sym)"/><method name="checkRange(sym#sym)"/><method name="flip(sym)"/><method name="flip(sym#sym)"/><method name="set(sym)"/><method name="set(sym#sym)"/><method name="set(sym#sym)"/><method name="set(sym#sym#sym)"/><method name="clear(sym)"/><method name="clear(sym#sym)"/><method name="clear()"/><method name="get(sym)"/><method name="nextSetBit(sym)"/><method name="nextClearBit(sym)"/><method name="length()"/><method name="isEmpty()"/><method name="cardinality()"/><method name="hashCode()"/><method name="size()"/><method name="trimToSize()"/><method name="writeObject(sym)"/><method name="readObject(sym)"/><method name="toString()"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.Collections$AsLIFOQueue"><method name="toArray(sym)"/><method name="toArray()"/><method name="add(sym)"/><method name="offer(sym)"/><method name="poll()"/><method name="remove()"/><method name="peek()"/><method name="element()"/><method name="contains(sym)"/><method name="remove(sym)"/><method name="containsAll(sym)"/><method name="removeAll(sym)"/><method name="retainAll(sym)"/><method name="&lt;init&gt;(sym)"/><method name="clear()"/><method name="size()"/><method name="isEmpty()"/><method name="iterator()"/><method name="toString()"/></class><class name="lsp.test.jdk.util.sql.DriverManager"><method name="getConnection(sym#sym)"/><method name="isClassFromClassLoader(sym#sym)"/><method name="getDrivers()"/><method name="deregisterDriver(sym)"/><method name="getConnection(sym)"/><method name="getConnection(sym#sym#sym)"/><method name="getDriver(sym)"/><method name="registerDriver(sym)"/><method name="loadInitialDrivers()"/><method name="&lt;init&gt;()"/><method name="getLoginTimeout()"/><method name="getLogStream()"/><method name="getLogWriter()"/><method name="println(sym)"/><method name="setLoginTimeout(sym)"/><method name="setLogStream(sym)"/><method name="setLogWriter(sym)"/><method name="checkLogSecurity()"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry"><method name="setValue(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="getKey()"/><method name="getValue()"/><method name="equals(sym)"/><method name="hashCode()"/><method name="toString()"/></class><class name="lsp.test.jdk.util.HashMap$Values"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="iterator()"/><method name="size()"/><method name="clear()"/></class><class name="lsp.test.jdk.util.Hashtable$KeySet"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="remove(sym)"/><method name="iterator()"/><method name="size()"/><method name="clear()"/></class><class name="lsp.test.jdk.util.sql.SQLException$InternalIterator"><method name="&lt;init&gt;(sym)"/><method name="next()"/><method name="hasNext()"/><method name="next()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.AbstractMap"><method name="put(sym#sym)"/><method name="get(sym)"/><method name="remove(sym)"/><method name="eq(sym#sym)"/><method name="access$000(sym#sym)"/><method name="containsValue(sym)"/><method name="containsKey(sym)"/><method name="putAll(sym)"/><method name="values()"/><method name="equals(sym)"/><method name="clone()"/><method name="keySet()"/><method name="entrySet()"/><method name="&lt;init&gt;()"/><method name="size()"/><method name="isEmpty()"/><method name="clear()"/><method name="hashCode()"/><method name="toString()"/></class><class name="lsp.test.jdk.util.sql.Statement"><method name="getWarnings()"/><method name="executeQuery(sym)"/><method name="getConnection()"/><method name="getGeneratedKeys()"/><method name="getResultSet()"/><method name="addBatch(sym)"/><method name="cancel()"/><method name="clearBatch()"/><method name="clearWarnings()"/><method name="close()"/><method name="execute(sym)"/><method name="execute(sym#sym)"/><method name="execute(sym#sym)"/><method name="execute(sym#sym)"/><method name="executeBatch()"/><method name="executeUpdate(sym)"/><method name="executeUpdate(sym#sym)"/><method name="executeUpdate(sym#sym)"/><method name="executeUpdate(sym#sym)"/><method name="getFetchDirection()"/><method name="getFetchSize()"/><method name="getMaxFieldSize()"/><method name="getMaxRows()"/><method name="getMoreResults()"/><method name="getMoreResults(sym)"/><method name="getQueryTimeout()"/><method name="getResultSetConcurrency()"/><method name="getResultSetHoldability()"/><method name="getResultSetType()"/><method name="getUpdateCount()"/><method name="setCursorName(sym)"/><method name="setEscapeProcessing(sym)"/><method name="setFetchDirection(sym)"/><method name="setFetchSize(sym)"/><method name="setMaxFieldSize(sym)"/><method name="setMaxRows(sym)"/><method name="setQueryTimeout(sym)"/><method name="isClosed()"/><method name="setPoolable(sym)"/><method name="isPoolable()"/></class><class name="lsp.test.jdk.util.AbstractMap$SimpleEntry"><method name="&lt;init&gt;(sym#sym)"/><method name="setValue(sym)"/><method name="getKey()"/><method name="getValue()"/><method name="equals(sym)"/><method name="&lt;init&gt;(sym)"/><method name="hashCode()"/><method name="toString()"/></class><class name="lsp.test.jdk.util.ICUResourceBundle"><method name="createBundleObject(sym#sym#sym#sym#sym#sym#sym)"/><method name="assign(sym#sym)"/><method name="findResourceWithFallback(sym#sym#sym)"/><method name="findResource(sym#sym#sym#sym)"/><method name="getBundle(sym#sym#sym#sym)"/><method name="getWithFallback(sym)"/><method name="createBundle(sym#sym#sym)"/><method name="findKey(sym#sym#sym#sym)"/><method name="setParent(sym)"/><method name="get(sym#sym#sym)"/><method name="handleGet(sym#sym#sym)"/><method name="handleGet(sym#sym#sym)"/><method name="handleGetImpl(sym#sym#sym#sym#sym)"/><method name="handleGetImpl(sym#sym#sym#sym)"/><method name="getLocaleList(sym)"/><method name="getFunctionalEquivalent(sym#sym#sym#sym#sym#sym)"/><method name="getBundleInstance(sym#sym#sym#sym)"/><method name="instantiateBundle(sym#sym#sym#sym)"/><method name="getParent()"/><method name="getAvailableLocales(sym)"/><method name="getAvailableLocales()"/><method name="createLocaleList(sym)"/><method name="access$100(sym)"/><method name="getAvailableULocales(sym)"/><method name="getAvailableULocales()"/><method name="createULocaleList(sym#sym)"/><method name="access$000(sym#sym)"/><method name="getLocale()"/><method name="getULocale()"/><method name="getAvailEntry(sym)"/><method name="createFullLocaleNameArray(sym#sym)"/><method name="equals(sym)"/><method name="getAvailableLocaleNameSet(sym)"/><method name="getFullLocaleNameSet()"/><method name="getFullLocaleNameSet(sym)"/><method name="getAvailableLocaleNameSet()"/><method name="createFullLocaleNameSet(sym)"/><method name="createLocaleNameSet(sym)"/><method name="access$200(sym)"/><method name="access$300(sym)"/><method name="setLoadingStatus(sym)"/><method name="getLoadingStatus()"/><method name="setLoadingStatus(sym)"/><method name="getResPath()"/><method name="getKeywordValues(sym#sym)"/><method name="getStringWithFallback(sym)"/><method name="createLocaleNameArray(sym#sym)"/><method name="getLocaleID()"/><method name="getBaseName()"/><method name="getNoFallback()"/><method name="&lt;init&gt;()"/><method name="RES_GET_TYPE(sym)"/><method name="RES_GET_OFFSET(sym)"/><method name="RES_GET_INT(sym)"/><method name="RES_GET_UINT(sym)"/><method name="RES_GET_KEY(sym#sym)"/><method name="getIntOffset(sym)"/><method name="getCharOffset(sym)"/><method name="getOffset(sym#sym)"/><method name="makeChar(sym#sym)"/><method name="getChar(sym#sym)"/><method name="makeInt(sym#sym)"/><method name="getInt(sym#sym)"/><method name="getStringValue(sym)"/><method name="getIndex(sym)"/><method name="createLookupCache()"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.Collections$CheckedList$1"><method name="&lt;init&gt;(sym#sym)"/><method name="next()"/><method name="previous()"/><method name="set(sym)"/><method name="add(sym)"/><method name="hasNext()"/><method name="hasPrevious()"/><method name="nextIndex()"/><method name="previousIndex()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.Collections$CheckedSortedMap"><method name="&lt;init&gt;(sym#sym#sym)"/><method name="subMap(sym#sym)"/><method name="headMap(sym)"/><method name="tailMap(sym)"/><method name="firstKey()"/><method name="lastKey()"/><method name="comparator()"/></class><class name="lsp.test.jdk.util.sql.DatabaseMetaData"><method name="getRowIdLifetime()"/><method name="getAttributes(sym#sym#sym#sym)"/><method name="getBestRowIdentifier(sym#sym#sym#sym#sym)"/><method name="getCatalogs()"/><method name="getColumnPrivileges(sym#sym#sym#sym)"/><method name="getColumns(sym#sym#sym#sym)"/><method name="getConnection()"/><method name="getCrossReference(sym#sym#sym#sym#sym#sym)"/><method name="getExportedKeys(sym#sym#sym)"/><method name="getImportedKeys(sym#sym#sym)"/><method name="getIndexInfo(sym#sym#sym#sym#sym)"/><method name="getPrimaryKeys(sym#sym#sym)"/><method name="getProcedureColumns(sym#sym#sym#sym)"/><method name="getProcedures(sym#sym#sym)"/><method name="getSchemas()"/><method name="getSuperTables(sym#sym#sym)"/><method name="getSuperTypes(sym#sym#sym)"/><method name="getTablePrivileges(sym#sym#sym)"/><method name="getTables(sym#sym#sym#sym)"/><method name="getTableTypes()"/><method name="getTypeInfo()"/><method name="getUDTs(sym#sym#sym#sym)"/><method name="getVersionColumns(sym#sym#sym)"/><method name="getSchemas(sym#sym)"/><method name="getClientInfoProperties()"/><method name="getFunctions(sym#sym#sym)"/><method name="getFunctionColumns(sym#sym#sym#sym)"/><method name="allProceduresAreCallable()"/><method name="allTablesAreSelectable()"/><method name="dataDefinitionCausesTransactionCommit()"/><method name="dataDefinitionIgnoredInTransactions()"/><method name="deletesAreDetected(sym)"/><method name="doesMaxRowSizeIncludeBlobs()"/><method name="getCatalogSeparator()"/><method name="getCatalogTerm()"/><method name="getDatabaseMajorVersion()"/><method name="getDatabaseMinorVersion()"/><method name="getDatabaseProductName()"/><method name="getDatabaseProductVersion()"/><method name="getDefaultTransactionIsolation()"/><method name="getDriverMajorVersion()"/><method name="getDriverMinorVersion()"/><method name="getDriverName()"/><method name="getDriverVersion()"/><method name="getExtraNameCharacters()"/><method name="getIdentifierQuoteString()"/><method name="getJDBCMajorVersion()"/><method name="getJDBCMinorVersion()"/><method name="getMaxBinaryLiteralLength()"/><method name="getMaxCatalogNameLength()"/><method name="getMaxCharLiteralLength()"/><method name="getMaxColumnNameLength()"/><method name="getMaxColumnsInGroupBy()"/><method name="getMaxColumnsInIndex()"/><method name="getMaxColumnsInOrderBy()"/><method name="getMaxColumnsInSelect()"/><method name="getMaxColumnsInTable()"/><method name="getMaxConnections()"/><method name="getMaxCursorNameLength()"/><method name="getMaxIndexLength()"/><method name="getMaxProcedureNameLength()"/><method name="getMaxRowSize()"/><method name="getMaxSchemaNameLength()"/><method name="getMaxStatementLength()"/><method name="getMaxStatements()"/><method name="getMaxTableNameLength()"/><method name="getMaxTablesInSelect()"/><method name="getMaxUserNameLength()"/><method name="getNumericFunctions()"/><method name="getProcedureTerm()"/><method name="getResultSetHoldability()"/><method name="getSchemaTerm()"/><method name="getSearchStringEscape()"/><method name="getSQLKeywords()"/><method name="getSQLStateType()"/><method name="getStringFunctions()"/><method name="getSystemFunctions()"/><method name="getTimeDateFunctions()"/><method name="getURL()"/><method name="getUserName()"/><method name="insertsAreDetected(sym)"/><method name="isCatalogAtStart()"/><method name="isReadOnly()"/><method name="locatorsUpdateCopy()"/><method name="nullPlusNonNullIsNull()"/><method name="nullsAreSortedAtEnd()"/><method name="nullsAreSortedAtStart()"/><method name="nullsAreSortedHigh()"/><method name="nullsAreSortedLow()"/><method name="othersDeletesAreVisible(sym)"/><method name="othersInsertsAreVisible(sym)"/><method name="othersUpdatesAreVisible(sym)"/><method name="ownDeletesAreVisible(sym)"/><method name="ownInsertsAreVisible(sym)"/><method name="ownUpdatesAreVisible(sym)"/><method name="storesLowerCaseIdentifiers()"/><method name="storesLowerCaseQuotedIdentifiers()"/><method name="storesMixedCaseIdentifiers()"/><method name="storesMixedCaseQuotedIdentifiers()"/><method name="storesUpperCaseIdentifiers()"/><method name="storesUpperCaseQuotedIdentifiers()"/><method name="supportsAlterTableWithAddColumn()"/><method name="supportsAlterTableWithDropColumn()"/><method name="supportsANSI92EntryLevelSQL()"/><method name="supportsANSI92FullSQL()"/><method name="supportsANSI92IntermediateSQL()"/><method name="supportsBatchUpdates()"/><method name="supportsCatalogsInDataManipulation()"/><method name="supportsCatalogsInIndexDefinitions()"/><method name="supportsCatalogsInPrivilegeDefinitions()"/><method name="supportsCatalogsInProcedureCalls()"/><method name="supportsCatalogsInTableDefinitions()"/><method name="supportsColumnAliasing()"/><method name="supportsConvert()"/><method name="supportsConvert(sym#sym)"/><method name="supportsCoreSQLGrammar()"/><method name="supportsCorrelatedSubqueries()"/><method name="supportsDataDefinitionAndDataManipulationTransactions()"/><method name="supportsDataManipulationTransactionsOnly()"/><method name="supportsDifferentTableCorrelationNames()"/><method name="supportsExpressionsInOrderBy()"/><method name="supportsExtendedSQLGrammar()"/><method name="supportsFullOuterJoins()"/><method name="supportsGetGeneratedKeys()"/><method name="supportsGroupBy()"/><method name="supportsGroupByBeyondSelect()"/><method name="supportsGroupByUnrelated()"/><method name="supportsIntegrityEnhancementFacility()"/><method name="supportsLikeEscapeClause()"/><method name="supportsLimitedOuterJoins()"/><method name="supportsMinimumSQLGrammar()"/><method name="supportsMixedCaseIdentifiers()"/><method name="supportsMixedCaseQuotedIdentifiers()"/><method name="supportsMultipleOpenResults()"/><method name="supportsMultipleResultSets()"/><method name="supportsMultipleTransactions()"/><method name="supportsNamedParameters()"/><method name="supportsNonNullableColumns()"/><method name="supportsOpenCursorsAcrossCommit()"/><method name="supportsOpenCursorsAcrossRollback()"/><method name="supportsOpenStatementsAcrossCommit()"/><method name="supportsOpenStatementsAcrossRollback()"/><method name="supportsOrderByUnrelated()"/><method name="supportsOuterJoins()"/><method name="supportsPositionedDelete()"/><method name="supportsPositionedUpdate()"/><method name="supportsResultSetConcurrency(sym#sym)"/><method name="supportsResultSetHoldability(sym)"/><method name="supportsResultSetType(sym)"/><method name="supportsSavepoints()"/><method name="supportsSchemasInDataManipulation()"/><method name="supportsSchemasInIndexDefinitions()"/><method name="supportsSchemasInPrivilegeDefinitions()"/><method name="supportsSchemasInProcedureCalls()"/><method name="supportsSchemasInTableDefinitions()"/><method name="supportsSelectForUpdate()"/><method name="supportsStatementPooling()"/><method name="supportsStoredProcedures()"/><method name="supportsSubqueriesInComparisons()"/><method name="supportsSubqueriesInExists()"/><method name="supportsSubqueriesInIns()"/><method name="supportsSubqueriesInQuantifieds()"/><method name="supportsTableCorrelationNames()"/><method name="supportsTransactionIsolationLevel(sym)"/><method name="supportsTransactions()"/><method name="supportsUnion()"/><method name="supportsUnionAll()"/><method name="updatesAreDetected(sym)"/><method name="usesLocalFilePerTable()"/><method name="usesLocalFiles()"/><method name="supportsStoredFunctionsUsingCallSyntax()"/><method name="autoCommitFailureClosesAllResultSets()"/></class><class name="lsp.test.jdk.util.ULocale$Type"><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;()"/></class><class name="lsp.test.jdk.util.Date"><method name="after(sym)"/><method name="before(sym)"/><method name="compareTo(sym)"/><method name="clone()"/><method name="equals(sym)"/><method name="compareTo(sym)"/><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym)"/><method name="getDate()"/><method name="getDay()"/><method name="getHours()"/><method name="getMinutes()"/><method name="getMonth()"/><method name="getSeconds()"/><method name="getTime()"/><method name="getTimezoneOffset()"/><method name="getYear()"/><method name="hashCode()"/><method name="parse(sym#sym)"/><method name="parse(sym)"/><method name="setDate(sym)"/><method name="setHours(sym)"/><method name="setMinutes(sym)"/><method name="setMonth(sym)"/><method name="setSeconds(sym)"/><method name="setTime(sym)"/><method name="setYear(sym)"/><method name="toGMTString()"/><method name="toLocaleString()"/><method name="toString()"/><method name="toTwoDigits(sym)"/><method name="UTC(sym#sym#sym#sym#sym#sym)"/><method name="zone(sym)"/><method name="writeObject(sym)"/><method name="readObject(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.IllegalFormatConversionException"><method name="&lt;init&gt;(sym#sym)"/><method name="getArgumentClass()"/><method name="getConversion()"/><method name="getMessage()"/></class><class name="lsp.test.jdk.util.Collections$EmptyMap"><method name="get(sym)"/><method name="containsKey(sym)"/><method name="containsValue(sym)"/><method name="values()"/><method name="equals(sym)"/><method name="readResolve()"/><method name="keySet()"/><method name="entrySet()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;()"/><method name="size()"/><method name="isEmpty()"/><method name="hashCode()"/></class><class name="lsp.test.jdk.util.Hashtable$EmptyIterator"><method name="next()"/><method name="&lt;init&gt;()"/><method name="hasNext()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.AttributedString$AttributedIterator"><method name="&lt;init&gt;(sym#sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="getAttribute(sym)"/><method name="currentValue(sym)"/><method name="getRunLimit(sym)"/><method name="getRunStart(sym)"/><method name="clone()"/><method name="getAttributes()"/><method name="inRange(sym)"/><method name="getAllAttributeKeys()"/><method name="runLimit(sym)"/><method name="getRunLimit(sym)"/><method name="runStart(sym)"/><method name="getRunStart(sym)"/><method name="inRange(sym)"/><method name="current()"/><method name="first()"/><method name="getBeginIndex()"/><method name="getEndIndex()"/><method name="getIndex()"/><method name="getRunLimit()"/><method name="getRunStart()"/><method name="last()"/><method name="next()"/><method name="previous()"/><method name="setIndex(sym)"/></class><class name="lsp.test.jdk.util.AsciiUtil$CaseInsensitiveKey"><method name="equals(sym)"/><method name="&lt;init&gt;(sym)"/><method name="hashCode()"/></class><class name="lsp.test.jdk.util.EnumMap$KeySet"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="remove(sym)"/><method name="iterator()"/><method name="size()"/><method name="clear()"/></class><class name="lsp.test.jdk.util.AsciiUtil"><method name="&lt;init&gt;()"/><method name="caseIgnoreMatch(sym#sym)"/><method name="caseIgnoreCompare(sym#sym)"/><method name="toUpper(sym)"/><method name="toLower(sym)"/><method name="toLowerString(sym)"/><method name="toUpperString(sym)"/><method name="toTitleString(sym)"/><method name="isAlpha(sym)"/><method name="isAlphaString(sym)"/><method name="isNumeric(sym)"/><method name="isNumericString(sym)"/><method name="isAlphaNumeric(sym)"/><method name="isAlphaNumericString(sym)"/></class><class name="lsp.test.jdk.util.HashMap$HashIterator"><method name="&lt;init&gt;(sym)"/><method name="nextEntry()"/><method name="hasNext()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.ULocale$IDParser"><method name="access$1300(sym)"/><method name="getKeywordMap()"/><method name="getKeyComparator()"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="reset()"/><method name="append(sym)"/><method name="addSeparator()"/><method name="getString(sym)"/><method name="set(sym#sym)"/><method name="append(sym)"/><method name="next()"/><method name="skipUntilTerminatorOrIDSeparator()"/><method name="atTerminator()"/><method name="isTerminator(sym)"/><method name="isTerminatorOrIDSeparator(sym)"/><method name="haveExperimentalLanguagePrefix()"/><method name="haveKeywordAssign()"/><method name="parseLanguage()"/><method name="skipLanguage()"/><method name="parseScript()"/><method name="skipScript()"/><method name="parseCountry()"/><method name="skipCountry()"/><method name="parseVariant()"/><method name="getLanguage()"/><method name="getScript()"/><method name="getCountry()"/><method name="getVariant()"/><method name="getLanguageScriptCountryVariant()"/><method name="setBaseName(sym)"/><method name="parseBaseName()"/><method name="getBaseName()"/><method name="getName()"/><method name="setToKeywordStart()"/><method name="isDoneOrKeywordAssign(sym)"/><method name="isDoneOrItemSeparator(sym)"/><method name="getKeyword()"/><method name="getValue()"/><method name="parseKeywords()"/><method name="getKeywords()"/><method name="getKeywordValue(sym)"/><method name="defaultKeywordValue(sym#sym)"/><method name="setKeywordValue(sym#sym)"/><method name="setKeywordValue(sym#sym#sym)"/></class><class name="lsp.test.jdk.util.ICUResourceBundle$1"><method name="run()"/><method name="&lt;init&gt;(sym#sym)"/></class><class name="lsp.test.jdk.util.HashMap$KeySet"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="remove(sym)"/><method name="iterator()"/><method name="size()"/><method name="clear()"/></class><class name="lsp.test.jdk.util.BreakIterator"><method name="getCharacterInstance(sym)"/><method name="getLineInstance(sym)"/><method name="getSentenceInstance(sym)"/><method name="getWordInstance(sym)"/><method name="getAvailableLocales()"/><method name="getCharacterInstance()"/><method name="getLineInstance()"/><method name="getSentenceInstance()"/><method name="getWordInstance()"/><method name="&lt;init&gt;(sym)"/><method name="clone()"/><method name="getText()"/><method name="setText(sym)"/><method name="&lt;init&gt;()"/><method name="isBoundary(sym)"/><method name="preceding(sym)"/><method name="setText(sym)"/><method name="current()"/><method name="first()"/><method name="following(sym)"/><method name="last()"/><method name="next()"/><method name="next(sym)"/><method name="previous()"/><method name="getLong(sym#sym)"/><method name="getInt(sym#sym)"/><method name="getShort(sym#sym)"/></class><class name="lsp.test.jdk.util.EnumMap$Values"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="remove(sym)"/><method name="iterator()"/><method name="size()"/><method name="clear()"/></class><class name="lsp.test.jdk.util.Collections$UnmodifiableSortedSet"><method name="subSet(sym#sym)"/><method name="headSet(sym)"/><method name="tailSet(sym)"/><method name="first()"/><method name="last()"/><method name="&lt;init&gt;(sym)"/><method name="comparator()"/></class><class name="lsp.test.jdk.util.sql.SQLRecoverableException"><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/></class><class name="lsp.test.jdk.util.EnumSet$SerializationProxy"><method name="&lt;init&gt;(sym)"/><method name="readResolve()"/></class><class name="lsp.test.jdk.util.Collections$EmptySet$1"><method name="next()"/><method name="&lt;init&gt;(sym)"/><method name="hasNext()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.ResourceBundle$NoFallbackControl"><method name="getFallbackLocale(sym#sym)"/><method name="access$1000()"/><method name="access$1100()"/><method name="access$1200()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.TreeMap$NavigableSubMap$SubMapKeyIterator"><method name="&lt;init&gt;(sym#sym#sym)"/><method name="next()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.HashMap$EntrySet"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="remove(sym)"/><method name="iterator()"/><method name="size()"/><method name="clear()"/></class><class name="lsp.test.jdk.util.sql.Timestamp"><method name="after(sym)"/><method name="before(sym)"/><method name="compareTo(sym)"/><method name="equals(sym)"/><method name="valueOf(sym)"/><method name="compareTo(sym)"/><method name="equals(sym)"/><method name="compareTo(sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym#sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="getNanos()"/><method name="getTime()"/><method name="setNanos(sym)"/><method name="setTime(sym)"/><method name="setTimeImpl(sym)"/><method name="toString()"/><method name="format(sym#sym#sym)"/></class><class name="lsp.test.jdk.util.IdentityHashMap$EntryIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="setValue(sym)"/><method name="getKey()"/><method name="getValue()"/><method name="equals(sym)"/><method name="next()"/><method name="next()"/><method name="hashCode()"/><method name="toString()"/></class><class name="lsp.test.jdk.util.LinkedHashSet"><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;()"/></class><class name="lsp.test.jdk.util.Properties$LineReader"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="readLine()"/></class><class name="lsp.test.jdk.util.EmptyStackException"><method name="&lt;init&gt;()"/></class><class name="lsp.test.jdk.util.TreeMap$DescendingKeyIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="next()"/></class><class name="lsp.test.jdk.util.ParseException"><method name="&lt;init&gt;(sym#sym)"/><method name="getErrorOffset()"/></class><class name="lsp.test.jdk.util.LinkedHashMap$Entry"><method name="recordAccess(sym)"/><method name="recordRemoval(sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/><method name="access$600(sym#sym)"/><method name="addBefore(sym)"/><method name="remove()"/></class><class name="lsp.test.jdk.util.IllegalFormatCodePointException"><method name="&lt;init&gt;(sym)"/><method name="getCodePoint()"/><method name="getMessage()"/></class><class name="lsp.test.jdk.util.ResourceBundle$LoaderReference"><method name="&lt;init&gt;(sym#sym#sym)"/><method name="getCacheKey()"/></class><class name="lsp.test.jdk.util.FieldPosition"><method name="equals(sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="getFieldAttribute()"/><method name="&lt;init&gt;(sym)"/><method name="clear()"/><method name="getBeginIndex()"/><method name="getEndIndex()"/><method name="getField()"/><method name="hashCode()"/><method name="setBeginIndex(sym)"/><method name="setEndIndex(sym)"/><method name="toString()"/></class><class name="lsp.test.jdk.util.sql.RowId"><method name="equals(sym)"/><method name="getBytes()"/><method name="toString()"/><method name="hashCode()"/></class><class name="lsp.test.jdk.util.ArrayDeque"><method name="access$400(sym)"/><method name="clone()"/><method name="access$200(sym)"/><method name="access$300(sym)"/><method name="access$500(sym#sym)"/><method name="copyElements(sym)"/><method name="toArray(sym)"/><method name="toArray()"/><method name="&lt;init&gt;(sym)"/><method name="addFirst(sym)"/><method name="addLast(sym)"/><method name="offerFirst(sym)"/><method name="offerLast(sym)"/><method name="removeFirst()"/><method name="removeLast()"/><method name="pollFirst()"/><method name="pollLast()"/><method name="getFirst()"/><method name="getLast()"/><method name="peekFirst()"/><method name="peekLast()"/><method name="removeFirstOccurrence(sym)"/><method name="removeLastOccurrence(sym)"/><method name="add(sym)"/><method name="offer(sym)"/><method name="remove()"/><method name="poll()"/><method name="element()"/><method name="peek()"/><method name="push(sym)"/><method name="pop()"/><method name="contains(sym)"/><method name="remove(sym)"/><method name="clone()"/><method name="allocateElements(sym)"/><method name="doubleCapacity()"/><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="checkInvariants()"/><method name="delete(sym)"/><method name="size()"/><method name="isEmpty()"/><method name="iterator()"/><method name="descendingIterator()"/><method name="clear()"/><method name="writeObject(sym)"/><method name="readObject(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.sql.SQLClientInfoException"><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/><method name="getFailedProperties()"/><method name="&lt;init&gt;()"/></class><class name="lsp.test.jdk.util.IdentityHashMap$ValueIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="next()"/></class><class name="lsp.test.jdk.util.Hashtable"><method name="access$400(sym)"/><method name="access$100(sym#sym)"/><method name="access$200(sym)"/><method name="access$508(sym)"/><method name="access$210(sym)"/><method name="access$500(sym)"/><method name="put(sym#sym)"/><method name="reconstitutionPut(sym#sym#sym)"/><method name="get(sym)"/><method name="remove(sym)"/><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="containsValue(sym)"/><method name="containsKey(sym)"/><method name="putAll(sym)"/><method name="clone()"/><method name="values()"/><method name="equals(sym)"/><method name="keySet()"/><method name="entrySet()"/><method name="keys()"/><method name="elements()"/><method name="getEnumeration(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;()"/><method name="size()"/><method name="isEmpty()"/><method name="rehash()"/><method name="clear()"/><method name="toString()"/><method name="getIterator(sym)"/><method name="hashCode()"/><method name="writeObject(sym)"/><method name="readObject(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.SortedMap"><method name="subMap(sym#sym)"/><method name="headMap(sym)"/><method name="tailMap(sym)"/><method name="firstKey()"/><method name="lastKey()"/><method name="values()"/><method name="keySet()"/><method name="entrySet()"/><method name="comparator()"/></class><class name="lsp.test.jdk.util.Collator"><method name="compare(sym#sym)"/><method name="getInstance()"/><method name="getInstance(sym)"/><method name="&lt;init&gt;(sym)"/><method name="clone()"/><method name="equals(sym)"/><method name="getCollationKey(sym)"/><method name="&lt;init&gt;()"/><method name="compare(sym#sym)"/><method name="equals(sym#sym)"/><method name="getAvailableLocales()"/><method name="getDecomposition()"/><method name="getStrength()"/><method name="hashCode()"/><method name="setDecomposition(sym)"/><method name="setStrength(sym)"/><method name="decompositionMode_Java_ICU(sym)"/><method name="decompositionMode_ICU_Java(sym)"/><method name="strength_Java_ICU(sym)"/><method name="strength_ICU_Java(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.Collections$SynchronizedSortedSet"><method name="subSet(sym#sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="headSet(sym)"/><method name="tailSet(sym)"/><method name="first()"/><method name="last()"/><method name="&lt;init&gt;(sym)"/><method name="comparator()"/></class><class name="lsp.test.jdk.util.Collection"><method name="toArray(sym)"/><method name="toArray()"/><method name="contains(sym)"/><method name="add(sym)"/><method name="remove(sym)"/><method name="containsAll(sym)"/><method name="addAll(sym)"/><method name="removeAll(sym)"/><method name="retainAll(sym)"/><method name="equals(sym)"/><method name="size()"/><method name="isEmpty()"/><method name="iterator()"/><method name="clear()"/><method name="hashCode()"/></class><class name="lsp.test.jdk.util.IllegalFormatWidthException"><method name="&lt;init&gt;(sym)"/><method name="getWidth()"/><method name="getMessage()"/></class><class name="lsp.test.jdk.util.NavigableSet"><method name="subSet(sym#sym)"/><method name="subSet(sym#sym#sym#sym)"/><method name="lower(sym)"/><method name="floor(sym)"/><method name="ceiling(sym)"/><method name="higher(sym)"/><method name="headSet(sym)"/><method name="tailSet(sym)"/><method name="headSet(sym#sym)"/><method name="tailSet(sym#sym)"/><method name="pollFirst()"/><method name="pollLast()"/><method name="descendingSet()"/><method name="iterator()"/><method name="descendingIterator()"/></class><class name="lsp.test.jdk.util.ResourceBundle$BundleReference"><method name="&lt;init&gt;(sym#sym#sym)"/><method name="getCacheKey()"/></class><class name="lsp.test.jdk.util.sql.ClientInfoStatus"><method name="values()"/><method name="valueOf(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.Dictionary"><method name="put(sym#sym)"/><method name="get(sym)"/><method name="remove(sym)"/><method name="keys()"/><method name="elements()"/><method name="&lt;init&gt;()"/><method name="size()"/><method name="isEmpty()"/></class><class name="lsp.test.jdk.util.TreeMap$EntryIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="next()"/><method name="next()"/></class><class name="lsp.test.jdk.util.ResourceBundle$Control$1"><method name="&lt;init&gt;(sym#sym#sym#sym)"/><method name="run()"/><method name="run()"/></class><class name="lsp.test.jdk.util.EnumMap$EntrySet"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="toArray(sym)"/><method name="fillEntryArray(sym)"/><method name="toArray()"/><method name="contains(sym)"/><method name="remove(sym)"/><method name="iterator()"/><method name="size()"/><method name="clear()"/></class><class name="lsp.test.jdk.util.sql.SQLTransientConnectionException"><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/></class><class name="lsp.test.jdk.util.sql.SQLSyntaxErrorException"><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/></class><class name="lsp.test.jdk.util.Currency"><method name="readResolve()"/><method name="getInstance(sym)"/><method name="getInstance(sym#sym)"/><method name="getInstance(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="getCurrencyCode()"/><method name="getSymbol()"/><method name="getSymbol(sym)"/><method name="getDefaultFractionDigits()"/><method name="toString()"/><method name="getMainTableEntry(sym#sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.sql.SQLException"><method name="access$000(sym)"/><method name="getNextException()"/><method name="setNextException(sym)"/><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/><method name="getErrorCode()"/><method name="getSQLState()"/><method name="iterator()"/></class><class name="lsp.test.jdk.util.sql.Savepoint"><method name="getSavepointId()"/><method name="getSavepointName()"/></class><class name="lsp.test.jdk.util.Collections$CheckedMap$CheckedEntrySet"><method name="toArray(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="toArray()"/><method name="remove(sym)"/><method name="removeAll(sym)"/><method name="retainAll(sym)"/><method name="addAll(sym)"/><method name="contains(sym)"/><method name="containsAll(sym)"/><method name="equals(sym)"/><method name="add(sym)"/><method name="add(sym)"/><method name="size()"/><method name="isEmpty()"/><method name="toString()"/><method name="hashCode()"/><method name="clear()"/><method name="iterator()"/></class><class name="lsp.test.jdk.util.List"><method name="toArray(sym)"/><method name="set(sym#sym)"/><method name="toArray()"/><method name="contains(sym)"/><method name="add(sym)"/><method name="remove(sym)"/><method name="containsAll(sym)"/><method name="addAll(sym)"/><method name="addAll(sym#sym)"/><method name="removeAll(sym)"/><method name="retainAll(sym)"/><method name="equals(sym)"/><method name="get(sym)"/><method name="add(sym#sym)"/><method name="remove(sym)"/><method name="indexOf(sym)"/><method name="lastIndexOf(sym)"/><method name="subList(sym#sym)"/><method name="listIterator()"/><method name="listIterator(sym)"/><method name="size()"/><method name="isEmpty()"/><method name="iterator()"/><method name="clear()"/><method name="hashCode()"/></class><class name="lsp.test.jdk.util.sql.Wrapper"><method name="unwrap(sym)"/><method name="isWrapperFor(sym)"/></class><class name="lsp.test.jdk.util.TreeMap$AscendingSubMap"><method name="&lt;init&gt;(sym#sym#sym#sym#sym#sym#sym)"/><method name="subMap(sym#sym#sym#sym)"/><method name="subCeiling(sym)"/><method name="subHigher(sym)"/><method name="subFloor(sym)"/><method name="subLower(sym)"/><method name="headMap(sym#sym)"/><method name="tailMap(sym#sym)"/><method name="subLowest()"/><method name="subHighest()"/><method name="entrySet()"/><method name="descendingMap()"/><method name="comparator()"/><method name="keyIterator()"/><method name="descendingKeyIterator()"/></class><class name="lsp.test.jdk.util.XMLUtils$EH"><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;()"/><method name="error(sym)"/><method name="fatalError(sym)"/><method name="warning(sym)"/></class><class name="lsp.test.jdk.util.sql.ResultSet"><method name="getTimestamp(sym#sym)"/><method name="getTimestamp(sym#sym)"/><method name="getDate(sym#sym)"/><method name="getDate(sym#sym)"/><method name="getTime(sym#sym)"/><method name="getTime(sym#sym)"/><method name="getObject(sym#sym)"/><method name="getObject(sym#sym)"/><method name="getTimestamp(sym)"/><method name="getTimestamp(sym)"/><method name="updateTimestamp(sym#sym)"/><method name="updateTimestamp(sym#sym)"/><method name="getWarnings()"/><method name="getObject(sym)"/><method name="getObject(sym)"/><method name="updateObject(sym#sym)"/><method name="updateObject(sym#sym#sym)"/><method name="updateObject(sym#sym)"/><method name="updateObject(sym#sym#sym)"/><method name="getStatement()"/><method name="getClob(sym)"/><method name="getClob(sym)"/><method name="updateClob(sym#sym)"/><method name="updateClob(sym#sym)"/><method name="getDate(sym)"/><method name="getDate(sym)"/><method name="getTime(sym)"/><method name="getTime(sym)"/><method name="updateDate(sym#sym)"/><method name="updateDate(sym#sym)"/><method name="updateTime(sym#sym)"/><method name="updateTime(sym#sym)"/><method name="getArray(sym)"/><method name="getArray(sym)"/><method name="getBlob(sym)"/><method name="getBlob(sym)"/><method name="getMetaData()"/><method name="getRef(sym)"/><method name="getRef(sym)"/><method name="updateArray(sym#sym)"/><method name="updateArray(sym#sym)"/><method name="updateBlob(sym#sym)"/><method name="updateBlob(sym#sym)"/><method name="updateRef(sym#sym)"/><method name="updateRef(sym#sym)"/><method name="getRowId(sym)"/><method name="getRowId(sym)"/><method name="updateRowId(sym#sym)"/><method name="updateRowId(sym#sym)"/><method name="updateNClob(sym#sym)"/><method name="updateNClob(sym#sym)"/><method name="getNClob(sym)"/><method name="getNClob(sym)"/><method name="getSQLXML(sym)"/><method name="getSQLXML(sym)"/><method name="updateSQLXML(sym#sym)"/><method name="updateSQLXML(sym#sym)"/><method name="absolute(sym)"/><method name="afterLast()"/><method name="beforeFirst()"/><method name="cancelRowUpdates()"/><method name="clearWarnings()"/><method name="close()"/><method name="deleteRow()"/><method name="findColumn(sym)"/><method name="first()"/><method name="getAsciiStream(sym)"/><method name="getAsciiStream(sym)"/><method name="getBigDecimal(sym)"/><method name="getBigDecimal(sym#sym)"/><method name="getBigDecimal(sym)"/><method name="getBigDecimal(sym#sym)"/><method name="getBinaryStream(sym)"/><method name="getBinaryStream(sym)"/><method name="getBoolean(sym)"/><method name="getBoolean(sym)"/><method name="getByte(sym)"/><method name="getByte(sym)"/><method name="getBytes(sym)"/><method name="getBytes(sym)"/><method name="getCharacterStream(sym)"/><method name="getCharacterStream(sym)"/><method name="getConcurrency()"/><method name="getCursorName()"/><method name="getDouble(sym)"/><method name="getDouble(sym)"/><method name="getFetchDirection()"/><method name="getFetchSize()"/><method name="getFloat(sym)"/><method name="getFloat(sym)"/><method name="getInt(sym)"/><method name="getInt(sym)"/><method name="getLong(sym)"/><method name="getLong(sym)"/><method name="getRow()"/><method name="getShort(sym)"/><method name="getShort(sym)"/><method name="getString(sym)"/><method name="getString(sym)"/><method name="getType()"/><method name="getUnicodeStream(sym)"/><method name="getUnicodeStream(sym)"/><method name="getURL(sym)"/><method name="getURL(sym)"/><method name="insertRow()"/><method name="isAfterLast()"/><method name="isBeforeFirst()"/><method name="isFirst()"/><method name="isLast()"/><method name="last()"/><method name="moveToCurrentRow()"/><method name="moveToInsertRow()"/><method name="next()"/><method name="previous()"/><method name="refreshRow()"/><method name="relative(sym)"/><method name="rowDeleted()"/><method name="rowInserted()"/><method name="rowUpdated()"/><method name="setFetchDirection(sym)"/><method name="setFetchSize(sym)"/><method name="updateAsciiStream(sym#sym#sym)"/><method name="updateAsciiStream(sym#sym#sym)"/><method name="updateBigDecimal(sym#sym)"/><method name="updateBigDecimal(sym#sym)"/><method name="updateBinaryStream(sym#sym#sym)"/><method name="updateBinaryStream(sym#sym#sym)"/><method name="updateBoolean(sym#sym)"/><method name="updateBoolean(sym#sym)"/><method name="updateByte(sym#sym)"/><method name="updateByte(sym#sym)"/><method name="updateBytes(sym#sym)"/><method name="updateBytes(sym#sym)"/><method name="updateCharacterStream(sym#sym#sym)"/><method name="updateCharacterStream(sym#sym#sym)"/><method name="updateDouble(sym#sym)"/><method name="updateDouble(sym#sym)"/><method name="updateFloat(sym#sym)"/><method name="updateFloat(sym#sym)"/><method name="updateInt(sym#sym)"/><method name="updateInt(sym#sym)"/><method name="updateLong(sym#sym)"/><method name="updateLong(sym#sym)"/><method name="updateNull(sym)"/><method name="updateNull(sym)"/><method name="updateRow()"/><method name="updateShort(sym#sym)"/><method name="updateShort(sym#sym)"/><method name="updateString(sym#sym)"/><method name="updateString(sym#sym)"/><method name="wasNull()"/><method name="getHoldability()"/><method name="isClosed()"/><method name="updateNString(sym#sym)"/><method name="updateNString(sym#sym)"/><method name="getNString(sym)"/><method name="getNString(sym)"/><method name="getNCharacterStream(sym)"/><method name="getNCharacterStream(sym)"/><method name="updateNCharacterStream(sym#sym#sym)"/><method name="updateNCharacterStream(sym#sym#sym)"/><method name="updateAsciiStream(sym#sym#sym)"/><method name="updateBinaryStream(sym#sym#sym)"/><method name="updateCharacterStream(sym#sym#sym)"/><method name="updateAsciiStream(sym#sym#sym)"/><method name="updateBinaryStream(sym#sym#sym)"/><method name="updateCharacterStream(sym#sym#sym)"/><method name="updateBlob(sym#sym#sym)"/><method name="updateBlob(sym#sym#sym)"/><method name="updateClob(sym#sym#sym)"/><method name="updateClob(sym#sym#sym)"/><method name="updateNClob(sym#sym#sym)"/><method name="updateNClob(sym#sym#sym)"/><method name="updateNCharacterStream(sym#sym)"/><method name="updateNCharacterStream(sym#sym)"/><method name="updateAsciiStream(sym#sym)"/><method name="updateBinaryStream(sym#sym)"/><method name="updateCharacterStream(sym#sym)"/><method name="updateAsciiStream(sym#sym)"/><method name="updateBinaryStream(sym#sym)"/><method name="updateCharacterStream(sym#sym)"/><method name="updateBlob(sym#sym)"/><method name="updateBlob(sym#sym)"/><method name="updateClob(sym#sym)"/><method name="updateClob(sym#sym)"/><method name="updateNClob(sym#sym)"/><method name="updateNClob(sym#sym)"/></class><class name="lsp.test.jdk.util.LinkedList"><method name="access$300(sym#sym#sym)"/><method name="access$200(sym#sym)"/><method name="access$000(sym)"/><method name="access$100(sym)"/><method name="toArray(sym)"/><method name="addBefore(sym#sym)"/><method name="set(sym#sym)"/><method name="remove(sym)"/><method name="toArray()"/><method name="&lt;init&gt;(sym)"/><method name="getFirst()"/><method name="getLast()"/><method name="removeFirst()"/><method name="removeLast()"/><method name="addFirst(sym)"/><method name="addLast(sym)"/><method name="contains(sym)"/><method name="add(sym)"/><method name="remove(sym)"/><method name="addAll(sym)"/><method name="addAll(sym#sym)"/><method name="get(sym)"/><method name="add(sym#sym)"/><method name="remove(sym)"/><method name="indexOf(sym)"/><method name="lastIndexOf(sym)"/><method name="peek()"/><method name="element()"/><method name="poll()"/><method name="remove()"/><method name="offer(sym)"/><method name="offerFirst(sym)"/><method name="offerLast(sym)"/><method name="peekFirst()"/><method name="peekLast()"/><method name="pollFirst()"/><method name="pollLast()"/><method name="push(sym)"/><method name="pop()"/><method name="removeFirstOccurrence(sym)"/><method name="removeLastOccurrence(sym)"/><method name="clone()"/><method name="entry(sym)"/><method name="listIterator(sym)"/><method name="&lt;init&gt;()"/><method name="size()"/><method name="clear()"/><method name="descendingIterator()"/><method name="writeObject(sym)"/><method name="readObject(sym)"/></class><class name="lsp.test.jdk.util.GregorianCalendar"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym)"/><method name="getGregorianChange()"/><method name="setGregorianChange(sym)"/><method name="clone()"/><method name="equals(sym)"/><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym)"/><method name="add(sym#sym)"/><method name="fullFieldsCalc(sym#sym#sym)"/><method name="cachedFieldsCheckAndGet(sym#sym#sym#sym#sym)"/><method name="computeFields()"/><method name="computeTime()"/><method name="computeYearAndDay(sym#sym)"/><method name="daysFromBaseYear(sym)"/><method name="daysInMonth()"/><method name="daysInMonth(sym#sym)"/><method name="daysInYear(sym)"/><method name="daysInYear(sym#sym)"/><method name="getActualMaximum(sym)"/><method name="getActualMinimum(sym)"/><method name="getGreatestMinimum(sym)"/><method name="getLeastMaximum(sym)"/><method name="getMaximum(sym)"/><method name="getMinimum(sym)"/><method name="getOffset(sym)"/><method name="hashCode()"/><method name="isLeapYear(sym)"/><method name="julianError()"/><method name="mod(sym#sym)"/><method name="mod7(sym)"/><method name="roll(sym#sym)"/><method name="roll(sym#sym)"/><method name="writeObject(sym)"/><method name="readObject(sym)"/><method name="setFirstDayOfWeek(sym)"/><method name="setMinimalDaysInFirstWeek(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.MissingResourceException"><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/><method name="getClassName()"/><method name="getKey()"/></class><class name="lsp.test.jdk.util.Deque"><method name="addFirst(sym)"/><method name="addLast(sym)"/><method name="offerFirst(sym)"/><method name="offerLast(sym)"/><method name="removeFirst()"/><method name="removeLast()"/><method name="pollFirst()"/><method name="pollLast()"/><method name="getFirst()"/><method name="getLast()"/><method name="peekFirst()"/><method name="peekLast()"/><method name="removeFirstOccurrence(sym)"/><method name="removeLastOccurrence(sym)"/><method name="add(sym)"/><method name="offer(sym)"/><method name="remove()"/><method name="poll()"/><method name="element()"/><method name="peek()"/><method name="push(sym)"/><method name="pop()"/><method name="remove(sym)"/><method name="contains(sym)"/><method name="size()"/><method name="iterator()"/><method name="descendingIterator()"/></class><class name="lsp.test.jdk.util.LinkedList$ListItr"><method name="&lt;init&gt;(sym#sym)"/><method name="next()"/><method name="previous()"/><method name="set(sym)"/><method name="add(sym)"/><method name="hasNext()"/><method name="hasPrevious()"/><method name="nextIndex()"/><method name="previousIndex()"/><method name="remove()"/><method name="checkForComodification()"/></class><class name="lsp.test.jdk.util.ResourceBundle$SingleFormatControl"><method name="access$800()"/><method name="access$900()"/><method name="&lt;init&gt;(sym)"/><method name="getFormats(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.TreeMap"><method name="access$000(sym#sym)"/><method name="access$200(sym)"/><method name="access$100(sym)"/><method name="put(sym#sym)"/><method name="subMap(sym#sym)"/><method name="subMap(sym#sym#sym#sym)"/><method name="get(sym)"/><method name="remove(sym)"/><method name="lowerKey(sym)"/><method name="floorKey(sym)"/><method name="ceilingKey(sym)"/><method name="higherKey(sym)"/><method name="compare(sym#sym)"/><method name="valEquals(sym#sym)"/><method name="getEntry(sym)"/><method name="getEntryUsingComparator(sym)"/><method name="getCeilingEntry(sym)"/><method name="getFloorEntry(sym)"/><method name="getHigherEntry(sym)"/><method name="getLowerEntry(sym)"/><method name="keyOrNull(sym)"/><method name="key(sym)"/><method name="buildFromSorted(sym#sym#sym#sym#sym#sym#sym)"/><method name="successor(sym)"/><method name="predecessor(sym)"/><method name="parentOf(sym)"/><method name="leftOf(sym)"/><method name="rightOf(sym)"/><method name="headMap(sym)"/><method name="tailMap(sym)"/><method name="lowerEntry(sym)"/><method name="floorEntry(sym)"/><method name="ceilingEntry(sym)"/><method name="higherEntry(sym)"/><method name="headMap(sym#sym)"/><method name="tailMap(sym#sym)"/><method name="addAllForTreeSet(sym#sym)"/><method name="exportEntry(sym)"/><method name="&lt;init&gt;(sym)"/><method name="containsKey(sym)"/><method name="containsValue(sym)"/><method name="firstKey()"/><method name="lastKey()"/><method name="putAll(sym)"/><method name="clone()"/><method name="values()"/><method name="readTreeSet(sym#sym#sym)"/><method name="buildFromSorted(sym#sym#sym#sym)"/><method name="getFirstEntry()"/><method name="getLastEntry()"/><method name="colorOf(sym)"/><method name="setColor(sym#sym)"/><method name="rotateLeft(sym)"/><method name="rotateRight(sym)"/><method name="fixAfterInsertion(sym)"/><method name="deleteEntry(sym)"/><method name="fixAfterDeletion(sym)"/><method name="&lt;init&gt;(sym)"/><method name="keySet()"/><method name="entrySet()"/><method name="firstEntry()"/><method name="lastEntry()"/><method name="pollFirstEntry()"/><method name="pollLastEntry()"/><method name="descendingMap()"/><method name="&lt;init&gt;(sym)"/><method name="comparator()"/><method name="navigableKeySet()"/><method name="descendingKeySet()"/><method name="&lt;init&gt;()"/><method name="size()"/><method name="clear()"/><method name="keyIterator()"/><method name="descendingKeyIterator()"/><method name="writeObject(sym)"/><method name="readObject(sym)"/><method name="computeRedLevel(sym)"/></class><class name="lsp.test.jdk.util.TreeMap$DescendingSubMap"><method name="&lt;init&gt;(sym#sym#sym#sym#sym#sym#sym)"/><method name="subMap(sym#sym#sym#sym)"/><method name="subCeiling(sym)"/><method name="subHigher(sym)"/><method name="subFloor(sym)"/><method name="subLower(sym)"/><method name="headMap(sym#sym)"/><method name="tailMap(sym#sym)"/><method name="subLowest()"/><method name="subHighest()"/><method name="entrySet()"/><method name="descendingMap()"/><method name="comparator()"/><method name="keyIterator()"/><method name="descendingKeyIterator()"/></class><class name="lsp.test.jdk.util.PriorityQueue"><method name="access$300(sym)"/><method name="access$400(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="access$100(sym)"/><method name="access$200(sym)"/><method name="toArray(sym)"/><method name="toArray()"/><method name="&lt;init&gt;(sym)"/><method name="initFromCollection(sym)"/><method name="add(sym)"/><method name="offer(sym)"/><method name="peek()"/><method name="indexOf(sym)"/><method name="remove(sym)"/><method name="removeEq(sym)"/><method name="contains(sym)"/><method name="poll()"/><method name="removeAt(sym)"/><method name="siftUp(sym#sym)"/><method name="siftUpComparable(sym#sym)"/><method name="siftUpUsingComparator(sym#sym)"/><method name="siftDown(sym#sym)"/><method name="siftDownComparable(sym#sym)"/><method name="siftDownUsingComparator(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="comparator()"/><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="grow(sym)"/><method name="iterator()"/><method name="size()"/><method name="clear()"/><method name="heapify()"/><method name="writeObject(sym)"/><method name="readObject(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.Collections$CheckedMap$CheckedEntrySet$1"><method name="next()"/><method name="&lt;init&gt;(sym)"/><method name="next()"/><method name="hasNext()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.EnumMap$KeyIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="next()"/><method name="next()"/></class><class name="lsp.test.jdk.util.Collections$CheckedList"><method name="set(sym#sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="equals(sym)"/><method name="get(sym)"/><method name="remove(sym)"/><method name="indexOf(sym)"/><method name="lastIndexOf(sym)"/><method name="add(sym#sym)"/><method name="addAll(sym#sym)"/><method name="subList(sym#sym)"/><method name="listIterator()"/><method name="listIterator(sym)"/><method name="hashCode()"/></class><class name="lsp.test.jdk.util.Collections$1"><method name="&lt;init&gt;(sym)"/><method name="nextElement()"/><method name="hasMoreElements()"/></class><class name="lsp.test.jdk.util.XMLUtils"><method name="load(sym#sym)"/><method name="importProperties(sym#sym)"/><method name="save(sym#sym#sym#sym)"/><method name="&lt;init&gt;()"/><method name="getLoadingDoc(sym)"/><method name="emitDocument(sym#sym#sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.Collections$UnmodifiableSet"><method name="equals(sym)"/><method name="&lt;init&gt;(sym)"/><method name="hashCode()"/></class><class name="lsp.test.jdk.util.sql.SQLNonTransientConnectionException"><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/></class><class name="lsp.test.jdk.util.UnknownFormatFlagsException"><method name="&lt;init&gt;(sym)"/><method name="getFlags()"/><method name="getMessage()"/></class><class name="lsp.test.jdk.util.sql.SQLNonTransientException"><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/></class><class name="lsp.test.jdk.util.UUID"><method name="equals(sym)"/><method name="compareTo(sym)"/><method name="randomUUID()"/><method name="nameUUIDFromBytes(sym)"/><method name="fromString(sym)"/><method name="compareTo(sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="getLeastSignificantBits()"/><method name="getMostSignificantBits()"/><method name="version()"/><method name="variant()"/><method name="timestamp()"/><method name="clockSequence()"/><method name="node()"/><method name="toString()"/><method name="digits(sym#sym)"/><method name="hashCode()"/><method name="readObject(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.ArrayDeque$DescendingIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="next()"/><method name="hasNext()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.NumberFormat"><method name="getCurrencyInstance(sym)"/><method name="getIntegerInstance(sym)"/><method name="getInstance(sym)"/><method name="getNumberInstance(sym)"/><method name="getPercentInstance(sym)"/><method name="getCurrencyInstance()"/><method name="getIntegerInstance()"/><method name="getInstance()"/><method name="getNumberInstance()"/><method name="getPercentInstance()"/><method name="getAvailableLocales()"/><method name="format(sym#sym#sym)"/><method name="parseObject(sym#sym)"/><method name="clone()"/><method name="equals(sym)"/><method name="format(sym#sym#sym)"/><method name="format(sym#sym#sym)"/><method name="getCurrency()"/><method name="setCurrency(sym)"/><method name="parse(sym#sym)"/><method name="&lt;init&gt;()"/><method name="format(sym)"/><method name="format(sym)"/><method name="getMaximumFractionDigits()"/><method name="getMaximumIntegerDigits()"/><method name="getMinimumFractionDigits()"/><method name="getMinimumIntegerDigits()"/><method name="hashCode()"/><method name="isGroupingUsed()"/><method name="isParseIntegerOnly()"/><method name="parse(sym)"/><method name="setGroupingUsed(sym)"/><method name="setMaximumFractionDigits(sym)"/><method name="setMaximumIntegerDigits(sym)"/><method name="setMinimumFractionDigits(sym)"/><method name="setMinimumIntegerDigits(sym)"/><method name="setParseIntegerOnly(sym)"/><method name="writeObject(sym)"/><method name="readObject(sym)"/><method name="getRoundingMode()"/><method name="setRoundingMode(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.sql.Time"><method name="valueOf(sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="getDate()"/><method name="getDay()"/><method name="getMonth()"/><method name="getYear()"/><method name="setDate(sym)"/><method name="setMonth(sym)"/><method name="setYear(sym)"/><method name="setTime(sym)"/><method name="toString()"/><method name="format(sym#sym#sym)"/></class><class name="lsp.test.jdk.util.ArrayList"><method name="toArray(sym)"/><method name="set(sym#sym)"/><method name="toArray()"/><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="indexOf(sym)"/><method name="lastIndexOf(sym)"/><method name="clone()"/><method name="get(sym)"/><method name="add(sym)"/><method name="add(sym#sym)"/><method name="remove(sym)"/><method name="remove(sym)"/><method name="addAll(sym)"/><method name="addAll(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;()"/><method name="trimToSize()"/><method name="ensureCapacity(sym)"/><method name="size()"/><method name="isEmpty()"/><method name="fastRemove(sym)"/><method name="clear()"/><method name="removeRange(sym#sym)"/><method name="RangeCheck(sym)"/><method name="writeObject(sym)"/><method name="readObject(sym)"/></class><class name="lsp.test.jdk.util.UResourceBundle"><method name="handleGet(sym#sym#sym)"/><method name="handleGet(sym#sym#sym)"/><method name="getBundleInstance(sym#sym)"/><method name="getBundleInstance(sym#sym#sym)"/><method name="getBundleInstance(sym)"/><method name="getBundleInstance(sym#sym)"/><method name="getBundleInstance(sym#sym#sym)"/><method name="addToCache(sym#sym#sym#sym)"/><method name="loadFromCache(sym#sym#sym)"/><method name="addToCache(sym#sym)"/><method name="loadFromCache(sym)"/><method name="handleGetObjectImpl(sym#sym)"/><method name="resolveObject(sym#sym)"/><method name="getBundleInstance(sym#sym)"/><method name="getBundleInstance(sym#sym#sym)"/><method name="getBundleInstance(sym#sym#sym#sym)"/><method name="getBundleInstance(sym)"/><method name="getParent()"/><method name="instantiateBundle(sym#sym#sym#sym)"/><method name="get(sym)"/><method name="get(sym)"/><method name="getLocale()"/><method name="getULocale()"/><method name="getVersion()"/><method name="getIterator()"/><method name="handleGetObject(sym)"/><method name="getKeys()"/><method name="handleGetKeys()"/><method name="&lt;init&gt;()"/><method name="getLocaleID()"/><method name="getBaseName()"/><method name="resetBundleCache()"/><method name="getRootType(sym#sym)"/><method name="setRootType(sym#sym)"/><method name="getBinary()"/><method name="getString()"/><method name="getStringArray()"/><method name="getBinary(sym)"/><method name="getIntVector()"/><method name="getInt()"/><method name="getUInt()"/><method name="getString(sym)"/><method name="initKeysVector()"/><method name="getSize()"/><method name="getType()"/><method name="getKey()"/><method name="handleGetStringArray()"/><method name="setLoadingStatus(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator"><method name="&lt;init&gt;(sym#sym#sym)"/><method name="next()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.TreeMap$PrivateEntryIterator"><method name="&lt;init&gt;(sym#sym)"/><method name="nextEntry()"/><method name="prevEntry()"/><method name="hasNext()"/><method name="remove()"/></class><class name="lsp.test.jdk.util.sql.SQLInput"><method name="readTimestamp()"/><method name="readObject()"/><method name="readClob()"/><method name="readDate()"/><method name="readTime()"/><method name="readRef()"/><method name="readBlob()"/><method name="readArray()"/><method name="readNClob()"/><method name="readSQLXML()"/><method name="readRowId()"/><method name="readString()"/><method name="readBoolean()"/><method name="readByte()"/><method name="readShort()"/><method name="readInt()"/><method name="readLong()"/><method name="readFloat()"/><method name="readDouble()"/><method name="readBigDecimal()"/><method name="readBytes()"/><method name="readCharacterStream()"/><method name="readAsciiStream()"/><method name="readBinaryStream()"/><method name="wasNull()"/><method name="readURL()"/><method name="readNString()"/></class><class name="lsp.test.jdk.util.ResourceBundle$RBClassLoader$1"><method name="run()"/><method name="run()"/><method name="&lt;init&gt;()"/></class><class name="lsp.test.jdk.util.Format$1"><method name="&lt;init&gt;(sym#sym)"/><method name="run()"/></class><class name="lsp.test.jdk.util.Properties"><method name="&lt;init&gt;(sym)"/><method name="enumerate(sym)"/><method name="enumerateStringProperties(sym)"/><method name="setProperty(sym#sym)"/><method name="stringPropertyNames()"/><method name="propertyNames()"/><method name="load0(sym)"/><method name="&lt;init&gt;()"/><method name="load(sym)"/><method name="load(sym)"/><method name="loadConvert(sym#sym#sym#sym)"/><method name="saveConvert(sym#sym#sym)"/><method name="writeComments(sym#sym)"/><method name="save(sym#sym)"/><method name="store(sym#sym)"/><method name="store(sym#sym)"/><method name="store0(sym#sym#sym)"/><method name="loadFromXML(sym)"/><method name="storeToXML(sym#sym)"/><method name="storeToXML(sym#sym#sym)"/><method name="getProperty(sym)"/><method name="getProperty(sym#sym)"/><method name="list(sym)"/><method name="list(sym)"/><method name="toHex(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.TreeSet"><method name="subSet(sym#sym)"/><method name="subSet(sym#sym#sym#sym)"/><method name="lower(sym)"/><method name="floor(sym)"/><method name="ceiling(sym)"/><method name="higher(sym)"/><method name="headSet(sym)"/><method name="tailSet(sym)"/><method name="headSet(sym#sym)"/><method name="tailSet(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="contains(sym)"/><method name="add(sym)"/><method name="remove(sym)"/><method name="addAll(sym)"/><method name="first()"/><method name="last()"/><method name="pollFirst()"/><method name="pollLast()"/><method name="clone()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym)"/><method name="descendingSet()"/><method name="comparator()"/><method name="&lt;init&gt;()"/><method name="iterator()"/><method name="descendingIterator()"/><method name="size()"/><method name="isEmpty()"/><method name="clear()"/><method name="writeObject(sym)"/><method name="readObject(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.ULocale$IDParser$1"><method name="compare(sym#sym)"/><method name="&lt;init&gt;(sym)"/></class><class name="lsp.test.jdk.util.Collections$SynchronizedSet"><method name="&lt;init&gt;(sym#sym)"/><method name="equals(sym)"/><method name="&lt;init&gt;(sym)"/><method name="hashCode()"/></class><class name="lsp.test.jdk.util.sql.PreparedStatement"><method name="setTimestamp(sym#sym#sym)"/><method name="setDate(sym#sym#sym)"/><method name="setTime(sym#sym#sym)"/><method name="setTimestamp(sym#sym)"/><method name="setObject(sym#sym)"/><method name="setObject(sym#sym#sym)"/><method name="setObject(sym#sym#sym#sym)"/><method name="setClob(sym#sym)"/><method name="setDate(sym#sym)"/><method name="setTime(sym#sym)"/><method name="executeQuery()"/><method name="getMetaData()"/><method name="getParameterMetaData()"/><method name="setArray(sym#sym)"/><method name="setBlob(sym#sym)"/><method name="setRef(sym#sym)"/><method name="setRowId(sym#sym)"/><method name="setNClob(sym#sym)"/><method name="setSQLXML(sym#sym)"/><method name="addBatch()"/><method name="clearParameters()"/><method name="execute()"/><method name="executeUpdate()"/><method name="setAsciiStream(sym#sym#sym)"/><method name="setBigDecimal(sym#sym)"/><method name="setBinaryStream(sym#sym#sym)"/><method name="setBoolean(sym#sym)"/><method name="setByte(sym#sym)"/><method name="setBytes(sym#sym)"/><method name="setCharacterStream(sym#sym#sym)"/><method name="setDouble(sym#sym)"/><method name="setFloat(sym#sym)"/><method name="setInt(sym#sym)"/><method name="setLong(sym#sym)"/><method name="setNull(sym#sym)"/><method name="setNull(sym#sym#sym)"/><method name="setShort(sym#sym)"/><method name="setString(sym#sym)"/><method name="setUnicodeStream(sym#sym#sym)"/><method name="setURL(sym#sym)"/><method name="setNString(sym#sym)"/><method name="setNCharacterStream(sym#sym#sym)"/><method name="setClob(sym#sym#sym)"/><method name="setBlob(sym#sym#sym)"/><method name="setNClob(sym#sym#sym)"/><method name="setAsciiStream(sym#sym#sym)"/><method name="setBinaryStream(sym#sym#sym)"/><method name="setCharacterStream(sym#sym#sym)"/><method name="setAsciiStream(sym#sym)"/><method name="setBinaryStream(sym#sym)"/><method name="setCharacterStream(sym#sym)"/><method name="setNCharacterStream(sym#sym)"/><method name="setClob(sym#sym)"/><method name="setBlob(sym#sym)"/><method name="setNClob(sym#sym)"/></class><class name="lsp.test.jdk.util.LinkedHashMap"><method name="access$100(sym)"/><method name="access$000(sym)"/><method name="get(sym)"/><method name="addEntry(sym#sym#sym#sym)"/><method name="createEntry(sym#sym#sym#sym)"/><method name="transfer(sym)"/><method name="&lt;init&gt;(sym)"/><method name="containsValue(sym)"/><method name="removeEldestEntry(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="init()"/><method name="clear()"/><method name="newKeyIterator()"/><method name="newValueIterator()"/><method name="newEntryIterator()"/></class><class name="lsp.test.jdk.util.AttributedCharacterIterator$Attribute"><method name="equals(sym)"/><method name="readResolve()"/><method name="&lt;init&gt;(sym)"/><method name="getName()"/><method name="hashCode()"/><method name="toString()"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.SubList"><method name="&lt;init&gt;(sym#sym#sym)"/><method name="set(sym#sym)"/><method name="get(sym)"/><method name="add(sym#sym)"/><method name="remove(sym)"/><method name="addAll(sym)"/><method name="addAll(sym#sym)"/><method name="subList(sym#sym)"/><method name="listIterator(sym)"/><method name="size()"/><method name="removeRange(sym#sym)"/><method name="iterator()"/><method name="rangeCheck(sym)"/><method name="checkForComodification()"/></class><class name="lsp.test.jdk.util.HashMap$Entry"><method name="recordAccess(sym)"/><method name="recordRemoval(sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/><method name="setValue(sym)"/><method name="getKey()"/><method name="getValue()"/><method name="equals(sym)"/><method name="hashCode()"/><method name="toString()"/></class><class name="lsp.test.jdk.util.sql.SQLTransientException"><method name="&lt;init&gt;()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;(sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym)"/><method name="&lt;init&gt;(sym#sym#sym#sym)"/></class><class name="lsp.test.jdk.util.Collections"><method name="list(sym)"/><method name="checkedMap(sym#sym#sym)"/><method name="checkedSortedMap(sym#sym#sym)"/><method name="synchronizedCollection(sym#sym)"/><method name="checkedCollection(sym#sym)"/><method name="singletonMap(sym#sym)"/><method name="replaceAll(sym#sym#sym)"/><method name="synchronizedSet(sym#sym)"/><method name="synchronizedList(sym#sym)"/><method name="checkedSet(sym#sym)"/><method name="checkedList(sym#sym)"/><method name="min(sym#sym)"/><method name="max(sym#sym)"/><method name="binarySearch(sym#sym#sym)"/><method name="indexedBinarySearch(sym#sym#sym)"/><method name="iteratorBinarySearch(sym#sym#sym)"/><method name="checkedSortedSet(sym#sym)"/><method name="addAll(sym#sym)"/><method name="min(sym)"/><method name="max(sym)"/><method name="unmodifiableCollection(sym)"/><method name="unmodifiableMap(sym)"/><method name="synchronizedCollection(sym)"/><method name="synchronizedMap(sym)"/><method name="eq(sym#sym)"/><method name="frequency(sym#sym)"/><method name="disjoint(sym#sym)"/><method name="access$000(sym#sym)"/><method name="binarySearch(sym#sym)"/><method name="indexedBinarySearch(sym#sym)"/><method name="iteratorBinarySearch(sym#sym)"/><method name="fill(sym#sym)"/><method name="singleton(sym)"/><method name="singletonList(sym)"/><method name="nCopies(sym#sym)"/><method name="newSetFromMap(sym)"/><method name="copy(sym#sym)"/><method name="indexOfSubList(sym#sym)"/><method name="lastIndexOfSubList(sym#sym)"/><method name="unmodifiableSet(sym)"/><method name="unmodifiableList(sym)"/><method name="unmodifiableSortedMap(sym)"/><method name="synchronizedSet(sym)"/><method name="synchronizedList(sym)"/><method name="synchronizedSortedMap(sym)"/><method name="get(sym#sym)"/><method name="enumeration(sym)"/><method name="sort(sym#sym)"/><method name="unmodifiableSortedSet(sym)"/><method name="synchronizedSortedSet(sym)"/><method name="swap(sym#sym#sym)"/><method name="emptyMap()"/><method name="asLifoQueue(sym)"/><method name="sort(sym)"/><method name="reverse(sym)"/><method name="shuffle(sym)"/><method name="shuffle(sym#sym)"/><method name="swap(sym#sym#sym)"/><method name="rotate(sym#sym)"/><method name="rotate1(sym#sym)"/><method name="rotate2(sym#sym)"/><method name="emptySet()"/><method name="emptyList()"/><method name="reverseOrder(sym)"/><method name="reverseOrder()"/><method name="&lt;init&gt;()"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.Arrays$ArrayList"><method name="toArray(sym)"/><method name="set(sym#sym)"/><method name="&lt;init&gt;(sym)"/><method name="toArray()"/><method name="get(sym)"/><method name="indexOf(sym)"/><method name="contains(sym)"/><method name="size()"/></class><class name="lsp.test.jdk.util.Collections$SynchronizedRandomAccessList"><method name="&lt;init&gt;(sym#sym)"/><method name="writeReplace()"/><method name="&lt;init&gt;(sym)"/><method name="subList(sym#sym)"/></class><class name="lsp.test.jdk.util.Collections$CopiesList"><method name="toArray(sym)"/><method name="toArray()"/><method name="&lt;init&gt;(sym#sym)"/><method name="contains(sym)"/><method name="indexOf(sym)"/><method name="lastIndexOf(sym)"/><method name="get(sym)"/><method name="subList(sym#sym)"/><method name="size()"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.NavigableMap"><method name="subMap(sym#sym)"/><method name="subMap(sym#sym#sym#sym)"/><method name="lowerKey(sym)"/><method name="floorKey(sym)"/><method name="ceilingKey(sym)"/><method name="higherKey(sym)"/><method name="headMap(sym)"/><method name="tailMap(sym)"/><method name="lowerEntry(sym)"/><method name="floorEntry(sym)"/><method name="ceilingEntry(sym)"/><method name="higherEntry(sym)"/><method name="headMap(sym#sym)"/><method name="tailMap(sym#sym)"/><method name="firstEntry()"/><method name="lastEntry()"/><method name="pollFirstEntry()"/><method name="pollLastEntry()"/><method name="descendingMap()"/><method name="navigableKeySet()"/><method name="descendingKeySet()"/></class><class name="lsp.test.jdk.util.sql.Ref"><method name="getObject(sym)"/><method name="getObject()"/><method name="setObject(sym)"/><method name="getBaseTypeName()"/></class><class name="lsp.test.jdk.util.MissingFormatWidthException"><method name="&lt;init&gt;(sym)"/><method name="getFormatSpecifier()"/><method name="getMessage()"/></class><class name="lsp.test.jdk.util.ResourceBundle$RBClassLoader"><method name="loadClass(sym)"/><method name="access$000()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;()"/><method name="getResource(sym)"/><method name="getResourceAsStream(sym)"/><method name="&lt;clinit&gt;()"/></class><class name="lsp.test.jdk.util.Collections$EmptySet"><method name="contains(sym)"/><method name="readResolve()"/><method name="&lt;init&gt;(sym)"/><method name="&lt;init&gt;()"/><method name="iterator()"/><method name="size()"/></class></classes><mainclass name="lsp.tests.LSPCheckerGeneratedTestJDK"/></testcase></testsuite></sut>