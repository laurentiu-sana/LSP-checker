package lsp.tests;

/** Test case generated by the LSP checker; feel free to hack it! */
@SuppressWarnings({"unchecked", "deprecation"})
public class LSPCheckerGeneratedTestJDK
{
    public static void main(String[] args)
    {
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).setStartRule(0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new double[]{},0.0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String(null,0,0,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new long[]{},0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(null,null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0l).equals(new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).containsKey(new lsp.test.jdk.util.FieldPosition(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.toUpper((char) 0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).setStartRule(0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayScript(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String(null,0,0,0),new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).setStartYear(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(null,null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String(null,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(null).containsKey(new lsp.test.jdk.util.Observable()); } catch(Exception e) { }
        try { lsp.test.jdk.util.DateFormatSymbols.getInstance(new lsp.test.jdk.util.Locale(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(null).containsKey(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).storeToXML(null,new java.lang.String(null,0,0,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).getMonth(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeSet().clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).clone(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new boolean[]{},false); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.toString(new boolean[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLPermission(new java.lang.String(),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).setYear(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).getSeconds(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(new lsp.test.jdk.util.Properties(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String(),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getKeywords(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).removeLastOccurrence(new lsp.test.jdk.util.Date(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UUID(0l,0l).equals(new lsp.test.jdk.util.sql.Timestamp(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLPermission(new java.lang.String(null,0,0,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList().toArray(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(null).isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.sort(new double[]{},0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue().remove(new lsp.test.jdk.util.ParsePosition(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).setRawOffset(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.toTitleString(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).setProperty(new java.lang.String(null,0,0,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayName(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getFunctionalEquivalent(new java.lang.String(null,0),null,null,null,new boolean[]{},false); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).equals(new lsp.test.jdk.util.FieldPosition(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.hashCode(new int[]{}); } catch(Exception e) { }
        //try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).compareTo(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.EventObject(new lsp.test.jdk.util.sql.Date(0l)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Locale.getDefault(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue().remove(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).getMaximum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayKeywordValue(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new java.lang.Object[]{},0,0,new lsp.test.jdk.util.FieldPosition(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0).getMaximum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(null).removeLastOccurrence(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.acceptLanguage(new java.lang.String(null,0,0,0),new lsp.test.jdk.util.ULocale[]{},new boolean[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String(null,0,0,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).before(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).setMonth(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).remove(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).size(); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.getConnection(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).setMinimalDaysInFirstWeek(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ServiceConfigurationError(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String(),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).getOffset(0,0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(null,null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.DriverPropertyInfo(new java.lang.String(null,0,0,0),null); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.println(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0l).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ServiceConfigurationError(null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashMap(null).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getName(); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.getConnection(null,null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null).getVariant(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(null,null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).removeLastOccurrence(new lsp.test.jdk.util.BitSet()); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.isAlphaString(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(0,0.0f).isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0,0).getActualMinimum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ParseException(new java.lang.String(null,0,0,0),0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).contains(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashMap(0).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Date(0l).getHours(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(null).toString(); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.setLogStream(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(null).isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList().removeFirstOccurrence(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new byte[]{},(byte) 0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getCountry(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().parse(new java.lang.String(),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().applyLocalizedPattern(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.Currency.getInstance(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).remove(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UnknownFormatConversionException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.isNumeric((char) 0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning().getNextWarning(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(),new java.lang.String(null,0),new int[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashMap(0,0.0f).containsValue(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String(),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0l).setYear(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).roll(0,false); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.Time.valueOf(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.Currency.getInstance(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue().contains(new lsp.test.jdk.util.Date(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String(null,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ServiceConfigurationError(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue(0,null).size(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).containsKey(new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayKeyword(new java.lang.String(null,0),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ServiceConfigurationError(new java.lang.String(),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).indexOf(new lsp.test.jdk.util.EventObject(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).lastIndexOf(new lsp.test.jdk.util.Date(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0).add(0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().getDateFormatSymbols(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(null,null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0l).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable().equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.AttributedString(null,0,0).addAttribute(null,new lsp.test.jdk.util.FieldPosition(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException().setNextException(new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(null,null,0,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UUID(0l,0l).version(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.MissingResourceException(new java.lang.String(),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).storeToXML(null,new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayVariant(new lsp.test.jdk.util.Locale(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat(new java.lang.String(null,0,0,0),new lsp.test.jdk.util.Locale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).set(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(null,null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String(),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.UUID.fromString(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet().contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new java.lang.Object[]{},0,0,new lsp.test.jdk.util.Date()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(new lsp.test.jdk.util.SimpleTimeZone(0,null),null); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getLocaleList(new lsp.test.jdk.util.ULocale[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().getTime(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).before(new lsp.test.jdk.util.sql.Date(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Observable().countObservers(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,new java.lang.String(null,0),0,0,0,0,0,0,0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().equals(new lsp.test.jdk.util.Date(0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayVariant(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).after(new lsp.test.jdk.util.sql.Date(0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new java.lang.Object[]{},new lsp.test.jdk.util.sql.Time(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue(0,null).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar().getGregorianChange(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList().clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String(null,0,0,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(new java.lang.String(null,0,0,0),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet().remove(new lsp.test.jdk.util.Locale(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).equals(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).getProperty(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().getEras(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().setHours(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String(),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null).getZoneStrings(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayLanguage(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLPermission(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).setKeywordValue(new java.lang.String(),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).set(0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).getTimezoneOffset(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.Date.valueOf(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Currency.getInstance(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.UUID.nameUUIDFromBytes(new byte[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue().clear(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new double[]{},0,0,0.0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).remove(new lsp.test.jdk.util.sql.Date(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String(),new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String(null,0,0,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.createBundle(new java.lang.String(null,0),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable().containsKey(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).lastIndexOf(new lsp.test.jdk.util.DateFormatSymbols(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).getSeconds(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque().clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap().clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue().contains(new lsp.test.jdk.util.Date(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).removeLastOccurrence(new lsp.test.jdk.util.AsciiUtil()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(new java.lang.String(null,0,0,0),new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).setTime(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.RowIdLifetime.values(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.AttributedString(null,0,0).addAttribute(null,new lsp.test.jdk.util.Date(0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ConcurrentModificationException(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(null,null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).setSeconds(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashMap(0).containsValue(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String(null,0,0,0),new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getKeywordValue(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(),null,new int[]{},new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList().isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null,null).getDisplayVariant(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getBundleInstance(null,null,null,false); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getLanguage(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayName(new lsp.test.jdk.util.Locale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(null,null,new int[]{},new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String(null,0,0,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String(null,0,0,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).and(new lsp.test.jdk.util.BitSet()); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new java.lang.Object[]{},new java.lang.Object()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap().containsValue(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(null,null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().setAmPmStrings(new java.lang.String[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).getDate(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String(null,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashSet(0,0.0f); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getAvailableULocales(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(0).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String(),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).removeLastOccurrence(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap().equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar().setMinimalDaysInFirstWeek(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap().isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().or(new lsp.test.jdk.util.BitSet()); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayLanguage(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().setMonths(new java.lang.String[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).setMonth(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UnknownFormatConversionException(null).getMessage(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null).setAmPmStrings(new java.lang.String[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue().contains(new lsp.test.jdk.util.DateFormatSymbols(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ConcurrentModificationException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLPermission(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.EventObject(null).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(0).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String(null,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null,0).getField(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(null,null,0,null).setNextException(new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(null,null,0,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null).getField(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).setHours(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0).getLeastMaximum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().getSeconds(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat(new java.lang.String(),new lsp.test.jdk.util.DateFormatSymbols()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null,0).setEndIndex(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().setShortWeekdays(new java.lang.String[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().setTime(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).after(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).equals(new lsp.test.jdk.util.Date(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String(null,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.DriverPropertyInfo(new java.lang.String(null,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).hasSameRules(new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable().toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String(null,0,0,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).getYear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).setEndRule(0,0,0,0); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new int[]{},0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String(null,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).setStartRule(0,0,0,0,false); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.RowIdLifetime.valueOf(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IllegalFormatFlagsException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeMap().containsValue(new lsp.test.jdk.util.Locale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DuplicateFormatFlagsException(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet().remove(new lsp.test.jdk.util.BitSet()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(null).containsValue(new lsp.test.jdk.util.sql.Date(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String(null,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).remove(new lsp.test.jdk.util.DateFormatSymbols()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new int[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).toGMTString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).setRawOffset(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String(),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IllegalFormatCodePointException(0).getCodePoint(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Date(0,0,0).setTime(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashMap(0).containsValue(new lsp.test.jdk.util.sql.Time(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).setProperty(null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap().isEmpty(); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.toLowerString(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashMap(0,0.0f,false).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0l).after(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties().setProperty(null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0,0).setGregorianChange(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet().contains(new lsp.test.jdk.util.ParsePosition(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(null,null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String(),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String(null,0,0,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.AttributedString(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.copyOfRange(new byte[]{},0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(0).containsValue(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.println(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getKeywordValue(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getBundleInstance(new java.lang.String(null,0,0,0),null,null,false); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ParsePosition(0).setErrorIndex(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).xor(new lsp.test.jdk.util.BitSet(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String(null,0,0,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Observable().notifyObservers(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(0).remove(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).compareTo(new lsp.test.jdk.util.sql.Time(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashSet(); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.ClientInfoStatus.valueOf(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayVariant(new lsp.test.jdk.util.Locale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(null,null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).compareTo(new lsp.test.jdk.util.sql.Time(0l)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getAvailableLocaleNameSet(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar().setGregorianChange(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IllegalFormatFlagsException(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Annotation(new java.lang.Object()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String(),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayName(new lsp.test.jdk.util.Locale(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String(null,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.InputMismatchException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String(),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.InputMismatchException(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).equals(new lsp.test.jdk.util.DateFormatSymbols(null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.caseIgnoreMatch(new java.lang.String(null,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(null).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.toLowerString(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0l).compareTo(new lsp.test.jdk.util.sql.Time(0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getKeywordValue(new java.lang.String(null,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).after(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).setMinutes(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(null,null,0).setNextWarning(new lsp.test.jdk.util.sql.SQLWarning()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String(),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null,0).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.DataTruncation(0,false,false,0,0).getTransferSize(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getFullLocaleNameSet(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.Date.parse(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.Locale.setDefault(new lsp.test.jdk.util.Locale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String(),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).compareTo(new lsp.test.jdk.util.sql.Time(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.MissingResourceException(null,null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ParsePosition(0).equals(new lsp.test.jdk.util.Annotation(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue(0).size(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.createBundle(new java.lang.String(null,0,0,0),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String(null,0,0,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.DataTruncation(0,false,false,0,0).getRead(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).setTime(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(0,0.0f).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(0).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.caseIgnoreCompare(new java.lang.String(null,0,0,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(0).containsValue(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).toLocaleString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().setSeconds(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.forLocale(new lsp.test.jdk.util.Locale(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashMap().clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashMap(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null).getEndIndex(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(),null,0,new int[]{},new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getISO3Country(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().toPattern(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String(),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UnknownFormatFlagsException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).storeToXML(null,new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(null).clone(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.copyOfRange(new int[]{},0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).getTimezoneOffset(); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.toUpperString(new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getAvailableLocaleNameSet(new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getAvailableLocales(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashMap(0,0.0f,false); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null).equals(new lsp.test.jdk.util.DateFormatSymbols()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String(null,0,0,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).flip(0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).getProperty(new java.lang.String(),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String(),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String(null,0,0,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getAvailableLocales(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.MissingFormatArgumentException(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.caseIgnoreMatch(null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque().size(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null).setShortMonths(new java.lang.String[]{}); } catch(Exception e) { }
        try { lsp.test.jdk.util.Locale.setDefault(new lsp.test.jdk.util.Locale(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(null,null,null).setNextException(new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(null,null,0,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.MissingFormatWidthException(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.equals(new long[]{},new long[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null,null).getDisplayLanguage(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().clear(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayName(new java.lang.String(null,0,0,0),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.ClientInfoStatus.valueOf(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DuplicateFormatFlagsException(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0,0,0).setTime(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String(),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0l).before(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(null).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String(),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(new java.lang.String(),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0).getGreatestMinimum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).setSeconds(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Stack().search(new lsp.test.jdk.util.DateFormatSymbols(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(new lsp.test.jdk.util.Locale(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null).setZoneStrings(new java.lang.String[][]{}); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getVariant(new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayKeywordValue(new java.lang.String(null,0,0,0),new java.lang.String(null,0),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Date(0l).getMinutes(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0l).getTime(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(null,null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).hasSameRules(new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(0).getField(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable().hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Date(0l).setSeconds(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).roll(0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(null,null,0,new int[]{},new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).save(null,null); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getAvailableLocaleNameSet(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null,0).setBeginIndex(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0).roll(0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(null).clear(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getScript(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.setDefault(new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).getSeconds(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).contains(new lsp.test.jdk.util.DateFormatSymbols()); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getFullLocaleNameSet(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).contains(new lsp.test.jdk.util.FieldPosition(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String(),new java.lang.Throwable()); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayLanguage(new java.lang.String(null,0),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(0).ensureCapacity(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String(null,0,0,0),null,0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getLanguage(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayName(new java.lang.String(),new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).getRawOffset(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).toLocaleString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).toGMTString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(null,null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String(),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).containsValue(new lsp.test.jdk.util.FieldPosition(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0l).getYear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().intersects(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable().containsValue(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).remove(new lsp.test.jdk.util.Annotation(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String(null,0,0,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0,0).getActualMaximum(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayName(new java.lang.String(null,0),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,new java.lang.String(null,0,0,0),0,0,0,0,0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).toArray(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getAvailableLocales(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IllegalFormatCodePointException(0).getMessage(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getISO3Country(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).setStartRule(0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().xor(new lsp.test.jdk.util.BitSet(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0,0).roll(0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).hasSameRules(new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.getDriver(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.canonicalize(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(0).getBeginIndex(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayVariant(new java.lang.String(),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Date(0,0,0).getHours(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0).containsKey(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0).setFirstDayOfWeek(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String(),new java.lang.Throwable()); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayKeyword(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet().clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null,null).getDisplayName(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().applyPattern(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat(new java.lang.String(null,0),new lsp.test.jdk.util.DateFormatSymbols(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String(null,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.MissingFormatWidthException(null).getFormatSpecifier(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ParsePosition(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,new java.lang.String(),0,0,0,0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).trimToSize(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).setEndRule(0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(null,0),new java.lang.String(null,0),new int[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(null).size(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList().clone(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Locale.getAvailableLocales(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0l).compareTo(new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String(null,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).setKeywordValue(null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue(0).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().clone(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new short[]{},(short) 0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Stack().search(new lsp.test.jdk.util.AttributedString(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties().storeToXML(null,null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(null,null,0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getFullLocaleNameSet(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ParsePosition(0).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(null).contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).hasSameRules(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String(null,0),new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).getDSTSavings(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat(new java.lang.String(null,0),new lsp.test.jdk.util.Locale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque().remove(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0,0,0).toString(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.deepEquals(new java.lang.Object[]{},new java.lang.Object[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(null,null,0).getNextException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getFallback(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).getDay(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null).getISO3Language(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getISOLanguages(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null).setBeginIndex(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().getMinutes(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeMap(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UnknownFormatConversionException(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).getDate(); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.ClientInfoStatus.valueOf(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayLanguage(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0).getMinimum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).getProperty(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(null,null,0).setNextWarning(new lsp.test.jdk.util.sql.DataTruncation(0,false,false,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeMap().containsKey(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.acceptLanguage(new java.lang.String(null,0),new lsp.test.jdk.util.ULocale[]{},new boolean[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().andNot(new lsp.test.jdk.util.BitSet(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(new java.lang.String(null,0,0,0),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).inDaylightTime(new lsp.test.jdk.util.Date(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0).getActualMaximum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(0).getEndIndex(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().andNot(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).setGregorianChange(new lsp.test.jdk.util.sql.Time(0l)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.hashCode(new float[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null).setLocalPatternChars(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).setYear(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String(null,0,0,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Stack(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).contains(new lsp.test.jdk.util.BitSet(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(null).containsKey(new lsp.test.jdk.util.EventObject(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).inDaylightTime(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new int[]{},0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties().getProperty(null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(0).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null).toString(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new java.lang.Object[]{},0,0,new lsp.test.jdk.util.DateFormatSymbols()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ConcurrentModificationException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue(0,null).remove(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IllegalFormatFlagsException(null).getMessage(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeSet().remove(new lsp.test.jdk.util.FieldPosition(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).getTimezoneOffset(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(new lsp.test.jdk.util.Locale(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String(null,0),new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).equals(null); } catch(Exception e) { }
        //try { new lsp.test.jdk.util.AttributedString(null,null).getIterator(new lsp.test.jdk.util.AttributedCharacterIterator$Attribute[]{},0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).getOffset(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeSet().isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.AttributedString(null,0,0).addAttribute(null,new lsp.test.jdk.util.Date(0l),0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayVariant(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.caseIgnoreCompare(new java.lang.String(),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0,0).add(0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar().getActualMaximum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Date(0,0,0).getMinutes(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(null,null,0,null).getNextWarning(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().formatToCharacterIterator(new lsp.test.jdk.util.DateFormatSymbols()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).setStartRule(0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).after(new lsp.test.jdk.util.sql.Timestamp(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().applyPattern(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.toLower((char) 0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String(null,0),new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0,0).clone(); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.caseIgnoreMatch(new java.lang.String(null,0,0,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashMap(0).containsValue(new lsp.test.jdk.util.Date()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().equals(new lsp.test.jdk.util.DateFormatSymbols(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String(null,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0,0).getGreatestMinimum(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.Currency.getInstance(new java.util.Locale(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayVariant(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.copyOfRange(new float[]{},0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getFallback(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeSet().contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0l).before(new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(0).isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(new java.lang.String(null,0),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).hasSameRules(new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap().hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().formatToCharacterIterator(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList().indexOf(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.copyOfRange(new char[]{},0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeMap().clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(null,null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).toString(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.equals(new byte[]{},new byte[]{}); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.setKeywordValue(new java.lang.String(),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String(),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.equals(new char[]{},new char[]{}); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.isAlphaNumericString(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.DataTruncation(0,false,false,0,0).getParameter(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).setMinutes(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getAvailableULocales(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0l).getDate(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().format(null,null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).before(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getName(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).after(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0).getMinimum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String(null,0),new java.lang.Throwable()); } catch(Exception e) { }
        //try { new lsp.test.jdk.util.AttributedString(null,0,0).getIterator(new lsp.test.jdk.util.AttributedCharacterIterator$Attribute[]{},0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayVariant(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0).size(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.acceptLanguage(new java.lang.String(),new boolean[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0).isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).contains(new lsp.test.jdk.util.Locale(null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new java.lang.Object[]{},new lsp.test.jdk.util.sql.Time(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().andNot(new lsp.test.jdk.util.BitSet()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0).roll(0,false); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).setYear(0); } catch(Exception e) { }
        //try { new lsp.test.jdk.util.sql.Timestamp(0l).compareTo(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0).getLeastMaximum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(null,null,0).getNextWarning(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).removeLastOccurrence(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.sort(new char[]{},0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String(),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String(null,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String(null,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ParsePosition(0).equals(new lsp.test.jdk.util.DateFormatSymbols()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String(null,0,0,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).removeLastOccurrence(new lsp.test.jdk.util.BitSet()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String(null,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).compareTo(new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0l).getDay(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ServiceConfigurationError(new java.lang.String(null,0,0,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getKeywords(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).getHours(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UnknownFormatFlagsException(null).getMessage(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(null,null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).getHours(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).after(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).setYear(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.Date.valueOf(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0).clone(); } catch(Exception e) { }
        try { lsp.test.jdk.util.DateFormatSymbols.getInstance(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).getHours(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(null).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new int[]{},new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(null).containsKey(new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).setMonth(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.sort(new byte[]{},0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat(new java.lang.String(),new lsp.test.jdk.util.DateFormatSymbols(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.AsciiUtil(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String(null,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).toLocaleString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().getWeekdays(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.NoSuchElementException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().getShortWeekdays(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeMap().containsValue(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayKeyword(new java.lang.String(null,0,0,0),new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar().setFirstDayOfWeek(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().setDate(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().getAmPmStrings(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null).getDisplayVariant(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).isLeapYear(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Date(0,0,0).setMinutes(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeSet().remove(new lsp.test.jdk.util.FieldPosition(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeMap().containsKey(new lsp.test.jdk.util.DateFormatSymbols(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayCountry(new java.lang.String(null,0),new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList().indexOf(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.sort(new java.lang.Object[]{},0,0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayKeyword(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String(null,0,0,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(null).contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.getLogWriter(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().xor(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Date(0,0,0).setSeconds(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.Timestamp.valueOf(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(null,null,null,null).getUpdateCounts(); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.caseIgnoreCompare(new java.lang.String(null,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String(null,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayLanguage(new lsp.test.jdk.util.Locale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.AttributedString(null,null).addAttribute(null,new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.equals(new boolean[]{},new boolean[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,new java.lang.String(null,0),0,0,0,0,0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.DateFormatSymbols.getAvailableLocales(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).equals(new lsp.test.jdk.util.sql.Time(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable().clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).storeToXML(null,null); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayVariant(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getFallback(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String(null,0,0,0),null,0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.forLocale(new lsp.test.jdk.util.Locale(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0).getGreatestMinimum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).getProperty(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.copyOf(new byte[]{},0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0,0).getLeastMaximum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar().add(0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0).getActualMinimum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayScript(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UUID(0l,0l).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0,0,0).getMonth(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,new java.lang.String(),0,0,0,0,0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null).getCountry(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null,null).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue().contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null).equals(new lsp.test.jdk.util.BitSet(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(null,null,0).getErrorCode(); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.getConnection(new java.lang.String(null,0,0,0),new lsp.test.jdk.util.Properties()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null,null).getDisplayName(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning().setNextWarning(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0).roll(0,false); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(0).isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).setTime(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).setStartYear(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).getTime(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getAvailableLocales(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.deregisterDriver(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(0).lastIndexOf(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String(null,0,0,0),null,0); } catch(Exception e) { }
        try { lsp.test.jdk.util.Locale.getISOLanguages(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).setDSTSavings(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(null).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String(),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String(),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,new java.lang.String(),0,0,0,0,0,0,0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String(null,0),new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayLanguage(new java.lang.String(null,0,0,0),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String(),new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).equals(new lsp.test.jdk.util.Date(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String(null,0,0,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(null,null,0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.setKeywordValue(new java.lang.String(null,0),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null).setMonths(new java.lang.String[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).toGMTString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).setTime(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(null).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String(),new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.getConnection(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.DriverPropertyInfo(new java.lang.String(),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String(),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String(null,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.deepHashCode(new java.lang.Object[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList().size(); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.getDriver(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).toLocale(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).getTime(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(new java.lang.String(),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).size(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getISOCountries(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.DataTruncation(0,false,false,0,0,null).getTransferSize(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String(),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new byte[]{},(byte) 0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ServiceConfigurationError(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String(null,0),new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).getRawOffset(); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.Date.valueOf(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue().toArray(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String(null,0),new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.DataTruncation(0,false,false,0,0).getDataSize(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeMap().clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).toGMTString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null).getShortMonths(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(null).containsKey(new lsp.test.jdk.util.sql.Timestamp(0l)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayKeywordValue(new java.lang.String(null,0),new java.lang.String(null,0),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(0).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UnknownFormatConversionException(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new float[]{},0.0f); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable().clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).getDate(); } catch(Exception e) { }
        try { lsp.test.jdk.util.DateFormatSymbols.getInstance(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null).getMonths(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).clear(0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String(null,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().parse(null,null); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getKeywordValues(new java.lang.String(null,0,0,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).getOffset(0,0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String(null,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).getDSTSavings(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.caseIgnoreMatch(new java.lang.String(),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).or(new lsp.test.jdk.util.BitSet()); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.Time.valueOf(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String(null,0,0,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Date(0,0,0).getSeconds(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getCLDRVersion(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String(null,0),new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String(),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0l).equals(new lsp.test.jdk.util.sql.Timestamp(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null).getDisplayName(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar().hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).equals(new lsp.test.jdk.util.Date(0,0,0,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getKeywords(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.Throwable()); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getAvailableLocales(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.DataTruncation(0,false,false,0,0,null).getDataSize(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue(0).toArray(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).setGregorianChange(new lsp.test.jdk.util.Date(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().format(new lsp.test.jdk.util.sql.Date(0l),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap().containsKey(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties().loadFromXML(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getVariant(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null).setShortWeekdays(new java.lang.String[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(null,null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0l).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String(null,0),new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(null,null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String(),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().nextSetBit(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.EmptyStackException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String(null,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).remove(new lsp.test.jdk.util.sql.Date(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).equals(new lsp.test.jdk.util.BitSet(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().setLocalPatternChars(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.copyOfRange(new boolean[]{},0,0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getCountry(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(null,0),new int[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(null,null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeMap().containsKey(new lsp.test.jdk.util.FieldPosition(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.sort(new float[]{},0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(null).equals(new lsp.test.jdk.util.JDKTest()); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.sort(new long[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(0).containsKey(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(null).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(null).containsValue(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).setMinutes(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).getDay(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayName(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).compareTo(new lsp.test.jdk.util.sql.Time(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).setHours(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayKeywordValue(new java.lang.String(null,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).list(new java.io.PrintStream(null,false,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Annotation(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLPermission(new java.lang.String(null,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getVariant(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(null,null,0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayCountry(new java.lang.String(),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayCountry(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(new java.lang.String(null,0,0,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().after(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).compareTo(new lsp.test.jdk.util.sql.Time(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().equals(new lsp.test.jdk.util.sql.Time(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).setKeywordValue(new java.lang.String(null,0),null); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getFunctionalEquivalent(new java.lang.String(),null,null,null,new boolean[]{},false); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap().clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(null,null,null).getSQLState(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().and(new lsp.test.jdk.util.BitSet(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.AttributedString(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).setFirstDayOfWeek(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Observable(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashMap(0,0.0f).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(new lsp.test.jdk.util.Locale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar().roll(0,false); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).equals(new lsp.test.jdk.util.Locale(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().setLocalPatternChars(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).equals(new lsp.test.jdk.util.sql.Time(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar().roll(0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(0).clone(); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.getConnection(new java.lang.String(null,0),new lsp.test.jdk.util.Properties()); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.setLogStream(new java.io.PrintStream(null,false,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(null,null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getKeywordValue(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new java.lang.Object[]{},new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashMap(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).getLeastMaximum(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayCountry(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().getMonth(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null,0).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null).getWeekdays(); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.isNumericString(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.AttributedString(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String(null,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).save(null,new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(); } catch(Exception e) { }
        //try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).compareTo(new lsp.test.jdk.util.FieldPosition(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null,null).getISO3Language(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0,0,0).getYear(); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.Timestamp.valueOf(new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getBaseName(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String(),new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeSet().contains(new lsp.test.jdk.util.sql.Timestamp(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().xor(new lsp.test.jdk.util.BitSet()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String(),null,0); } catch(Exception e) { }
        try { lsp.test.jdk.util.Date.parse(new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.createCanonical(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getISO3Country(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).setGregorianChange(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList().contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getFallback(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(0).size(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).setEndRule(0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ParsePosition(0).equals(new lsp.test.jdk.util.JDKTest()); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.setDefault(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(null,null,0).setNextException(new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(null,null,0,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeSet().contains(new lsp.test.jdk.util.BitSet()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String(null,0,0,0),new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).set(0,false); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getCountry(new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.copyOf(new float[]{},0); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.ClientInfoStatus.values(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).setHours(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).setProperty(new java.lang.String(null,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String(),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.DataTruncation(0,false,false,0,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new char[]{},0,0,(char) 0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(null).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(null,null,0,null).getSQLState(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UnknownFormatFlagsException(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Date(0l).setMinutes(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).getMinutes(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().set2DigitYearStart(new lsp.test.jdk.util.Date(0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).contains(new lsp.test.jdk.util.EventObject(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String(),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(null,null,0,null).setNextWarning(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().and(new lsp.test.jdk.util.BitSet()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String(null,0,0,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().cardinality(); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.println(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).remove(new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String(null,0,0,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap().clear(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.equals(new int[]{},new int[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).remove(new lsp.test.jdk.util.FieldPosition(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String(null,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).getNanos(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(null,null,0,null).getUpdateCounts(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new int[]{},0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String(null,0,0,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.MissingFormatArgumentException(null).getMessage(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeMap().containsKey(new lsp.test.jdk.util.JDKTest()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).indexOf(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String(),new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0,0).roll(0,false); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0,0).getGregorianChange(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).setStartYear(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(new lsp.test.jdk.util.Locale(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null).getDisplayName(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0).add(0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String(),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String(null,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null).getDisplayVariant(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).useDaylightTime(); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.getLogStream(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new float[]{},0.0f); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.copyOfRange(new short[]{},0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.InputMismatchException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.sort(new java.lang.Object[]{}); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getKeywordValues(new java.lang.String(),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).nextSetBit(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayCountry(new java.lang.String(null,0,0,0),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).before(new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(null,null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(null,null,null).getNextException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0).getMaximum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IllegalFormatWidthException(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(null).isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).setDate(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.isAlphaString(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.getDriver(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties().getProperty(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(null,null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UUID(0l,0l).timestamp(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().setMinutes(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String(null,0,0,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.Timestamp.valueOf(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).inDaylightTime(new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().set(0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getCountry(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().equals(new java.lang.Object()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(null,null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).getMonth(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.setKeywordValue(new java.lang.String(null,0,0,0),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().getTimezoneOffset(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).equals(new lsp.test.jdk.util.Date(0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.InputMismatchException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).setYear(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(null).containsValue(new lsp.test.jdk.util.BitSet(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null).setEndIndex(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayKeyword(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).containsKey(new lsp.test.jdk.util.sql.Date(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.Throwable()); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.copyOfRange(new double[]{},0,0); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.sort(new byte[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().get(0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DuplicateFormatFlagsException(null).getMessage(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(null,0,0,0),new int[]{},new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).setEndRule(0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().get2DigitYearStart(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayLanguage(new java.lang.String(),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar().isLeapYear(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().format(new lsp.test.jdk.util.Date(0,0,0,0,0,0),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String(null,0,0,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(null,null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(null,null,0,null).getNextException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.getConnection(new java.lang.String(),new lsp.test.jdk.util.Properties()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0l).setTime(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().flip(0,0); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new double[]{},0,0,0.0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList().toArray(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().get(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).lastIndexOf(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayCountry(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).getDay(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String(),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String(null,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(0,0.0f).containsValue(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayCountry(new java.lang.String(null,0),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).containsValue(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(null,null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(null,null,0,null).getErrorCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar().getMaximum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0l).setDate(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(null,0,0,0),null,new int[]{},new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.getConnection(null,new lsp.test.jdk.util.Properties()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0,0).setMinimalDaysInFirstWeek(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.RowIdLifetime.valueOf(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).contains(new lsp.test.jdk.util.Date(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String(null,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ConcurrentModificationException(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).indexOf(new lsp.test.jdk.util.JDKTest()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().formatToCharacterIterator(new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().getShortMonths(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getBaseName(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList().remove(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,new java.lang.String(null,0,0,0),0,0,0,0,0,0,0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).toGMTString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String(null,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ParseException(new java.lang.String(),0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.MissingFormatArgumentException(null).getFormatSpecifier(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(new lsp.test.jdk.util.Locale(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet().size(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).equals(new lsp.test.jdk.util.FieldPosition(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.AttributedString(null,0,0).addAttribute(null,new lsp.test.jdk.util.AsciiUtil(),0,0); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.copyOf(new long[]{},0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String(null,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.acceptLanguage(new java.lang.String(null,0),new boolean[]{}); } catch(Exception e) { }
        try { lsp.test.jdk.util.DateFormatSymbols.getInstance(new lsp.test.jdk.util.Locale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String(),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(null).containsValue(new lsp.test.jdk.util.Locale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.JDKTest(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.toString(new short[]{}); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.isAlphaNumericString(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().toGMTString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(0,0.0f); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).getYear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).compareTo(new lsp.test.jdk.util.Date(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(0).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String(),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String(null,0,0,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String(null,0,0,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).setDate(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0).getActualMinimum(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.acceptLanguage(new lsp.test.jdk.util.ULocale[]{},new lsp.test.jdk.util.ULocale[]{},new boolean[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeSet().contains(new lsp.test.jdk.util.sql.Time(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null).setWeekdays(new java.lang.String[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String(),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().getZoneStrings(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new java.lang.Object[]{},0,0,new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String(),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).getProperty(new java.lang.String(null,0,0,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().toLocalizedPattern(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UnknownFormatFlagsException(null).getFlags(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).getTime(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null,null).getDisplayLanguage(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).getActualMaximum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String(null,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(0,0.0f).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(0,0.0f).size(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(0,0.0f); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(new lsp.test.jdk.util.Locale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(null,null,null).setNextException(new lsp.test.jdk.util.sql.SQLNonTransientException()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(null,null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(0,0.0f).contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.copyOfRange(new long[]{},0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String(),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).and(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayVariant(new java.lang.String(null,0),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().getYear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(0).toArray(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String(null,0,0,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DuplicateFormatFlagsException(null).getFlags(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar().clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String(null,0,0,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String(null,0,0,0),new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue().remove(new lsp.test.jdk.util.Observable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String(null,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(null).size(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getName(new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.caseIgnoreCompare(null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(null,null,0,new int[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IllegalFormatFlagsException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque().removeFirstOccurrence(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat(new java.lang.String(null,0,0,0),new lsp.test.jdk.util.Locale(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IllegalFormatFlagsException(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String(null,0,0,0),new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(null).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).compareTo(new lsp.test.jdk.util.Date(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.MissingFormatWidthException(null).getMessage(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).setDate(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).before(new lsp.test.jdk.util.Date()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.DataTruncation(0,false,false,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).storeToXML(null,new java.lang.String(null,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(),new int[]{},new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).equals(new lsp.test.jdk.util.AttributedString(null,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0,0,0).getDate(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String(null,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).setDSTSavings(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLPermission(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().parse(new java.lang.String(null,0,0,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).clone(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getISO3Country(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).save(null,new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.hashCode(new char[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque().removeLastOccurrence(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).compareTo(new lsp.test.jdk.util.sql.Date(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ServiceConfigurationError(new java.lang.String(null,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(null).containsKey(new lsp.test.jdk.util.sql.Date(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.isAlpha((char) 0); } catch(Exception e) { }
        //try { new lsp.test.jdk.util.AttributedString(null,0,0).getIterator(new lsp.test.jdk.util.AttributedCharacterIterator$Attribute[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).lastIndexOf(new lsp.test.jdk.util.Annotation(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).setRawOffset(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getVariant(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.AttributedString(null,0,0).addAttribute(null,new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null),0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable().isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0).setMinimalDaysInFirstWeek(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayVariant(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.createCanonical(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String(null,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ParsePosition(0).getErrorIndex(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Observable().notifyObservers(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String(null,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayScript(new java.lang.String(),new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.setLoginTimeout(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(null).size(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).clone(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getKeywordValues(new java.lang.String(null,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0l).setNanos(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayLanguage(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new char[]{},(char) 0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).setGregorianChange(new lsp.test.jdk.util.Date(0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().getMonths(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).removeFirstOccurrence(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getISO3Country(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.MissingFormatWidthException(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).setDSTSavings(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(new java.lang.String(),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList().lastIndexOf(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getISO3Language(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayKeywordValue(new java.lang.String(null,0,0,0),new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).contains(new lsp.test.jdk.util.Date(0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getFunctionalEquivalent(null,null,null,null,new boolean[]{},false); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.sort(new short[]{},0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0,0).getMaximum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().setWeekdays(new java.lang.String[]{}); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayVariant(new java.lang.String(),new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue(0,null).contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0,0).setFirstDayOfWeek(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0).setGregorianChange(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(null).containsValue(new lsp.test.jdk.util.AttributedString(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque().clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getISO3Language(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(null,0,0,0),new int[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(null,0,0,0),null,0,new int[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null).equals(new lsp.test.jdk.util.UUID(0l,0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Observable().notifyObservers(new java.lang.Object()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null).getDisplayLanguage(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashSet(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue(0).remove(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(null).contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.AttributedString(null,null).addAttribute(null,new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null),0,0); } catch(Exception e) { }
        try { lsp.test.jdk.util.DateFormatSymbols.getInstance(new lsp.test.jdk.util.Locale(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String(),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String(null,0,0,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).clear(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new float[]{},0,0,0.0f); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.addLikelySubtags(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties().list(new java.io.PrintStream(null,false)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).setProperty(new java.lang.String(),null); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.registerDriver(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getKeywords(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(null,0,0,0),new java.lang.String(null,0),new int[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList().lastIndexOf(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getScript(new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getFullLocaleNameSet(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().getDate(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayKeyword(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().setLocalPatternChars(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getAvailableULocales(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String(),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Date(0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).lastIndexOf(new lsp.test.jdk.util.JDKTest()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null).getLocalPatternChars(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String(null,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayKeywordValue(new java.lang.String(null,0,0,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.AttributedString(null,0,0).addAttribute(null,new lsp.test.jdk.util.Date(),0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).compareTo(new lsp.test.jdk.util.sql.Timestamp(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(0,0.0f).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Date(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.isAlphaNumeric((char) 0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String(null,0,0,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.println(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String(null,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).equals(new lsp.test.jdk.util.sql.Time(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String(null,0),new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String(),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(null).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(0,0.0f).containsKey(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties().storeToXML(null,null); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.equals(new double[]{},new double[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(0,0.0f).isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).setKeywordValue(new java.lang.String(null,0,0,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(null).isEmpty(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayName(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).getMinutes(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException().getErrorCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String(null,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap().size(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String(null,0,0,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).getMonth(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String(null,0,0,0),null,0); } catch(Exception e) { }
        //try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).compareTo(new lsp.test.jdk.util.AttributedString(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).setStartRule(0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).indexOf(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.AttributedString(null,0,0).addAttribute(null,new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().flip(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(null,0),null,0,new int[]{},new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).contains(new lsp.test.jdk.util.FieldPosition(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).inDaylightTime(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.equals(new float[]{},new float[]{}); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayName(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).removeFirstOccurrence(new lsp.test.jdk.util.AsciiUtil()); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new boolean[]{},0,0,false); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(),new int[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String(),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getCharacterOrientation(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).getSeconds(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayLanguage(new java.lang.String(),new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).get(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).getHours(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0l).getMonth(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Date(0l).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).remove(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).getMinimum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new byte[]{},0,0,(byte) 0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).or(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayKeywordValue(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().length(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList().trimToSize(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.AttributedString(null,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(null,null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).storeToXML(null,null,null); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.equals(new short[]{},new short[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayLanguage(new lsp.test.jdk.util.Locale(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(null).containsValue(new lsp.test.jdk.util.sql.Time(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(null,null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().getLocalPatternChars(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayKeywordValue(new java.lang.String(),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).compareTo(new lsp.test.jdk.util.sql.Date(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null).getAmPmStrings(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getName(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new long[]{},0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).setDate(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String(),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UnknownFormatConversionException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeSet(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayKeyword(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).size(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getISO3Language(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).before(new lsp.test.jdk.util.sql.Timestamp(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).setEndRule(0,0,0,0,false); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().set2DigitYearStart(new lsp.test.jdk.util.Date(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).set(0,0,false); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String(),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0).clone(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.canonicalize(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).getOffset(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String(null,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).setMinutes(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).toArray(); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.toTitleString(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(0).trimToSize(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayCountry(new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(new java.lang.String(null,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.setLogStream(new java.io.PrintStream(null,false)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).setStartRule(0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String(),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null).getFieldAttribute(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new java.lang.Object[]{},0,0,new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.hashCode(new byte[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getFallback(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String(),new java.lang.Throwable()); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.toString(new java.lang.Object[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.DataTruncation(0,false,false,0,0).getIndex(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap().size(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,new java.lang.String(null,0),0,0,0,0,0,0,0,0); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.getConnection(new java.lang.String(null,0,0,0),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar().getMinimum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).toString(); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.toUpperString(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).before(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).setNanos(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.Date.valueOf(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.addLikelySubtags(new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new long[]{},0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getBaseName(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().before(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.toLowerString(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IllegalFormatWidthException(0).getWidth(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.sort(new long[]{},0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).size(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.hashCode(new boolean[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Date(0,0,0).setHours(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).removeFirstOccurrence(new lsp.test.jdk.util.UUID(0l,0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.DataTruncation(0,false,false,0,0,null).getIndex(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.hashCode(new short[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.AttributedString(null,null).getIterator(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ParseException(null,0).getErrorOffset(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(0).size(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).equals(new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().applyPattern(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayCountry(new lsp.test.jdk.util.Locale(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException().getSQLState(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).length(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0,0).getMinimum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).andNot(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.AttributedString(null,0,0).getIterator(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(null,null,null).setNextException(new lsp.test.jdk.util.sql.SQLException(null,null,0,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UUID(0l,0l).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeSet().clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String(),new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().setMonth(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.hashCode(new java.lang.Object[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String(),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayScript(new java.lang.String(null,0),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(null).containsValue(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).flip(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String(),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.toString(new int[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String(null,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String(null,0,0,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).ensureCapacity(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).setEndRule(0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(null).toArray(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).toLocaleString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeMap().size(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.createBundle(null,null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Stack().search(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0,0,0).setDate(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new short[]{},0,0,(short) 0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(null).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLClientInfoException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Stack().empty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Annotation(new lsp.test.jdk.util.Annotation(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayName(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.toString(new float[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque().isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(0,0.0f).remove(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0).getGregorianChange(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(null,0),null,new int[]{},new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UUID(0l,0l).getLeastSignificantBits(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).getTime(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).removeFirstOccurrence(new lsp.test.jdk.util.DateFormatSymbols()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).getMonth(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IllegalFormatConversionException((char) 0,null).getMessage(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayName(new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0).setMinimalDaysInFirstWeek(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeSet().remove(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0l).getNanos(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(null).removeFirstOccurrence(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,new java.lang.String(null,0,0,0),0,0,0,0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).lastIndexOf(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String(),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0).hashCode(); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.isNumericString(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(0).contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).after(new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IllegalFormatFlagsException(null).getFlags(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.NoSuchElementException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).after(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IllegalFormatConversionException((char) 0,null).getConversion(); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.getConnection(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0l).compareTo(new lsp.test.jdk.util.sql.Timestamp(0l)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getAvailableULocales(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DuplicateFormatFlagsException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.DataTruncation(0,false,false,0,0,new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.NoSuchElementException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().toLocaleString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0).isLeapYear(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties().list(new java.io.PrintStream(null,false,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayVariant(new lsp.test.jdk.util.Locale(null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getCountry(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).compareTo(new lsp.test.jdk.util.sql.Time(0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.copyOf(new boolean[]{},0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null,null).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(null,null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String(null,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().equals(new lsp.test.jdk.util.FieldPosition(null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.UUID.fromString(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0).setGregorianChange(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String(null,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getVariant(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Locale.setDefault(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(null,null,null).setNextException(new lsp.test.jdk.util.sql.SQLNonTransientException(null,null,0,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.getConnection(new java.lang.String(),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String(),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String(null,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getBundleInstance(new java.lang.String(null,0),null,null,false); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayScript(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue(0).contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.setLogWriter(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String(),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().intersects(new lsp.test.jdk.util.BitSet()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0).getActualMaximum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.EventObject(new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getISO3Language(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayLanguage(new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeSet().size(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().or(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).setStartRule(0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getISO3Language(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).getProperty(null,null); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayKeywordValue(new java.lang.String(),new java.lang.String(null,0),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String(null,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue().remove(new lsp.test.jdk.util.Annotation(null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getBaseName(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).getOffset(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Observable().notifyObservers(new lsp.test.jdk.util.sql.Time(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLPermission(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.NoSuchElementException(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).inDaylightTime(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).setTime(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.Locale.getISOCountries(); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.RowIdLifetime.valueOf(new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.createCanonical(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Date(0l).setTime(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.setKeywordValue(null,null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(null,0,0,0),null,0,new int[]{},new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).removeFirstOccurrence(new lsp.test.jdk.util.FieldPosition(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().hashCode(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new java.lang.Object[]{},0,0,new lsp.test.jdk.util.Locale(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(null,null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).useDaylightTime(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap().containsKey(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().setLocalPatternChars(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).equals(new lsp.test.jdk.util.DateFormatSymbols(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0).setFirstDayOfWeek(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(null).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).setSeconds(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).setMonth(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).setDate(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(new java.lang.String(null,0),null,null); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getScript(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).getSeconds(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashMap(0).containsValue(new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0).isLeapYear(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.MissingFormatWidthException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null).getBeginIndex(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.copyOf(new double[]{},0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().setDateFormatSymbols(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).setStartRule(0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).contains(new lsp.test.jdk.util.DateFormatSymbols(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).removeLastOccurrence(new lsp.test.jdk.util.BitSet(0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new long[]{},0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).toLocaleString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).getDay(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).after(new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(0).containsKey(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayScript(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new java.lang.Object[]{},new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(null).size(); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.toUpperString(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayScript(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Annotation(null).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String(null,0,0,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null).getLanguage(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeMap().containsValue(new lsp.test.jdk.util.Date(0,0,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new int[]{},0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(0).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String(),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Observable().deleteObservers(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).getActualMinimum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UUID(0l,0l).clockSequence(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Date(0,0,0).toString(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.toString(new char[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String(null,0,0,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().set(0,0,false); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String(null,0,0,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String(),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).setStartRule(0,0,0,0,false); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new int[]{},new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String(null,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null,0).getBeginIndex(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).intersects(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.forLocale(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).setHours(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(0,0.0f).size(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).andNot(new lsp.test.jdk.util.BitSet()); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.isNumericString(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).useDaylightTime(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(0).getFieldAttribute(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).contains(new lsp.test.jdk.util.FieldPosition(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.Time.valueOf(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar().getGreatestMinimum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null,null).getDisplayCountry(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).get(0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).inDaylightTime(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).loadFromXML(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String(null,0,0,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayCountry(new lsp.test.jdk.util.Locale(null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.isAlphaNumericString(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.isAlphaString(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Currency.getInstance(new java.util.Locale(null,null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new char[]{},(char) 0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getKeywordValue(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String(null,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeSet().remove(new lsp.test.jdk.util.sql.Date(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().equals(new lsp.test.jdk.util.FieldPosition(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue(0,null).toArray(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null,null).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).getTime(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().set2DigitYearStart(new lsp.test.jdk.util.Date()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException().getNextException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getLanguage(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.sort(new int[]{},0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null).getDisplayLanguage(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().equals(new lsp.test.jdk.util.EventObject(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable().size(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).setSeconds(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet().contains(new lsp.test.jdk.util.Locale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(0,0.0f).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().setEras(new java.lang.String[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UUID(0l,0l).node(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getKeywordValue(new java.lang.String(null,0,0,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).getRawOffset(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).equals(new lsp.test.jdk.util.ParsePosition(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String(null,0,0,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(null).isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).hasSameRules(new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).cardinality(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Currency.getInstance(new java.util.Locale(null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.minimizeSubtags(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0l).setTime(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0).roll(0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.Throwable()); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayScript(new java.lang.String(null,0,0,0),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String(null,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String(null,0,0,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).removeFirstOccurrence(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).getTimezoneOffset(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null); } catch(Exception e) { }
        try { lsp.test.jdk.util.Date.UTC(0,0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UnknownFormatFlagsException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.MissingResourceException(null,null,null).getClassName(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null).getEras(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).add(0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties().save(null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(null,null,null).getErrorCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().applyLocalizedPattern(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).xor(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getKeywords(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).inDaylightTime(new lsp.test.jdk.util.Date()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null,0).getEndIndex(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String(null,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String(null,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(null,null,null).setNextWarning(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(null,null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).getGreatestMinimum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DuplicateFormatFlagsException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new java.lang.Object[]{},new lsp.test.jdk.util.Annotation(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ParseException(null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null,null).getVariant(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0,0,0).setYear(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.getDriver(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayName(); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.ClientInfoStatus.valueOf(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(null).remove(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0,0).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new java.lang.Object[]{},new lsp.test.jdk.util.Date(0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).getProperty(new java.lang.String(null,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null,0).hashCode(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getFullLocaleNameSet(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0).getGregorianChange(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.toString(new long[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).getMinutes(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayLanguage(new lsp.test.jdk.util.Locale(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).getTime(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).getMinutes(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String(null,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getKeywordValue(null,null); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayScript(new java.lang.String(),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getCountry(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(null).containsKey(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayCountry(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.EventObject(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayCountry(new lsp.test.jdk.util.Locale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).getDSTSavings(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new java.lang.Object[]{},new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String(null,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).getDay(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.Time.valueOf(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).equals(new lsp.test.jdk.util.AttributedString(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(),null,0,new int[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String(null,0,0,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String(),null,0); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.toString(new byte[]{}); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getLanguage(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).save(null,new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String(null,0,0,0),new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getAvailableLocaleNameSet(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).setEndRule(0,0,0,0,false); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.copyOf(new char[]{},0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().parse(new java.lang.String(null,0),null); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new double[]{},0.0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().equals(new lsp.test.jdk.util.Date(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).indexOf(new lsp.test.jdk.util.sql.Time(0l)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayLanguage(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String(null,0,0,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(0).setEndIndex(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(null).equals(new lsp.test.jdk.util.FieldPosition(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).remove(new lsp.test.jdk.util.AttributedString(null,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.forLocale(new lsp.test.jdk.util.Locale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null,null).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().set(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UUID(0l,0l).getMostSignificantBits(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar().getActualMinimum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String(null,0,0,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null).getDisplayCountry(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String(null,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).remove(new lsp.test.jdk.util.Locale(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String(),new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayKeyword(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).setStartRule(0,0,0,0,false); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.hashCode(new double[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).getHours(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).getMonth(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0,0,0).getDay(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).containsKey(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getKeywordValues(null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(null).containsValue(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.deepToString(new java.lang.Object[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.NoSuchElementException(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).setMonth(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayName(new java.lang.String(),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Observable().hasChanged(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().set(0,false); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String(null,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).useDaylightTime(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String(null,0,0,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.toTitleString(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(null,null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().compareTo(new lsp.test.jdk.util.sql.Time(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(0).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(0).setBeginIndex(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.RowIdLifetime.valueOf(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.toUpperString(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getAvailableLocales(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar().getLeastMaximum(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().format(new lsp.test.jdk.util.sql.Time(0l),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).toArray(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String(null,0,0,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).getOffset(0,0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String(),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String(null,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.canonicalize(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(0).isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).equals(new lsp.test.jdk.util.sql.Timestamp(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(null,null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).nextClearBit(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.MissingFormatArgumentException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String(),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.MissingResourceException(null,null,null).getKey(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).before(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.UUID.fromString(new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getAvailableLocaleNameSet(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).removeLastOccurrence(new lsp.test.jdk.util.sql.Time(0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(null).size(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String(null,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Annotation(null).getValue(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).setHours(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UUID(0l,0l).variant(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(0).remove(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).clear(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new java.lang.Object[]{},0,0,new lsp.test.jdk.util.AsciiUtil()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UnknownFormatFlagsException(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.MissingFormatArgumentException(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(null,0),new int[]{},new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.isAlphaString(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException().getUpdateCounts(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.canonicalize(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IllegalFormatCodePointException(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.Locale.setDefault(new lsp.test.jdk.util.Locale(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).after(new lsp.test.jdk.util.Date(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayKeywordValue(new java.lang.String(null,0,0,0),new java.lang.String(null,0,0,0),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayLanguage(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayCountry(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new short[]{},(short) 0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0l).after(new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null,null).getDisplayCountry(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(null).remove(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).hasSameRules(new lsp.test.jdk.util.SimpleTimeZone(0,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.sort(new double[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientException(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).compareTo(new lsp.test.jdk.util.Date()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null,null).getCountry(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayKeyword(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayName(new lsp.test.jdk.util.Locale(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet().remove(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLPermission(null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).setTime(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.equals(new java.lang.Object[]{},new java.lang.Object[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet().contains(new lsp.test.jdk.util.EventObject(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.DataTruncation(0,false,false,0,0,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(0).size(); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.toLowerString(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayKeywordValue(new java.lang.String(null,0),new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).getOffset(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(0).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet().isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(null).containsKey(new lsp.test.jdk.util.UUID(0l,0l)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getKeywordValue(new java.lang.String(),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).setMinutes(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().or(new lsp.test.jdk.util.BitSet(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList().removeLastOccurrence(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IllegalFormatWidthException(0).getMessage(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayKeywordValue(new java.lang.String(null,0)); } catch(Exception e) { }
        //try { new lsp.test.jdk.util.AttributedString(null,null).getIterator(new lsp.test.jdk.util.AttributedCharacterIterator$Attribute[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null,null).getLanguage(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String(null,0,0,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).after(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).compareTo(new lsp.test.jdk.util.Date(0l)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.hashCode(new long[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.sort(new char[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().intersects(new lsp.test.jdk.util.BitSet(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String(),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).contains(new lsp.test.jdk.util.Locale(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).setStartYear(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).setStartRule(0,0,0,0,false); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).getProperty(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String(),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getLineOrientation(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).getDate(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).setEndRule(0,0,0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayKeyword(new java.lang.String(null,0,0,0),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(null,null,0,null,null).getUpdateCounts(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().clear(0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).setRawOffset(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).getDSTSavings(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Observable().deleteObserver(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String(null,0,0,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.MissingResourceException(new java.lang.String(null,0,0,0),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(null,null,null).getNextWarning(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().setDateFormatSymbols(new lsp.test.jdk.util.DateFormatSymbols()); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new char[]{},0,0,(char) 0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(new lsp.test.jdk.util.SimpleTimeZone(0,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).setEndRule(0,0,0,0,false); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(null,null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).setEndRule(0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.EventObject(new lsp.test.jdk.util.Locale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0).containsValue(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.createCanonical(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().applyLocalizedPattern(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).equals(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.copyOf(new int[]{},0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(null,null,0).setNextWarning(new lsp.test.jdk.util.sql.DataTruncation(0,false,false,0,0,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.EventObject(null).getSource(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(new lsp.test.jdk.util.Properties()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().equals(new lsp.test.jdk.util.AttributedString(null,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayLanguage(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(null,null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).containsValue(new lsp.test.jdk.util.sql.Timestamp(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().setYear(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.Date.parse(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.minimizeSubtags(new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap().containsValue(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UUID(0l,0l).equals(new lsp.test.jdk.util.BitSet(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(0).clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat(new java.lang.String(null,0,0,0),new lsp.test.jdk.util.DateFormatSymbols(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().getDay(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String(null,0,0,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(0).isEmpty(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayKeywordValue(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getISO3Country(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayCountry(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList().size(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String(null,0,0,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(null,null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ServiceConfigurationError(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(0).clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList().remove(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ParsePosition(0).getIndex(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String(null,0,0,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().and(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).storeToXML(null,new java.lang.String(),null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).setSeconds(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Date(0l).setHours(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ParsePosition(0).setIndex(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashMap(0,0.0f,false).containsValue(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayKeywordValue(null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).getMinutes(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.InputMismatchException(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.copyOf(new short[]{},0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).setEndRule(0,0,0,0,false); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null,null).getDisplayVariant(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null,0).getFieldAttribute(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).before(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.MissingResourceException(new java.lang.String(null,0),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null,null).getISO3Country(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ParseException(new java.lang.String(null,0),0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String(),new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0,0).isLeapYear(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IllegalFormatPrecisionException(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null).getShortWeekdays(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0,0,0).setEndRule(0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getLanguage(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.toString(new double[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().applyPattern(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(null,null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayKeywordValue(new java.lang.String(),new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UUID(0l,0l).hashCode(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayKeywordValue(new java.lang.String(),new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(null).containsValue(new lsp.test.jdk.util.UUID(0l,0l)); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.toTitleString(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().nextClearBit(0); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new float[]{},0,0,0.0f); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getISO3Language(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.Throwable()); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.acceptLanguage(new java.lang.String(),new lsp.test.jdk.util.ULocale[]{},new boolean[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.AttributedString(null,0,0).addAttribute(null,new lsp.test.jdk.util.AsciiUtil()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).size(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar().equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayScript(new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UUID(0l,0l).equals(new lsp.test.jdk.util.DateFormatSymbols()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(null).equals(new lsp.test.jdk.util.AttributedString(null,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap(); } catch(Exception e) { }
        //try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).compareTo(new lsp.test.jdk.util.Annotation(null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getScript(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.MissingFormatWidthException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).remove(new lsp.test.jdk.util.BitSet(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).containsValue(new java.lang.Object()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList().contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(null).containsKey(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(null,null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashMap().clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().setDateFormatSymbols(new lsp.test.jdk.util.DateFormatSymbols(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new java.lang.Object[]{},0,0,new lsp.test.jdk.util.Date(0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String(),new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList().clear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).lastIndexOf(new lsp.test.jdk.util.sql.Timestamp(0l)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.sort(new int[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UUID(0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Date(0l).getSeconds(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLRecoverableException(new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().set2DigitYearStart(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).removeFirstOccurrence(new lsp.test.jdk.util.Date(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat(new java.lang.String(),new lsp.test.jdk.util.Locale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).lastIndexOf(new lsp.test.jdk.util.Date(0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().getHours(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.DataTruncation(0,false,false,0,0,null).getRead(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).list(new java.io.PrintStream(null,false)); } catch(Exception e) { }
        try { lsp.test.jdk.util.UUID.randomUUID(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).before(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null).getDisplayName(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(null,null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String(null,0,0,0),null,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UnknownFormatConversionException(null).getConversion(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).intersects(new lsp.test.jdk.util.BitSet(0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getName(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashMap(0,0.0f); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Stack().search(new lsp.test.jdk.util.UUID(0l,0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.MissingFormatArgumentException(new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).equals(new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(new java.lang.String(),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Annotation(new lsp.test.jdk.util.EventObject(null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.getLoginTimeout(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque().toArray(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String(null,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayVariant(new java.lang.String(null,0,0,0),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().setShortMonths(new java.lang.String[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).equals(new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(0,0,0,0,0,0).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).getYear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransactionRollbackException(new java.lang.String(null,0,0,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable().contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayVariant(new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(0).indexOf(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList().ensureCapacity(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet().size(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0l).setMonth(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getScript(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IllegalFormatPrecisionException(0).getPrecision(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.TreeMap().containsValue(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ParsePosition(0).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.Timestamp.valueOf(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashMap().containsValue(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedHashMap(null).containsValue(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(null,0,0,0),new int[]{},new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(null).getTimezoneOffset(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLSyntaxErrorException(null,null,0); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.RES_GET_TYPE(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null).clone(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Date.parse(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0).before(new lsp.test.jdk.util.Date(0,0,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList().clear(); } catch(Exception e) { }
        try { lsp.test.jdk.util.UUID.fromString(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDefault(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.fill(new short[]{},0,0,(short) 0); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.isNumericString(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(new java.lang.String(),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0).contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IllegalFormatPrecisionException(0).getMessage(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getLanguage(new java.lang.String()); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.acceptLanguage(new lsp.test.jdk.util.ULocale[]{},new boolean[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).getDate(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque(0).removeFirstOccurrence(new lsp.test.jdk.util.BitSet(0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.binarySearch(new byte[]{},0,0,(byte) 0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLDataException(null,null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).indexOf(new lsp.test.jdk.util.AttributedString(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String(null,0),new java.lang.Throwable()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null).getRawOffset(); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.sort(new float[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.GregorianCalendar(null,null).getGregorianChange(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().formatToCharacterIterator(new lsp.test.jdk.util.Date(null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0,0).setDSTSavings(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(null,null,0).setNextWarning(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet().clone(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols().setZoneStrings(new java.lang.String[][]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLNonTransientConnectionException(new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.getConnection(new java.lang.String(null,0),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date().equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLException(null,null,0).getSQLState(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getFunctionalEquivalent(new java.lang.String(null,0,0,0),null,null,null,new boolean[]{},false); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(0).size(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.IdentityHashMap(null).clear(); } catch(Exception e) { }
        try { lsp.test.jdk.util.sql.DriverManager.getConnection(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet().remove(new lsp.test.jdk.util.JDKTest()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayDeque().contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0,0).getYear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.BitSet(0).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLFeatureNotSupportedException(new java.lang.String(null,0,0,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null).getDisplayCountry(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Timestamp(0,0,0,0,0,0,0).compareTo(new lsp.test.jdk.util.sql.Time(0l)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLWarning(new java.lang.String(null,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLIntegrityConstraintViolationException(new java.lang.String(null,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Observable().addObserver(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getVariant(new java.lang.String(null,0,0,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Properties(null).storeToXML(null,new java.lang.String()); } catch(Exception e) { }
        try { new lsp.test.jdk.util.UUID(0l,0l).compareTo(new lsp.test.jdk.util.UUID(0l,0l)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getBaseName(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.HashSet(0).contains(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.Time(0,0,0).setMonth(0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.DateFormatSymbols(null).setEras(new java.lang.String[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).getYear(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Hashtable(0,0.0f).hashCode(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayKeyword(new java.lang.String(),new lsp.test.jdk.util.ULocale(null,null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ParsePosition(0).hashCode(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleTimeZone(0,null,0,0,0,0,0,0,0,0).getOffset(0,0,0,0,0,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLInvalidAuthorizationSpecException(new java.lang.String(null,0,0,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { lsp.test.jdk.util.Arrays.sort(new short[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.DataTruncation(0,false,false,0,0,null).getParameter(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(null,0),null,0,new int[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0,0,0,0,0).compareTo(new lsp.test.jdk.util.sql.Time(0,0,0)); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getAvailableULocales(null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ConcurrentModificationException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Observable().notifyObservers(new lsp.test.jdk.util.Date()); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.createBundle(new java.lang.String(),null,null); } catch(Exception e) { }
        try { new lsp.test.jdk.util.SimpleDateFormat().applyLocalizedPattern(new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ULocale(null,null,null).getDisplayCountry(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.acceptLanguage(new java.lang.String(null,0,0,0),new boolean[]{}); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientException(new java.lang.String(null,0,0,0),new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Locale(null,null).getISO3Country(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.ArrayList(null).indexOf(new lsp.test.jdk.util.BitSet(0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.Date(0l).toString(); } catch(Exception e) { }
        try { new lsp.test.jdk.util.PriorityQueue().size(); } catch(Exception e) { }
        try { lsp.test.jdk.util.ICUResourceBundle.getBundleInstance(new java.lang.String(),null,null,false); } catch(Exception e) { }
        try { new lsp.test.jdk.util.FieldPosition(0).equals(new lsp.test.jdk.util.sql.DriverPropertyInfo(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.LinkedList(null).indexOf(new lsp.test.jdk.util.sql.Timestamp(0l)); } catch(Exception e) { }
        try { lsp.test.jdk.util.AsciiUtil.isAlphaNumericString(null); } catch(Exception e) { }
        try { lsp.test.jdk.util.ULocale.getDisplayVariant(new java.lang.String(null,0,0,0),new java.lang.String(null,0)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTimeoutException(new java.lang.String(null,0),null,0,new java.lang.Throwable(null,null)); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.SQLTransientConnectionException(new java.lang.String(null,0),null,0); } catch(Exception e) { }
        try { new lsp.test.jdk.util.sql.BatchUpdateException(new java.lang.String(null,0,0,0),new java.lang.String(null,0,0,0),new int[]{}); } catch(Exception e) { }
    }
}

