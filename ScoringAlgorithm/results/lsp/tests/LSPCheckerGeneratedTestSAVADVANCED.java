package lsp.tests;

/** Test case generated by the LSP checker; feel free to hack it! */
@SuppressWarnings({"unchecked", "deprecation"})
public class LSPCheckerGeneratedTestSAVADVANCED
{
    public static void main(String[] args)
    {
        try { new lsp.test.savadvanced.Subclass().precond(new lsp.test.savadvanced.MyDummyImplementation1()); } catch(Exception e) { }
        try { new lsp.test.savadvanced.Superclass().precond(new lsp.test.savadvanced.MyDummyImplementation1()); } catch(Exception e) { }
        try { new lsp.test.savadvanced.MyDummyImplementation1(); } catch(Exception e) { }
        try { new lsp.test.savadvanced.Superclass(); } catch(Exception e) { }
        try { new lsp.test.savadvanced.Subclass().precond(new lsp.test.savadvanced.MyDummyImplementation2()); } catch(Exception e) { }
        try { new lsp.test.savadvanced.Subclass().precond(null); } catch(Exception e) { }
        try { new lsp.test.savadvanced.MyDummyImplementation2(); } catch(Exception e) { }
        try { new lsp.test.savadvanced.MyDummyImplementation2().doWork(); } catch(Exception e) { }
        try { new lsp.test.savadvanced.Superclass().precond(new lsp.test.savadvanced.MyDummyImplementation2()); } catch(Exception e) { }
        try { new lsp.test.savadvanced.MyDummyImplementation1().check(0); } catch(Exception e) { }
        try { new lsp.test.savadvanced.Subclass(); } catch(Exception e) { }
        try { new lsp.test.savadvanced.MyDummyImplementation1().doWork(); } catch(Exception e) { }
        try { new lsp.test.savadvanced.Superclass().precond(null); } catch(Exception e) { }
        try { new lsp.test.savadvanced.MyDummyImplementation2().check(0); } catch(Exception e) { }
    }
}

