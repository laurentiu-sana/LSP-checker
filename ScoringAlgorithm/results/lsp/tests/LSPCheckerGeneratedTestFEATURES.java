package lsp.tests;

import lsp.test.features.DeepPostconditions;
import lsp.test.features.DeepPreconditions;
import lsp.test.features.MultiplePostconditionsSubclass;
import lsp.test.features.MultiplePostconditionsSuperclass;
import lsp.test.features.MultiplePreconditions;
import lsp.test.features.SubClass;
import lsp.test.features.SuperClass;

/** Test case generated by the LSP checker; feel free to hack it! */
@SuppressWarnings({"unchecked", "deprecation"})
public class LSPCheckerGeneratedTestFEATURES
{
    public static void main(String[] args)
    {
    	(new DeepPreconditions()).foo(0);
    	(new DeepPostconditions()).foo(0);
    	(new DeepPreconditions()).bar(0);
    	(new DeepPostconditions()).bar(0);
    	
		(new SubClass()).preconditions(0);
		(new SuperClass()).preconditions(0);

		(new SuperClass()).postconditions(0);
		(new SubClass()).postconditions(0);
		
		(new MultiplePreconditions()).simplePreconditions(new SuperClass(), 0);
		(new MultiplePreconditions()).simplePreconditions(new SubClass(), 0);

		(new MultiplePreconditions()).simpleInterfacePreconditions(new SuperClass(), 0);
		(new MultiplePreconditions()).simpleInterfacePreconditions(new SubClass(), 0);

		
		(new MultiplePostconditionsSubclass()).simplePostconditions(new SuperClass(), 0);
		(new MultiplePostconditionsSubclass()).simplePostconditions(new SubClass(), 0);
		
		(new MultiplePostconditionsSubclass()).simpleInterfacePostconditions(new SuperClass(), 0);
		(new MultiplePostconditionsSubclass()).simpleInterfacePostconditions(new SubClass(), 0);
    }
}

